<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>枯萎的花将在另一彼岸悄然绽放</title>
        <subtitle></subtitle>
        <icon>https://yunhdan.github.io/images/favicon.ico</icon>
        <link>https://yunhdan.github.io</link>
        <author>
          <name>Runhua Deng</name>
        </author>
        <description>计算机视觉 &amp; 图像恢复</description>
        <language>zh-CN</language>
        <pubDate>Wed, 13 Aug 2025 16:37:55 +0800</pubDate>
        <lastBuildDate>Wed, 13 Aug 2025 16:37:55 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%84%E6%88%90/</guid>
            <title>计算机系统组成</title>
            <link>https://yunhdan.github.io/cs/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%84%E6%88%90/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Wed, 13 Aug 2025 16:37:55 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;有用的计算机系统知识，欢迎来闯关！&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;概论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概论&#34;&gt;#&lt;/a&gt; 概论&lt;/h1&gt;
&lt;ol&gt;
&lt;li class=&#34;quiz multi&#34;&gt;冯诺依曼体系结构三大思想为？
&lt;ul class=&#34;options&#34;&gt;
&lt;li class=&#34;correct&#34;&gt;计算机硬件系统由运算器、存储器、控制器、输入设备、输出设备 5 大部件组成。&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;“存储程序”：指令和数据以同等地位存储在存储器中。&lt;/li&gt;
&lt;li class=&#34;correct&#34;&gt;指令和数据均用二进制表示。&lt;/li&gt;
&lt;li&gt;以输入设备和输出设备为中心。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;“存储程序” 的概念是指将指令事先输入计算机的主存，然后取程序在主存的首地址来执行程序的第一条指令，按程序规定的顺序执行其他指令，直到程序结束。&lt;/p&gt;
&lt;p&gt;这揭示了计算机的工作过程：1）把程序和数据存入主存。2）把主存的源程序转换为可执行文件。3）从可执行文件的首地址开始逐条执行指令。&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;计算机系统结构层次从高到低分为：应用软件级、高级语言级、汇编语言级、操作系统级、机器语言级、硬件逻辑级。&lt;/p&gt;
&lt;/div&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li class=&#34;quiz false&#34;&gt;
&lt;p&gt;编译是将源程序翻译为可执行的目标程序，也就是汇编语言文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目标程序文件是二进制的机器语言文件。&lt;br /&gt;
编译包含了汇编过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回顾一下，java 虚拟机 jvm 的作用是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;details class=&#34;success&#34;&gt;&lt;summary&gt;答案&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;java 程序并不一步到位编译为目标程序，而是先编译成中间文件字节码，即.class 文件，然后再用解释的方式一条一条执行。而 JVM 的作用就是作为一个中介将字节码逐条解释为目标代码，然后执行。&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;描述一下指令的执行过程和程序的执行过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;details class=&#34;success&#34;&gt;&lt;summary&gt;答案&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;指令的执行过程：&lt;br /&gt;
取指：到 PC 取指令的地址，然后在主存中取出指令内容，最终送入指令寄存器 IR。&lt;br /&gt;
分析指令：控制器根据 IR 译码后送出控制信号。&lt;br /&gt;
执行指令：控制器根据控制信号在主存取出操作数，在运算器完成指令。&lt;/p&gt;
&lt;p&gt;程序的执行过程：&lt;br /&gt;
程序的第一条指令在 PC 中被取出，经过分析和执行后，通过第一条指令的地址计算出下一条指令的地址，用新得到的指令地址继续读出第二条指令并执行，直到程序结束。&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;计算机主要四大性能指标：机器字长、数据通路带宽、主存容量、运算速度。运算速度有吞吐量、响应时间、时钟周期、主频、CPI 等指标。&lt;/p&gt;
&lt;/div&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li class=&#34;quiz false&#34;&gt;
&lt;p&gt;数据通路带宽是指数据总线一次所能串行传送信息的位数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;带宽是衡量并行传送信息的能力指标。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li class=&#34;quiz true&#34;&gt;
&lt;p&gt;主存容量可以用字数&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.66666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 字长（如 512K$\times$16 位）来表示。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;吞吐量是指系统单位时间内处理请求或指令的数量。&lt;br /&gt;
相应时间是指用户向系统发送一个请求，到计算机对该请求做出相应并获得结果的时间。&lt;/p&gt;
&lt;/div&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li class=&#34;quiz true&#34;&gt;
&lt;p&gt;CPU 最小的时间单位是时钟周期，又称为节拍脉冲。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么是 CPI？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;details class=&#34;success&#34;&gt;&lt;summary&gt;答案&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;英文全名叫 Clock cycle Per Instruction，即执行一条指令所需的时钟周期数。&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/book/%E3%80%8A%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92%E3%80%8B/</guid>
            <title>《认知觉醒》</title>
            <link>https://yunhdan.github.io/book/%E3%80%8A%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92%E3%80%8B/</link>
            <category term="读书" scheme="https://yunhdan.github.io/categories/book/" />
            <pubDate>Thu, 07 Aug 2025 14:55:47 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;认知觉醒开启自我改变的原动力&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#认知觉醒开启自我改变的原动力&#34;&gt;#&lt;/a&gt; &lt;strong&gt;《认知觉醒：开启自我改变的原动力》&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;周岭&lt;/p&gt;
&lt;h3 id=&#34;第一章-大脑一切问题的起源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一章-大脑一切问题的起源&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第一章 大脑 —— 一切问题的起源&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;为了适应陆地生活，爬行动物演化出了最初的 “本能脑”。本能脑的结构很简单，只有一个原始的反射模块，可以让爬行动物对环境快速做出本能反应，比如遇到危险就战斗或逃跑，遇到猎物就捕食，遇到心仪的异性就追求等。&lt;/li&gt;
&lt;li&gt;哺乳动物的大脑里也发展出一个独特的情感区域（边缘系统），脑科学家称之为 “情绪脑”&lt;/li&gt;
&lt;li&gt;人类沉迷于自己独有的理智，所以把这个新的脑区称为 “理智脑”&lt;/li&gt;
&lt;li&gt;本能脑已经有近 3.6 亿年的历史，情绪脑有近 2 亿年的历史，而理智脑出现的时间只有 250 万年不到。&lt;/li&gt;
&lt;li&gt;本能脑早在婴儿时期就比较完善了，情绪脑则要等到青春期早期才趋于完善，而理智脑最晚，要等到成年早期才基本发育成熟。&lt;/li&gt;
&lt;li&gt;我们的大脑里大约有 860 亿个神经元细胞，而本能脑和情绪脑拥有近八成，所以它们对大脑的掌控力更强。&lt;/li&gt;
&lt;li&gt;种种迹象表明，理智脑对大脑的控制能力很弱，所以我们在生活中做的大部分决策往往源于本能和情绪，而非理智。当然，不管是何种因素影响我们做出决策，初衷都是让我们好，只不过本能脑和情绪脑的决策往往与现代社会脱节，因为它们以为自己还处于原始社会。&lt;/li&gt;
&lt;li&gt;进化之手还未来得及完全改造我们，这些在远古社会具有生存优势的天性，在现代社会反而成了阻碍，甚至可以说，我们当前遇到的几乎所有的成长问题都可以归结到目光短浅、即时满足的天性上，不过在现代社会，用避难趋易和急于求成来代指它们显然更加贴切。&lt;/li&gt;
&lt;li&gt;避难趋易 —— 只做简单和舒适的事，喜欢在核心区域周边打转，待在舒适区内逃避真正的困难；&lt;/li&gt;
&lt;li&gt;急于求成 —— 凡事希望立即看到结果，对不能马上看到结果的事往往缺乏耐心，非常容易放弃。&lt;/li&gt;
&lt;li&gt;事实上理智脑很少有主见，大多数时候我们以为自己在思考，其实都是在对自身的行为和欲望进行合理化，这正是人类被称作 “自我解释的动物” 的原因。&lt;/li&gt;
&lt;li&gt;理智脑发达的人更能：・立足长远，主动走出舒适区；・为潜在的风险克制自己，为可能的收益延时满足；・保持耐心，坚持做那些短期内看不到效果的 “无用之事”；・抵制诱惑，面对舒适和娱乐时，做出与其他人不同的选择……&lt;/li&gt;
&lt;li&gt;习惯之所以难以改变，就是因为它是自我巩固的 —— 越用越强，越强越用。要想从既有的习惯中跳出来，最好的方法不是依靠自制力，而是依靠知识&lt;/li&gt;
&lt;li&gt;很多人在成长的过程中感到极度痛苦，就是因为他们总是用意志力去对抗本能和情绪，最后把自己搞得精疲力竭，却收效甚微&lt;/li&gt;
&lt;li&gt;无论个体还是群体，人类的安全感都源于自己在某一方面拥有的独特优势：或能力，或财富，或权力，或影响力。&lt;/li&gt;
&lt;li&gt;归结起来，焦虑的原因就两条：想同时做很多事，又想立即看到效果。&lt;/li&gt;
&lt;li&gt;焦虑就是因为欲望与能力之间差距过大。&lt;/li&gt;
&lt;li&gt;焦虑是天性，是人类的默认设置。&lt;/li&gt;
&lt;li&gt;克制欲望，不要让自己同时做很多事；・面对现实，看清自己真实的能力水平；・要事优先，想办法只做最重要的事情；・接受环境，在局限中做力所能及的事；・直面核心，狠狠逼自己一把去突破它。&lt;/li&gt;
&lt;li&gt;很多时候，我们对困难的事物缺乏耐心是因为看不到全局、不知道自己身在何处，所以总是拿着天性这把短视之尺到处衡量，以为做成一件事很简单。事实上，如果我们能了解一些事物发展的基本规律，改用理性这把客观之尺，则会极大地提升耐心。&lt;/li&gt;
&lt;li&gt;舒适区边缘另一个重要的规律是它揭示了能力成长的普遍法则：无论个体还是群体，其能力都以 “舒适区 — 拉伸区￼— 困难区” 的形式分布，要想让自己高效成长，必须让自己始终处于舒适区的边缘，贸然跨到困难区会让自己受挫，而始终停留在舒适区会让自己停滞（见图 1-4）。 ￼&lt;/li&gt;
&lt;li&gt;对于学习而言，学习之后的思考、思考之后的行动、行动之后的改变更重要，如果不盯住内层的改变量，那么在表层投入再多的学习量也会事倍功半；因此，从权重上看，改变量﹥行动量﹥思考量﹥学习量（见图 1-5）。&lt;/li&gt;
&lt;li&gt;另一个值得关注的微观规律是学习的平台期。这个规律表明，学习进展和时间的关系并不是我们想象中的那种线性关系（学多少是多少），而是呈现一种波浪式上升曲线（见图 1-6）。 ￼&lt;/li&gt;
&lt;li&gt;在平台期，我们可能付出了大量的努力，但看起来毫无进步，甚至可能退步，不过这仅仅是一个假象，因为大脑中的神经元细胞依旧在发生连接并被不停地巩固，到了某一节点后，就会进入下一个快速上升阶段。&lt;/li&gt;
&lt;li&gt;当我们清楚了上述规律之后，就能在面对长期的冷寂或挫折失败时做出与他人不同的选择：有人选择放弃，而我们继续坚持。同时，我们不会因自己进步缓慢而沮丧，也不会因别人成长迅速而焦虑。就像写公众号，有耐心的人会牢牢盯住长远价值，他们的目光在 5 年、10 年之后，所以不会因眼下文章的阅读量低而缺失动力，也不会因别人写出了 10W + 的文章（一篇文章的阅读量达到 10 万以上）而焦虑不安，毕竟各自所处的阶段不同，只要持续创造价值，别人的今天就是自己的明天。&lt;/li&gt;
&lt;li&gt;耐心不是毅力带来的结果，而是具有长远目光的结果。&lt;/li&gt;
&lt;li&gt;舒适和诱惑是本能脑与情绪脑的最爱，完全放弃舒适和诱惑就相当于和本能脑、情绪脑直接对抗，很显然，理智脑不是它们的对手，失败是迟早的事。明智的做法是和它们沟通，这也是理智脑最擅长的。就像上面自己和自己对话一样，温和地告诉它们：“该有的享受一点都不会少，只是不是现在享受，而是在完成重要的事情之后。” 这是一个有效的策略，因为放弃享受，它们是不会同意的，但延迟享受，它们是能接受的。&lt;/li&gt;
&lt;li&gt;这种 “后娱乐” 的好处是，将享乐的快感建立在完成重要任务后的成就感之上，很放松、踏实，就像一种奖赏；而 “先娱乐” 虽然刚开始很快活，但精力会无限发散，拖延重要的工作，随着时间的流逝，人会空虚、焦虑。&lt;/li&gt;
&lt;li&gt;耐心就是这样，不能急于求成，允许自己缓慢地改变，甚至经常失败。无论结果如何，和自己对话都会产生效果。&lt;/li&gt;
&lt;li&gt;要想办法看清那些想做之事的意义和好处，你看到的维度越多，耐心就会越强。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第二章-潜意识生命留给我们的彩蛋&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二章-潜意识生命留给我们的彩蛋&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第二章 潜意识 —— 生命留给我们的彩蛋&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;人生也像是一场消除模糊的比赛，谁的模糊越严重，谁就越混沌；谁的模糊越轻微，谁就越清醒。&lt;/li&gt;
&lt;li&gt;而具体事件一旦变模糊，其边界就会无限扩大，原本并不困难的小事，也会在模糊的潜意识里变得难以解决。&lt;/li&gt;
&lt;li&gt;真正的困难总比想象的要小很多。人们拖延、纠结、畏惧、害怕的根本原因往往不是事情本身有多难，而是内心的想法变得模糊。&lt;/li&gt;
&lt;li&gt;记住，任何痛苦事件都不会自动消失，哪怕再小的事情也是如此。要想不受其困扰，唯一的办法就是正视它、看清它、拆解它、化解它，不给它进入潜意识的机会，不给它变模糊的机会；即使已经进入潜意识，也要想办法将它挖出来。所以，当你感到心里有说不清、道不明的难受的感觉时，赶紧坐下来，向自己提问。・到底是什么让自己烦躁不安？是上台演讲、会见某人，还是思绪纷乱？・具体是什么让自己恐惧担忧？是能力不足、准备不够，还是害怕某事发生？・面对困境，我能做什么？不能做什么？如果做不到或搞砸了，最坏的结果是什么？ 一层层挖下去，直到挖不动为止。坦然地承认、接纳那些难以启齿的想法，让情绪极度透明。虽然直面情绪不会让痛苦马上消失，甚至短时间内还会加剧痛苦，但这会让你主导形势，至少不会被情绪无端恐吓。 恐惧就是一个欺软怕硬的货色，你躲避它，它就张牙舞爪，你正视它，它就原形毕露。一旦把它看得清清楚楚，情绪就会慢慢从潜意识中消散，你的生活将会舒畅无比。&lt;/li&gt;
&lt;li&gt;行动力不足的真正原因是选择模糊。 所谓选择模糊，就是我们在面对众多可能性时无法做出清晰、明确的选择。&lt;/li&gt;
&lt;li&gt;当我们的头脑中有很多模糊的选项时，我们就会不自觉地选择那个最清晰、简单和确定的选项。也就是说，当我们没有足够清晰的指令或者目标时，就很容易选择享乐，放弃那些本该坚持但比较烧脑的选项。 因此，在现代生活中，要想让自己更胜一筹，就必须学会花费更多的脑力和心力去思考如何拥有足够清晰的目标。我们要把目标和过程细化、具体化，在诸多可能性中建立一条单行通道，让自己始终处于 “没得选” 的状态。￼&lt;/li&gt;
&lt;li&gt;“凭感觉” 之所以被称为顶级的方法，是因为它能帮我们感知真正适合自己并需要的东西，让自己处于学习的 “拉伸区”。如果单纯运用理性，我们通常会向优等生看齐，把眼光放在那些最难的题目上，想着如何追赶他们；如果顺从天性，我们就会在最简单的题目上打转（见图 2-1）。 ￼ 图 2-1　理性、感性、天性的选择倾向&lt;/li&gt;
&lt;li&gt;读书方法 —— 只取一个全书最触动自己的点，然后尽可能去实践、改变。这样读书不仅收获更大，而且也不会焦虑。&lt;/li&gt;
&lt;li&gt;学习虽然不是一件轻松的事，但在合适的区域内，我们依旧可以体验到轻松和有趣，如果你感受到的总是痛苦和无趣，那十有八九是感觉不对 —— 要么在困难区煎熬，要么在舒适区打转。&lt;/li&gt;
&lt;li&gt;理智的分析和计算无法解出内心的真正需求，唯有感性的觉知和洞察才能让答案浮出水面。&lt;/li&gt;
&lt;li&gt;直视死亡可以简化一切事物，让自己把注意力重新集中在真正重要的事情上；对于你喜欢的人物，不管是虚构的还是真实的，只要让你深深地着迷，就可以从这些人物身上反射出内心理想的自己&lt;/li&gt;
&lt;li&gt;小事听从你的脑，大事听从你的心。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第三章-元认知人类的终极能力&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三章-元认知人类的终极能力&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第三章 元认知 —— 人类的终极能力&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;高级的元认知 —— 时刻帮你从高处、深处、远处看待现在的自己，让自己保持清醒、不迷失，保持动力、不懈怠，保持平和、不冲动。&lt;/li&gt;
&lt;li&gt;冥想就是那种只要静坐在某处，然后放松身体，把注意力完全集中到呼吸和感受上的活动。 冥想带来的极度专注可以帮大脑做健身操。通过持续锻炼，大脑可以直接从物理上提升人的元认知能力，如果过程中觉察到自己走神了，我们只需柔和地将注意力拉回来。&lt;/li&gt;
&lt;li&gt;反馈是这个世界的进化机制。有反馈，并形成回路，就可能使任何系统开始自我进化，无论机械设计还是软件系统都是如此。&lt;/li&gt;
&lt;li&gt;元认知能力就是觉察力和自控力的组合。所以从实用角度讲，元认知能力可以被重新定义为：自我审视、主动控制，防止被潜意识左右的能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第四章-专注力情绪和智慧的交叉地带&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四章-专注力情绪和智慧的交叉地带&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第四章 专注力 —— 情绪和智慧的交叉地带&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;目标定义越明确，注意力的感知精度就会越高，精力越集中，技能越精进。如果目标太大，那就将它分解成小目标，这样做也是为了使目标更具体、精细。&lt;/li&gt;
&lt;li&gt;在短时间内投入 100% 的精力比长时间投入 70% 的精力好，因为专注的真正动力并不是毅力和耐心，而是不断发现技巧上的微妙差异和持续存在的关注点，精力越集中则感知越细微。&lt;/li&gt;
&lt;li&gt;先保持极度专注，想不出答案时再将注意力转换到另一件与此毫不相干的事情上。即事前聚精会神，让意识极度投入；事后完全忘记，让意识彻底撒手。这样，灵感和答案就会大概率地出现。&lt;/li&gt;
&lt;li&gt;当人们对当前的活动感到厌倦时，说明应该提高难度；当人们对当前的活动感到焦虑时，说明应该保持这个水平专注练习，如此反复交替就可以让自己进入心流通道，沉浸其中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第五章-学习力学习不是一味地努力&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五章-学习力学习不是一味地努力&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第五章 学习力 —— 学习不是一味地努力&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;“教” 是最好的 “学”，如果一件事情你不能讲清楚，十有八九你还没有完全理解。当然，教的最高境界是用最简洁的话让一个外行人明白你讲的东西。&lt;/li&gt;
&lt;li&gt;每读完一本有价值的好书，就用写作的方式把作者的思想用自己的语言重构出来，尽力结合自身经历、学识、立场，去解释、去延伸，而不是简单地把书本的要点进行罗列。&lt;/li&gt;
&lt;li&gt;在重构时，我们可以只取最触动自己的观点，其他观点可以放弃，即使它们很有道理。&lt;/li&gt;
&lt;li&gt;选择一些值得关注的人，和他们保持联结。他们释放的一些有价值的信息会引领我们走向更广阔的世界，但无论如何，最终要自己去读、自己去想、自己去做。&lt;/li&gt;
&lt;li&gt;只有真正和自己有关的内容才对自己有用，在这个注意力非常匮乏的时代，没有必要把所有的书或是书中所有的内容都读完。&lt;/li&gt;
&lt;li&gt;知识的获取不在于多少，而在于是否与自己有关联，以及这种关联有多充分。&lt;/li&gt;
&lt;li&gt;但凡收获一个感悟、了解一个观点或是学到一个知识，只要触动了自己，就要想办法让它效率最大化，而效率最大化的办法就是主动关联到别处，并让自己的行动发生改变。所以你不妨也把这句话当作口头禅，时常问自己：这个道理还能用在什么地方？&lt;/li&gt;
&lt;li&gt;只有当知识能够帮助你做实际决策的时候，它才是你的知识。&lt;/li&gt;
&lt;li&gt;在个人成长领域，没有最优、最确定、最权威的认知体系，只有最适合我们当前状态的认知体系。&lt;/li&gt;
&lt;li&gt;处于认知圈边缘的知识与我们的实际需求贴合得最紧密，因此也更容易让我们产生触动，进而与现有的知识进行关联。&lt;/li&gt;
&lt;li&gt;搭建个人认知体系的真相：打碎各家的认知体系，只取其中最触动自己的点或块，然后将其拼接成自己的认知网络。&lt;/li&gt;
&lt;li&gt;和一般的日志不同，每日反思不是记流水账，而是留意每天最触动自己的那件事，不管是好的启发还是坏的体验，都写下来复盘，写得越细越好。&lt;/li&gt;
&lt;li&gt;用自己的语言重新解释新知识，这会促使自己原有的知识体系对新知识做出反应。&lt;/li&gt;
&lt;li&gt;这就是打卡心态的特性：学不到，假装一下；学到了，立即停止。所以单纯抱着打卡这一任务心态去学习，很少会有强烈的主动性，毕竟在任务心态的驱使下，人们关注的是完成情况，对任务本身没有更大的热情。&lt;/li&gt;
&lt;li&gt;任务心态破坏了身心合一的状态，这种不良体验会加剧人们对学习活动的厌恶感，形成恶性循环。&lt;/li&gt;
&lt;li&gt;我们在任务设置时要使用新策略：设下限，不设上限。&lt;/li&gt;
&lt;li&gt;科学的学习策略是产出作品、获取反馈，驱动本能脑和情绪脑去 “玩玩玩”，而不是一味地努力坚持，让理智脑苦苦地去 “学学学”&lt;/li&gt;
&lt;li&gt;想创造全新的学习动机，就得放弃一味打卡输入的做法，想办法直接运用或产出作品，获取反馈。&lt;/li&gt;
&lt;li&gt;不能一味地学学学而毫无产出，因为没有反馈的学习不仅是痛苦的，而且十有八九会失败。&lt;/li&gt;
&lt;li&gt;・教是最好的学；・用是最好的学；・输出倒逼输入；・请用作品说话……&lt;/li&gt;
&lt;li&gt;分享不是随意分享半成品，而是尽最大力气将作品打磨成自己当前能力范围内可完成的最好的样子。&lt;/li&gt;
&lt;li&gt;古典的跃迁理论：打磨作品 — 到达一个小山的头部 — 受到更多关注 — 移动到一个更大山头的头部 — 借助系统推力，实现人生跃迁。&lt;/li&gt;
&lt;li&gt;有效学习的关键是保持极度专注，而非一味比拼毅力和耐心。&lt;/li&gt;
&lt;li&gt;轻松的学霸，他们学习时从不过度消耗自己，只要感到精力不足，就停下来主动休息，这反而使他们精力桶的水位得到快速回升。&lt;/li&gt;
&lt;li&gt;让自己先尽力保持短时间的极度专注，到有些累的时候就主动停下来，这是更加明智的生活和学习策略。&lt;/li&gt;
&lt;li&gt;太容易的内容会让人因无聊而走神，太困难的内容会让人因畏惧而逃避，所以选择做那些 “跳一跳就能够得着” 的学习或工作，是最容易进入专注状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第六章-行动力没有行动世界只是个概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第六章-行动力没有行动世界只是个概念&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第六章 行动力 —— 没有行动世界只是个概念&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在初始阶段，强迫自己先做重要的事情，一旦进入正向的增强回路，你便能拥有强大的行动力 —— 这正是增强自制力、提升行动力的秘密&lt;/li&gt;
&lt;li&gt;清晰力，也就是把目标细化、具体化的能力 —— 行动力只有在清晰力的支撑下才能得到重构。&lt;/li&gt;
&lt;li&gt;从某种程度上说，有自己热爱的事，比行动力本身要重要得多，因为一旦有了热情，你就会自带 “要事第一” 和 “提高清晰力” 等各种属性。&lt;/li&gt;
&lt;li&gt;正如爱因斯坦所说：“如果给我 1 小时解答一道决定我生死的问题，我会花 55 分钟弄清楚这道题到底在问什么。一旦清楚它到底在问什么，剩下的 5 分钟足够回答这个问题。”&lt;/li&gt;
&lt;li&gt;想先看到结果再行动的人往往无法看到结果。耍小聪明的人会因为结果不明朗，担心付出没有回报，所以不愿行动，以致永远停留在原地&lt;/li&gt;
&lt;li&gt;不要垂涎别人二十几岁身家百万，不要羡慕别人一夜成名，他们的故事若无法真实地改变你，那对你而言都是幻想。还不如踏踏实实地用行动让自己一点一点变好，毕竟，现实结果才是最好的 “评判师”。&lt;/li&gt;
&lt;li&gt;比如我开始早起和跑步的时候，起初是有一些痛苦的，但扛过去之后，我就体会到了早起和跑步给自己身心带来的不可思议的体验。回头想，最难坚持的时候可能就是突破阈值的时候&lt;/li&gt;
&lt;li&gt;如果你觉得别人讲的道理有理有据，而自己暂时无法反驳，碰巧自己又非常想做这件事，那就相信他们说的是对的，然后笃定地行动&lt;/li&gt;
&lt;li&gt;在实践途中，你自然也要保持思考，用行动反复验证他们的理论，不适则改、适则用，直到自己真正做到为止。届时你不仅能做成那件事，还能探索出自己的理论，成为别人眼中的高手。&lt;/li&gt;
&lt;li&gt;更使人困扰的是，道理知道得越多，行动力反而越弱，因为似乎总有更好的道理等着我们去发现。&lt;/li&gt;
&lt;li&gt;不发生真正改变的学习都是无效的学习&lt;/li&gt;
&lt;li&gt;懂得百点不如改变一点。真正的成长不在于自己懂得了多少道理，而在于自己改变了多少。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第七章-情绪力情绪是多角度看问题的智慧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第七章-情绪力情绪是多角度看问题的智慧&#34;&gt;#&lt;/a&gt; &lt;strong&gt;第七章 情绪力 —— 情绪是多角度看问题的智慧&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;当一个人同时面临很多任务的时候，他的心智带宽就会降低，反而没有了行动力和自控力。有生活经验的人都会尽量克制自己的欲望，在做重要之事的同时主动安排娱乐活动，尽量保持日程的闲余 —— 这种方法是科学的、智慧的。&lt;/li&gt;
&lt;li&gt;真正的行动力高手不是有能耐在同一时间做很多事的人，而是会想办法避免同时做很多事的人。这样的人自然不会把自己的日程安排得太满，无论做学习计划，还是做工作安排，他们都会给自己留足够的闲余，让自己从容地面对每一刻。&lt;/li&gt;
&lt;li&gt;适当的闲余是我们应对压力和意外的宝贵资源，但是过多的闲余可不是什么好事，如果有大量的金钱，就容易萌生无谓的欲望；有大量的时间，也容易陷入低效的状态。&lt;/li&gt;
&lt;li&gt;那些习惯从单一角度识人的人，往往比较单纯，也更容易受伤，本质上是因为他们缺乏多角度认知事物的意识。&lt;/li&gt;
&lt;li&gt;每个人因为生活环境不同、经历不同、学识不同，所以在看待同一个问题时，理解层次和还原程度也不尽相同。&lt;/li&gt;
&lt;li&gt;困难和压力总能把人的情绪和注意力抓得死死的，让你很难看到其他角度。&lt;/li&gt;
&lt;li&gt;这个世界比我们想象的要积极，我们以为自己没得选，其实还有很多角度可供选择，毕竟任何事物都是多维、立体的。看似悲观的事物背后肯定有乐观的一面，严肃事物的背后必然有好玩的一面，我们暂时看不见不代表它不存在。&lt;/li&gt;
&lt;li&gt;当你遇到那些 “不想做但必须做” 的事情时，只要在心里默念一句 “咒语”，就可以让自己跳出事情本身。这句 “咒语” 便是：我并不是在做这件事，我只是在做另外一件事。&lt;/li&gt;
&lt;li&gt;产生内部动机最好的方式莫过于立足于让自己变好。&lt;/li&gt;
&lt;li&gt;当人的注意力都在享受上时，他对跑步的心态就不一样了。相比起来，别人为了身材和身体苦苦坚持，而他只是享受愉快的跑步过程。&lt;/li&gt;
&lt;li&gt;比如阅读这件事。我从来不认为自己是在阅读，而是设想自己在和智者聊天。&lt;/li&gt;
&lt;li&gt;事实上，人是一种自我解释的动物，世界的意义是人类赋予的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%90%86%E8%AE%BA/</guid>
            <title>计算机网络理论</title>
            <link>https://yunhdan.github.io/cs/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%90%86%E8%AE%BA/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Mon, 04 Aug 2025 15:09:14 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;计算机网络体系结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机网络体系结构&#34;&gt;#&lt;/a&gt; 计算机网络体系结构&lt;/h1&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/</guid>
            <title>图像处理</title>
            <link>https://yunhdan.github.io/cs/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Sat, 26 Jul 2025 17:19:37 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;小波变换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小波变换&#34;&gt;#&lt;/a&gt; 小波变换&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;十分易懂的关于小波变换的介绍，可以形成初步的感性上的认知：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yMjQ1MDgxOA==&#34;&gt;https://zhuanlan.zhihu.com/p/22450818&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;这一篇在第一篇的基础上，深入了更多的内容：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTkwMjk0L2FydGljbGUvZGV0YWlscy8xMTQyMzg1MTU=&#34;&gt;https://blog.csdn.net/qq_41990294/article/details/114238515&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;info&#34;&gt;&lt;summary&gt;Summary&lt;/summary&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;小波变换的完全展开由母小波（波函数 &lt;code&gt;wavelet function&lt;/code&gt; ）和父小波（尺度函数 &lt;code&gt;scale function&lt;/code&gt; ）定义，wavelet function 等同于对信号做高通滤波保留变化细节，而 scaling function 等同于对信号做低通滤波保留平滑的 shape。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3NjA1NjQyL2FydGljbGUvZGV0YWlscy8xMzU1OTgwNTc=&#34;&gt;https://blog.csdn.net/m0_37605642/article/details/135598057&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/other/%E8%B0%88%E5%88%A4%E6%8A%80%E5%B7%A7/</guid>
            <title>实用谈判技巧</title>
            <link>https://yunhdan.github.io/other/%E8%B0%88%E5%88%A4%E6%8A%80%E5%B7%A7/</link>
            <category term="琐碎" scheme="https://yunhdan.github.io/categories/other/" />
            <pubDate>Wed, 16 Jul 2025 14:42:42 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;学习自白斌老师的谈判实用技巧。&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;移花接木：若对方的要求十分难以接受，当面拒绝不合适时，可以首先进行同意，然后再提出一个让对方难以接受的条件进行拒绝。“送我宝马”“可以，但有个条件，我要让你送我一栋别墅”。&lt;/li&gt;
&lt;li&gt;降低对方期待值：如果对方想要让你接受一个比较坏的结果，你可以告知他接受该结果后的一个更坏的局面。反之亦然，让对方接受一个东西，若对方不接受，则告知将会面临一个更大的后果。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/research/%E6%9C%9F%E5%88%8A%E3%80%81%E4%BC%9A%E8%AE%AE%E6%8A%95%E7%A8%BF%E7%BB%8F%E9%AA%8C/</guid>
            <title>期刊、会议投稿经验</title>
            <link>https://yunhdan.github.io/research/%E6%9C%9F%E5%88%8A%E3%80%81%E4%BC%9A%E8%AE%AE%E6%8A%95%E7%A8%BF%E7%BB%8F%E9%AA%8C/</link>
            <category term="学术" scheme="https://yunhdan.github.io/categories/research/" />
            <pubDate>Mon, 07 Jul 2025 15:44:16 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;简单介绍会议的peer-review和rebuttal重点提供了rebuttal经验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简单介绍会议的peer-review和rebuttal重点提供了rebuttal经验&#34;&gt;#&lt;/a&gt; 简单介绍会议的 Peer Review 和 Rebuttal，重点提供了 Rebuttal 经验&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuemhpaHUuY29tL3RhcmRpcy96bS9hcnQvMTA0Mjk4OTIzP3NvdXJjZV9pZD0xMDA1&#34;&gt;https://www.zhihu.com/tardis/zm/art/104298923?source_id=1005&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;一些会议的rebuttal经历供参考&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一些会议的rebuttal经历供参考&#34;&gt;#&lt;/a&gt; 一些会议的 Rebuttal 经历供参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;原文名为记录一次神奇的 Rebuttal 经历：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTM3NjE5MjA=&#34;&gt;https://zhuanlan.zhihu.com/p/353761920&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/other/%E6%80%9D%E6%83%B3%E5%BB%BA%E8%AE%BE/</guid>
            <title>思想建设</title>
            <link>https://yunhdan.github.io/other/%E6%80%9D%E6%83%B3%E5%BB%BA%E8%AE%BE/</link>
            <category term="琐碎" scheme="https://yunhdan.github.io/categories/other/" />
            <pubDate>Mon, 07 Jul 2025 15:43:52 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;自有记载以来，所有宝贵的思想。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;2025-07&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2025-07&#34;&gt;#&lt;/a&gt; 2025-07&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在绝境中，与其认定自己已经注定败局，不如相信自己将来能赢。&lt;/li&gt;
&lt;li&gt;一切事物都有两面性，正如一条发布到网上的评论，无论有多少人喷，一定会有站在你的立场，理解你支持你的人。风险与机遇并存，巨大的挑战背景下，一定伴有着令人垂涎的宝物。&lt;/li&gt;
&lt;li&gt;想让一个人成长、变强很简单，就是让他主动承担，担任领头人，主负责人。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/research/2025%20CVPR%20NTIRE%20Image%20Denoise%E6%8A%A5%E5%91%8A%E7%A0%94%E7%A9%B6%E6%80%9D%E8%80%83/</guid>
            <title>2025 CVPR NTIRE Image Denoise报告研究思考</title>
            <link>https://yunhdan.github.io/research/2025%20CVPR%20NTIRE%20Image%20Denoise%E6%8A%A5%E5%91%8A%E7%A0%94%E7%A9%B6%E6%80%9D%E8%80%83/</link>
            <category term="学术" scheme="https://yunhdan.github.io/categories/research/" />
            <pubDate>Wed, 02 Jul 2025 22:38:47 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;这次的挑战不考虑计算效率和模型复杂度，所以用混合架构以最大化性能需求。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;排名情况：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/2025NtireDenoise4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;第一名自制200万张训练集src-b&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一名自制200万张训练集src-b&#34;&gt;#&lt;/a&gt; 第一名：自制 200 万张训练集（ &lt;code&gt;SRC-B&lt;/code&gt; ）&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/2025NtireDenoise.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络结构如上图所示，先使用基于 Transformer 的 &lt;code&gt;Restormer&lt;/code&gt;  提取全局信息，然后再使用基于卷积的 &lt;code&gt;NAFNet&lt;/code&gt;  进行局部细节的增强，最后使用特征融合模块整合上述两部分的特征，平衡去噪和细节保留，提升整体性能。&lt;/li&gt;
&lt;li&gt;用自制 200 万张训练集进行训练整个网络，再使用官方的训练集集微调细节增强网络，最后用官方验证集和自定义训练集中的 1000 张图像继续微调整个网络。&lt;/li&gt;
&lt;li&gt;对数据进行了一定的筛选，选择拉普拉斯 Var、 &lt;code&gt;BRISQUE&lt;/code&gt;  和 &lt;code&gt;NIQE&lt;/code&gt;  三个指标排名前 30% 的图像。另外，基于 Clip 特征进行了语义选择，保证数据集反映各种场景的多样性。&lt;/li&gt;
&lt;li&gt;使用渐进式学习， &lt;code&gt;patch&lt;/code&gt;  从 256 到 448 和 768。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第二名混合架构与集成学习的典范snucv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二名混合架构与集成学习的典范snucv&#34;&gt;#&lt;/a&gt; 第二名：混合架构与集成学习的典范（ &lt;code&gt;SNUCV&lt;/code&gt; ）&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/2025NtireDenoise2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MambaIRv2+Xformer+Restormer&lt;/code&gt;  混合架构，最后再利用 &lt;code&gt;Xformer&lt;/code&gt;  集成。这三个网络的最深层特征被拼接到一起，然后集成到集成模型的最深层特征中，这种做法有点类似于残差学习，确保前面网络的特征能够有效、无损失地保留到后面的集成模型中。&lt;/li&gt;
&lt;li&gt;依然是渐进式训练，patch 大小逐渐增加为 [128, 160, 192, 256, 320, 384]，对应的 batch 大小为 [8, 5, 4, 2, 1, 1]。训练是先训练前面三个网络，然后再单独训练后面的集成模型，如果前面三个网络没有训练好，后面的集成模型训练是没有意义的。&lt;/li&gt;
&lt;li&gt;前面的去噪模型使用 &lt;code&gt;L1&lt;/code&gt;  损失训练，后面的集成模型使用 &lt;code&gt;L1&lt;/code&gt; 、 &lt;code&gt;MSE&lt;/code&gt;  和高频损失组合训练。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第三名边缘特征学习buptmm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三名边缘特征学习buptmm&#34;&gt;#&lt;/a&gt; 第三名：边缘特征学习（ &lt;code&gt;BuptMM&lt;/code&gt; ）&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/2025NtireDenoise3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这个模型在推理的时候用 TLC 技术增强 &lt;code&gt;Restormer&lt;/code&gt;  的推理性能。这是一种通过去除纹理中的退化表征来提升图像恢复效果的一种技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分别训练 &lt;code&gt;Restormer&lt;/code&gt;  和 HAT，而且分别都用渐进式的训练方法。HAT 是一个通过激活像素的方式提升 Transformer 在图像恢复上性能的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对 &lt;code&gt;Restormer&lt;/code&gt;  和 HAT 的输出结果用 Canny 算子处理为边缘纹理二值图，然后进行 OR 和 XOR 操作，边缘像素点统一使用 HAT 的输出，而其他非边缘位置像素点，取两个模型输出的均值。可能是考虑到 &lt;code&gt;Restormer&lt;/code&gt;  的全局注意力可能会过度平滑细节，导致边缘模糊。具体的步骤可以参考 &lt;code&gt;Deepseek&lt;/code&gt;  的分析：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/2025NtireDenoise7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第四名直筒型依然有效hmidenoise&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四名直筒型依然有效hmidenoise&#34;&gt;#&lt;/a&gt; 第四名：直筒型依然有效（ &lt;code&gt;HMiDenoise&lt;/code&gt; ）&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/2025NtireDenoise5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依然有渐进式训练，随着 patch size 增大，batch size 减小。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RHAG&lt;/code&gt;  是基于 HAT 的改进版本，也是类似于 Transformer 的架构。可见直筒型在图像恢复的重要性依然很明显。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第五名纯restormerpixel-purifiers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第五名纯restormerpixel-purifiers&#34;&gt;#&lt;/a&gt; 第五名：纯 &lt;code&gt;Restormer&lt;/code&gt; （Pixel Purifiers）&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/2025NtireDenoise6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;DDDDDDDDD&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Linux/</guid>
            <title>Linux</title>
            <link>https://yunhdan.github.io/cs/Linux/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Tue, 01 Jul 2025 23:39:51 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;关于移动命令mv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关于移动命令mv&#34;&gt;#&lt;/a&gt; 关于移动命令 &lt;code&gt;mv&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;移动某个文件夹中所有内容到另一个文件夹内：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; /path/to/source/folder/* /path/to/destination/folder/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;但是，如果源文件夹的文件量过大，就会报这样的错误：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bash: /usr/bin/mv: 参数列表过长&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当使用通配符  &lt;code&gt;*&lt;/code&gt;  扩展的文件数量超过了系统允许的最大命令行参数限制时就会报这个错误。这是 Linux 系统的一个保护机制，防止用户意外执行可能破坏系统的命令。&lt;/p&gt;
&lt;p&gt;用这个命令替代以解决：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;find&lt;/span&gt; /path/to/source/folder/* &lt;span class=&#34;token parameter variable&#34;&gt;-mindepth&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-maxdepth&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-print0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xargs&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-0&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; /path/to/destination/folder/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;查看某个文件夹下有多少个文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看某个文件夹下有多少个文件&#34;&gt;#&lt;/a&gt; 查看某个文件夹下有多少个文件&lt;/h1&gt;
&lt;p&gt;配合 &lt;code&gt;ls&lt;/code&gt;  和 &lt;code&gt;wc&lt;/code&gt;  使用：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; /path/to/source/folder &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;export-pythonpathpwdpythonpath&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#export-pythonpathpwdpythonpath&#34;&gt;#&lt;/a&gt;  &lt;code&gt;export PYTHONPATH=&amp;quot;$PWD:$PYTHONPATH&amp;quot;&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;这是一个通过 &lt;code&gt;PYTHONPATH&lt;/code&gt;  手动指定项目根目录的命令。&lt;/p&gt;
&lt;p&gt;以深度学习项目 &lt;code&gt;Retinexformer&lt;/code&gt;  为例，这个项目文件夹内包含了训练的代码 &lt;code&gt;train.py&lt;/code&gt; ，以及模型架构文件等。&lt;/p&gt;
&lt;p&gt;有时候直接在终端通过 &lt;code&gt;python train.py&lt;/code&gt;  的绝对路径会报一些代码文件中的库引用错误，但是你反复检查了路径，觉得代码里导包的方式没问题。&lt;/p&gt;
&lt;p&gt;这时候你就可以先通过 &lt;code&gt;cd&lt;/code&gt;  命令进入项目文件夹中，然后再执行这个 &lt;code&gt;export&lt;/code&gt;  命令手动指定项目根目录：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; Retinexformer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;PYTHONPATH&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&lt;span class=&#34;token environment constant&#34;&gt;$PWD&lt;/span&gt;:&lt;span class=&#34;token variable&#34;&gt;$PYTHONPATH&lt;/span&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;当linux内存不足时扩大交换空间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#当linux内存不足时扩大交换空间&#34;&gt;#&lt;/a&gt; 当 &lt;code&gt;Linux&lt;/code&gt;  内存不足时，扩大交换空间&lt;/h1&gt;
&lt;p&gt;首先要处理一下现有的交换文件：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看当前启用的交换空间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;swapon&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--show&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 如果存在 /swapfile，先关闭交换文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; swapoff /swapfile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 删除旧的交换文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; /swapfile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后创建一个更大内存的交换文件：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 创建 8GB 交换文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; fallocate &lt;span class=&#34;token parameter variable&#34;&gt;-l&lt;/span&gt; 8G /swapfile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt; /swapfile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mkswap&lt;/span&gt; /swapfile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;swapon&lt;/span&gt; /swapfile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/other/%E7%BE%BD%E6%AF%9B%E7%90%832/</guid>
            <title>羽毛球2</title>
            <link>https://yunhdan.github.io/other/%E7%BE%BD%E6%AF%9B%E7%90%832/</link>
            <category term="琐碎" scheme="https://yunhdan.github.io/categories/other/" />
            <pubDate>Mon, 23 Jun 2025 23:15:22 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;25 年 6 月 23 日，今日单挑一名对手，明明感觉并不强，差不多，但是就是打不过。经过反思，在全方面的技术上要落后一筹，故决定今后系统地学习羽毛球。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;正手龙卷风搓球&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正手龙卷风搓球&#34;&gt;#&lt;/a&gt; 正手龙卷风搓球&lt;/h1&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; width: 100%; height: 0; padding-bottom: 75%;&#34;&gt;
&lt;iframe src=&#34;//player.bilibili.com/player.html?isOutside=true&amp;aid=113409198789085&amp;bvid=BV1Z9SZYdEBn&amp;cid=26571309405&amp;p=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34;
style=&#34;position:absolute; height: 100%; width: 100%;&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;总结要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跑到位，抢到高点。&lt;/li&gt;
&lt;li&gt;横着搓，搓球点在胸口。如果球低，就是压腿降低重心，搓球点保持在胸口，肩以上。&lt;/li&gt;
&lt;li&gt;龙卷风式搓球转的关键是，引完拍，球就差不多快接触到拍面，这样一刚要发力就会搓到，这样就会很转。&lt;/li&gt;
&lt;li&gt;龙卷风式搓球一般在身体正前面搓。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;展搓&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#展搓&#34;&gt;#&lt;/a&gt; 展搓&lt;/h1&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; width: 100%; height: 0; padding-bottom: 75%;&#34;&gt;
&lt;iframe src=&#34;//player.bilibili.com/player.html?isOutside=true&amp;aid=1606338008&amp;bvid=BV1Tm42137xB&amp;cid=1623571024&amp;p=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34;
style=&#34;position:absolute; height: 100%; width: 100%;&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Springboot%E3%80%81Mybatis/</guid>
            <title>Springboot、Mybatis</title>
            <link>https://yunhdan.github.io/cs/Springboot%E3%80%81Mybatis/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Thu, 19 Jun 2025 13:57:13 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;mybatis是怎么防止sql注入的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mybatis是怎么防止sql注入的&#34;&gt;#&lt;/a&gt; Mybatis 是怎么防止 SQL 注入的？&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;这篇文章介绍了什么是 SQL 注入，以及 Mybatis 是怎么防止注入的，算是填补一下当时做项目不求甚解带来的漏洞：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQ4MTIzNC9hcnRpY2xlL2RldGFpbHMvMTIwOTUwMDAz&#34;&gt;https://blog.csdn.net/weixin_43481234/article/details/120950003&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/</guid>
            <title>边缘计算</title>
            <link>https://yunhdan.github.io/cs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Wed, 18 Jun 2025 21:10:03 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;tflite-gpu-delegate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tflite-gpu-delegate&#34;&gt;#&lt;/a&gt; TFlite GPU Delegate&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;这篇算是比较通俗易懂地简要概览一下 TFlite GPU Delegate 的文章了：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDM1NjEwNDA=&#34;&gt;https://zhuanlan.zhihu.com/p/143561040&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Conda%E3%80%81Pip%E3%80%81Cuda/</guid>
            <title>Conda、Pip、Cuda</title>
            <link>https://yunhdan.github.io/cs/Conda%E3%80%81Pip%E3%80%81Cuda/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Wed, 18 Jun 2025 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;安装mamba_ssm和causal_conv1d&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装mamba_ssm和causal_conv1d&#34;&gt;#&lt;/a&gt; 安装 mamba_ssm 和 causal_conv1d&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windows 居然也支持 mamba_ssim 和 causal_conv1d 了：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MTAwMjAwL2FydGljbGUvZGV0YWlscy8xMzk3NTQyMzE=&#34;&gt;https://blog.csdn.net/qq_45100200/article/details/139754231&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cuda系列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cuda系列&#34;&gt;#&lt;/a&gt; cuda 系列&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;简要介绍 cudatoolkit 和 CUDA Toolkit 的区别：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNzQzNDA5MTEzNQ==&#34;&gt;https://zhuanlan.zhihu.com/p/27434091135&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;进一步详解 CUDA 和 cudatoolkit，拓展至 cudnn 和 nvcc：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMDk0MDU4L2FydGljbGUvZGV0YWlscy8xMTYyMDczMzM=&#34;&gt;https://blog.csdn.net/qq_41094058/article/details/116207333&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/ai/%E7%8E%B0%E4%BB%A3%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</guid>
            <title>现代深度学习</title>
            <link>https://yunhdan.github.io/ai/%E7%8E%B0%E4%BB%A3%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
            <category term="人工智能" scheme="https://yunhdan.github.io/categories/ai/" />
            <pubDate>Tue, 17 Jun 2025 15:25:31 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;知识蒸馏方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识蒸馏方法&#34;&gt;#&lt;/a&gt; 知识蒸馏方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;一文了解知识蒸馏，通俗易懂：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY5NDA5Ni9hcnRpY2xlL2RldGFpbHMvMTI3NTA1OTQ2&#34;&gt;https://blog.csdn.net/weixin_43694096/article/details/127505946&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;重参数化技术&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#重参数化技术&#34;&gt;#&lt;/a&gt; 重参数化技术&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;重参数化的 2 篇根基论文 &lt;code&gt;RepVGG&lt;/code&gt;  和 &lt;code&gt;RepMLP&lt;/code&gt; ：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzA0Mzg5OTk=&#34;&gt;https://zhuanlan.zhihu.com/p/370438999&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ntire图像恢复赛事&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ntire图像恢复赛事&#34;&gt;#&lt;/a&gt;  &lt;code&gt;NTIRE&lt;/code&gt;  图像恢复赛事&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;23 年超分辨率赛道技术报告解读，文末有赛事原报告：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgwMDU3Ny9hcnRpY2xlL2RldGFpbHMvMTMxNjY4Nzgy&#34;&gt;https://blog.csdn.net/weixin_43800577/article/details/131668782&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;显存占用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#显存占用&#34;&gt;#&lt;/a&gt; 显存占用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;分析显存占用的内在机理：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NDE4OTQwMTQ=&#34;&gt;https://zhuanlan.zhihu.com/p/641894014&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Pytorch/</guid>
            <title>Pytorch</title>
            <link>https://yunhdan.github.io/cs/Pytorch/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Fri, 13 Jun 2025 13:14:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;pytorch算子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pytorch算子&#34;&gt;#&lt;/a&gt; Pytorch 算子&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;简要介绍算子：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NzQxNjY5MjA=&#34;&gt;https://zhuanlan.zhihu.com/p/574166920&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;矩阵乘法-矩阵点乘&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#矩阵乘法-矩阵点乘&#34;&gt;#&lt;/a&gt; 矩阵乘法、矩阵点乘&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;这篇分别为矩阵乘法和矩阵点乘介绍了两种广义算子：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzI4NjY3L2FydGljbGUvZGV0YWlscy8xMzQwMTM4OTk=&#34;&gt;https://blog.csdn.net/qq_40728667/article/details/134013899&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关于num_worker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关于num_worker&#34;&gt;#&lt;/a&gt; 关于 num_worker&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;简明扼要地介绍 pytorch 中 dataloader 的 num_worker：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4MDU3Mzc5L2FydGljbGUvZGV0YWlscy8xMTU0MjcwNTI=&#34;&gt;https://blog.csdn.net/qq_28057379/article/details/115427052&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;一些关于 num_worker 的独特思考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NDUzNjQwODk=&#34;&gt;https://zhuanlan.zhihu.com/p/645364089&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Flask/</guid>
            <title>Flask</title>
            <link>https://yunhdan.github.io/cs/Flask/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Fri, 13 Jun 2025 13:10:41 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; Flask&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;overview-铺垫资料&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#overview-铺垫资料&#34;&gt;#&lt;/a&gt; Overview、铺垫资料&lt;/h1&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9mbGFzay9mbGFzay10dXRvcmlhbC5odG1s&#34;&gt;Flask 教程 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9mbGFzay9mbGFzay1iYXNpYy1jb25jZXB0Lmh0bWw=&#34;&gt;Flask 基本概念 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9mbGFzay9mbGFzay1sYXlvdXQuaHRtbA==&#34;&gt;Flask 项目结构 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这部分主要是了解 Flask 的背景。同时了解路由、视图函数、请求对象和响应对象、模板文件、应用工厂、蓝图、配置对象、静态文件是什么。了解 Flask 的项目结构如何。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Vue/</guid>
            <title>Vue</title>
            <link>https://yunhdan.github.io/cs/Vue/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Fri, 13 Jun 2025 13:07:55 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;循环语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#循环语句&#34;&gt;#&lt;/a&gt; 循环语句&lt;/h1&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1hTTF9IUi9hcnRpY2xlL2RldGFpbHMvMTI3MzEyNjMyP29wc19yZXF1ZXN0X21pc2M9JTdCJTIycmVxdWVzdCU1RmlkJTIyJTNBJTIyY2JhNzE1ZjNiNzcwOTk1MDVlNzRhOGNlMmUzYzE3MmMlMjIlMkMlMjJzY20lMjIlM0ElMjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyMiU3RCZhbXA7cmVxdWVzdF9pZD1jYmE3MTVmM2I3NzA5OTUwNWU3NGE4Y2UyZTNjMTcyYyZhbXA7Yml6X2lkPTAmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfnRvcF9wb3NpdGl2ZX5kZWZhdWx0LTEtMTI3MzEyNjMyLW51bGwtbnVsbC4xNDIlNUV2MTAyJTVFcGNfc2VhcmNoX3Jlc3VsdF9iYXNlMyZhbXA7dXRtX3Rlcm09di1mb3ImYW1wO3NwbT0xMDE4LjIyMjYuMzAwMS40MTg3&#34;&gt;vue3【列表渲染】v-for 详细介绍（vue 中的 “循环”）_vue3 v-for-CSDN 博客&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtdi1mb3IuaHRtbA==&#34;&gt;Vue3 循环语句 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要围绕如何使用 v-for 遍历数组、对象。v-for 的几种基本用法要掌握。&lt;/p&gt;
&lt;h1 id=&#34;安装vue项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装vue项目&#34;&gt;#&lt;/a&gt; 安装 Vue 项目&lt;/h1&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtaW5zdGFsbC5odG1s&#34;&gt;Vue3 安装 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtY3JlYXRlLXByb2plY3QuaHRtbA==&#34;&gt;Vue3 创建项目 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;vue项目结构说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue项目结构说明&#34;&gt;#&lt;/a&gt; Vue 项目结构说明&lt;/h1&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtcHJvamVjdC1pbnRyby5odG1s&#34;&gt;Vue3 项目说明 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/research/%E5%A4%9A%E6%A8%A1%E6%80%81%E8%AE%BA%E6%96%87%E7%B2%BE%E7%82%BC/</guid>
            <title>多模态论文精炼</title>
            <link>https://yunhdan.github.io/research/%E5%A4%9A%E6%A8%A1%E6%80%81%E8%AE%BA%E6%96%87%E7%B2%BE%E7%82%BC/</link>
            <category term="学术" scheme="https://yunhdan.github.io/categories/research/" />
            <pubDate>Wed, 04 Jun 2025 11:04:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;clip工作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#clip工作&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CLIP&lt;/code&gt;  工作&lt;/h1&gt;
&lt;h2 id=&#34;2021-learning-transferable-visual-models-from-natural-language-supervisionclip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2021-learning-transferable-visual-models-from-natural-language-supervisionclip&#34;&gt;#&lt;/a&gt;  &lt;code&gt;2021 Learning Transferable Visual Models From Natural Language Supervision(CLIP)&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/clip.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的 &lt;code&gt;CLIP&lt;/code&gt;  逐段精读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;（1）通过文本和图像的对比学习，模型学习到文本 - 图像对的匹配关系。&lt;/li&gt;
&lt;li&gt;（2）能够实现通过给定一张图像，在多个文本标签中选择出与图像最相关的文本。也可以实现给定一个文本，选择最符合相关的图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现文本与图像的多模态学习。&lt;/li&gt;
&lt;li&gt;实现实现无标签限制的图像分类，也可以实现无图像限制的文本 - 图像配对。前者可以用于图像中的物体识别，后者可以用于文本检索图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;CLIP&lt;/code&gt;  对比学习训练代码&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# image_encoder - ResNet 或者 Vision Transformer&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# text_encoder - CBOW 或者 Text Transformer&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# I [n, h, w, c] - 图像形状&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# T [n, l] - 文本形状，l 是序列长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# W_i [d_i, d_e] - 图像的线性投射矩阵&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# W_t [d_t, d_e] - 文本的线性投射矩阵&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# t - learned temperature parameter&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 分别提取图像特征和文本特征&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;I_f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; image_encoder&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;I&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#[n, d_i]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;T_f &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; text_encoder&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;T&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#[n, d_t]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 对两个特征进行线性投射，得到相同维度的特征，并进行 l2 归一化&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;I_e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; l2_normalize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;I_f&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; W_i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;T_e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; l2_normalize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;T_f&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; W_t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 计算缩放的余弦相似度：[n, n]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;logits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;dot&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;I_e&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; T_e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;T&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exp&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 对称的对比学习损失：等价于 N 个类别的 cross_entropy_loss&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;labels &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; np&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;arange&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 对角线元素的 labels&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loss_i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cross_entropy_loss&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;logits&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; labels&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loss_t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cross_entropy_loss&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;logits&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; labels&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; axis&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;loss &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;loss_i &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; loss_t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;多模态在分割的应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多模态在分割的应用&#34;&gt;#&lt;/a&gt; 多模态在分割的应用&lt;/h1&gt;
&lt;h2 id=&#34;2022-iclr-language-driven-semantic-segmentationlseg&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2022-iclr-language-driven-semantic-segmentationlseg&#34;&gt;#&lt;/a&gt;  &lt;code&gt;2022 ICLR Language-driven semantic segmentation(LSeg)&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/lseg1.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的逐段精读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;CLIP&lt;/code&gt;  的原始文本编码器作为需分割的物体标签的文本编码器，以充分提取文本特征。&lt;/li&gt;
&lt;li&gt;将文本特征与图像特征通过矩阵相乘融合得到多模态特征，上采样后与 &lt;code&gt;Ground-truth&lt;/code&gt;  在像素级使用 &lt;code&gt;cross entropy loss&lt;/code&gt;  进行训练。&lt;/li&gt;
&lt;li&gt;测试时可以实现，根据需要分割的对象的文本标签，分割特定图像的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一篇把 &lt;code&gt;CLIP&lt;/code&gt;  模型运用到分割任务且有效果的工作。&lt;/li&gt;
&lt;li&gt;采用监督学习的方式训练，而不是对比学习去训练，也是为了更好地与特定分割任务适应。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不足&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依然是有监督学习，目标函数不是对比学习的目标函数。&lt;/li&gt;
&lt;li&gt;文本特征只是用于融合多模态特征，并没有提供监督信号。&lt;/li&gt;
&lt;li&gt;依然依赖于手工标注 &lt;code&gt;segmentation mask&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（可以做识别物体位置的实践）&lt;/p&gt;
&lt;h2 id=&#34;2022-cvpr-groupvitsemantic-segmentation-emerges-from-text-supervisiongroupvit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2022-cvpr-groupvitsemantic-segmentation-emerges-from-text-supervisiongroupvit&#34;&gt;#&lt;/a&gt;  &lt;code&gt;2022 CVPR GroupViT:Semantic Segmentation Emerges from Text Supervision(GroupViT)&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/groupvit1.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的逐段精读。&lt;/p&gt;
&lt;p&gt;这篇是分割采用无监督学习的思路。主要使用的是分割中的 &lt;code&gt;Grouping&lt;/code&gt;  思想。展开来讲， &lt;code&gt;Grouping&lt;/code&gt;  将图像分割做为一种聚类任务，首先在图像确定聚类中心点，然后在模型训练的过程中，不断学习聚类中心周围像素点与聚类中心的相互关系，将与聚类中心相关的像素点并入该聚类中心的 &lt;code&gt;Group&lt;/code&gt;  中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用了文本作为监督信号训练分割任务，不再依赖人工标注的图像 &lt;code&gt;Ground-Truth&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;Vision Transformer&lt;/code&gt;  作为图像编码器。在每个 &lt;code&gt;Transformer&lt;/code&gt;  层的输入 &lt;code&gt;tokens&lt;/code&gt;  中加入若干个 &lt;code&gt;group tokens&lt;/code&gt; ，这些 &lt;code&gt;group tokens&lt;/code&gt;  实际上就是预先设想的聚类中心数，也就是猜测的图像有哪些物体类别。经过多个 &lt;code&gt;Transformer Layer&lt;/code&gt; ， &lt;code&gt;Image tokens&lt;/code&gt;  和这几个 &lt;code&gt;group tokens&lt;/code&gt;  之间的关系被自注意力不断建模与学习。与特定聚类中心接近的 &lt;code&gt;image tokens&lt;/code&gt; ，其特征也越接近该 &lt;code&gt;group token&lt;/code&gt;  的特征。&lt;/li&gt;
&lt;li&gt;多个 &lt;code&gt;Transformer&lt;/code&gt;  层后跟一个 &lt;code&gt;Grouping Block&lt;/code&gt;  层。 &lt;code&gt;Grouping Block&lt;/code&gt;  的本质是一个交叉注意力机制，将 &lt;code&gt;Image tokens&lt;/code&gt;  并入所属的 &lt;code&gt;Group tokens&lt;/code&gt; 。每个 &lt;code&gt;Grouping Block&lt;/code&gt;  都将总 &lt;code&gt;tokens&lt;/code&gt;  数降低，因此也减小了计算成本。&lt;/li&gt;
&lt;li&gt;使用对比学习的方式进行训练，带监督信号的文本被编码后的特征与最后的图像 &lt;code&gt;tokens&lt;/code&gt;  特征两者交叉熵损失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先使用了文本标注分割的 &lt;code&gt;Ground-Truth&lt;/code&gt; ，不再依赖繁琐的手工标注。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不足&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能分割特定数量的类别，无法分割任意数量的物体。测试时，必须指定分割物体的数目，最后得到模型输出的 &lt;code&gt;tokens&lt;/code&gt;  与文本标签进行余弦相似度的计算，确定分割物体的文本标签。&lt;/li&gt;
&lt;li&gt;训练中没有侧重语义信息，仅训练出了较好的分割能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/groupvit2.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（测试时，模型输出了两个 &lt;code&gt;token&lt;/code&gt; ，我们指定分割物体的文本标签有 &lt;code&gt;table、dog...potted plant&lt;/code&gt; ，于是可以使用余弦相似度计算得到一个相似度矩阵。对每行取最大的值，对应的文本标签即为该 &lt;code&gt;token&lt;/code&gt;  的类别）&lt;/p&gt;
&lt;h1 id=&#34;多模态在检测的应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多模态在检测的应用&#34;&gt;#&lt;/a&gt; 多模态在检测的应用&lt;/h1&gt;
&lt;h2 id=&#34;2022-cvpr-grounded-language-image-pre-trainingglip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2022-cvpr-grounded-language-image-pre-trainingglip&#34;&gt;#&lt;/a&gt;  &lt;code&gt;2022 CVPR Grounded Language-Image Pre-training(Glip)&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/glip1.jpg&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的逐段精读。&lt;/p&gt;
&lt;p&gt;与常规目标检测任务相关的一个任务是 &lt;code&gt;Vision Grounding&lt;/code&gt; 。具体是根据提供的文本，在图片中找到文本中出现的物体的位置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考 &lt;code&gt;CLIP&lt;/code&gt;  范式，将图像的 &lt;code&gt;Bounding box&lt;/code&gt;  的 &lt;code&gt;region&lt;/code&gt;  输入图像编码器，将提供的文本输入文本编码器，最后得到每个 &lt;code&gt;Bounding box&lt;/code&gt;  与单词的相似度矩阵。在相似度矩阵上与 &lt;code&gt;Ground-Truth&lt;/code&gt;  的相似度矩阵求定位损失 &lt;code&gt;Localization Loss&lt;/code&gt;  和分类损失 &lt;code&gt;Alignment Loss&lt;/code&gt;  即可完成训练。&lt;/li&gt;
&lt;li&gt;为了更加充分地学习 &lt;code&gt;Bounding box&lt;/code&gt;  和文本的 &lt;code&gt;Joint Feature&lt;/code&gt; ，也就是多模态特征。在最后的特征相似度计算前，使用交叉注意力对图像特征和文本特征进行多层交互学习，即 &lt;code&gt;Deep Fusion&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;Deep Fusion&lt;/code&gt;  技术以辅助学习多模态特征。&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;Gounding&lt;/code&gt;  任务与目标检测任务很好地结合，并借鉴 &lt;code&gt;CLIP&lt;/code&gt;  的思想做大规模数据的预训练，成功取得了很好的 &lt;code&gt;Zero-shot&lt;/code&gt;  效果。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/baoyan/Low-level-Vision-Group/</guid>
            <title>Low-level-Vision-Group</title>
            <link>https://yunhdan.github.io/baoyan/Low-level-Vision-Group/</link>
            <category term="保研" scheme="https://yunhdan.github.io/categories/baoyan/" />
            <pubDate>Tue, 03 Jun 2025 11:08:17 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;做底层视觉的团队，供保研用。&lt;/p&gt;
&lt;/div&gt;
&lt;details class=&#34;danger&#34;&gt;&lt;summary&gt;注意&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;请做好心理准备，这些导师都很强，申请做他们的学生，在面试考核中一定是会被拷打的。对方的学术水平，能力水平本身就在你之上，你的任何漏洞、问题、毛病都会被看得一清二楚。所以想要做到让对方完全满意是不太可能的，要做好这个心理建设。&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h1 id=&#34;中山大学-网络空间安全学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中山大学-网络空间安全学院&#34;&gt;#&lt;/a&gt; 中山大学 - 网络空间安全学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;任文琦：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3ZpZXcvd2VucWlyZW4vaG9tZXBhZ2U=&#34;&gt;https://sites.google.com/view/wenqiren/homepage&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师特别强，我发过 email2 次都是已阅没回，没看上我。&lt;/p&gt;
&lt;h1 id=&#34;厦门大学-信息学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#厦门大学-信息学院&#34;&gt;#&lt;/a&gt; 厦门大学 - 信息学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;丁兴号：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94bXUtc21hcnRkc3AuZ2l0aHViLmlvLw==&#34;&gt;https://xmu-smartdsp.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;没有联系过，没有实验室主页，情况未知。&lt;/p&gt;
&lt;h1 id=&#34;南开大学-密码与网络空间安全学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#南开大学-密码与网络空间安全学院&#34;&gt;#&lt;/a&gt; 南开大学 - 密码与网络空间安全学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;程明明实验室李重仪，郭春乐：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tbWNoZW5nLm5ldC9yZWNydWl0L2NvbW1lbnQtcGFnZS0yNS8=&#34;&gt;https://mmcheng.net/recruit/comment-page-25/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;底层视觉顶级组，考核贼强，六级要 480+。考核差不多相当于用 c++ 复现一篇传统论文，感觉非常困难故未考虑。&lt;/p&gt;
&lt;h1 id=&#34;东南大学-计算机科学与工程学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#东南大学-计算机科学与工程学院&#34;&gt;#&lt;/a&gt; 东南大学 - 计算机科学与工程学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;薛晖：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYWxtLnNldS5lZHUuY24vaHh1ZS8=&#34;&gt;https://palm.seu.edu.cn/hxue/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个是有名的 palm 实验室，不放实习，不建议去。&lt;/p&gt;
&lt;h1 id=&#34;中山大学-计算机学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中山大学-计算机学院&#34;&gt;#&lt;/a&gt; 中山大学 - 计算机学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;李冠彬：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3lzdS1oY3AubmV0L2ZhY3VsdHkvbGlndWFuYmluLmh0bWw=&#34;&gt;https://www.sysu-hcp.net/faculty/liguanbin.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;张冬雨：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jc2Uuc3lzdS5lZHUuY24vdGVhY2hlci9aaGFuZ0Rvbmd5dQ==&#34;&gt;https://cse.sysu.edu.cn/teacher/ZhangDongyu&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过李老师 2 次，但是都没有看上我，没回信。&lt;/p&gt;
&lt;h1 id=&#34;南京理工大学-计算机科学与工程学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#南京理工大学-计算机科学与工程学院&#34;&gt;#&lt;/a&gt; 南京理工大学 - 计算机科学与工程学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;潘金山：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qc3Bhbi5naXRodWIuaW8v&#34;&gt;https://jspan.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师做 low level 特别强。&lt;/p&gt;
&lt;h1 id=&#34;北京大学-信息工程学院深圳&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#北京大学-信息工程学院深圳&#34;&gt;#&lt;/a&gt; 北京大学 - 信息工程学院（深圳）&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;张健：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWNlLnBrdS5lZHUuY24vaW5mby8xMDQ2LzI1MDYuaHRt&#34;&gt;https://www.ece.pku.edu.cn/info/1046/2506.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;老师很强，听说对学生也很温和友好。我联系过 2 次，均未搭理，没回信。看了一下他实验室的学生的来向，基本全是 9 和 2，双非和四非根本不可能。&lt;/p&gt;
&lt;h1 id=&#34;哈尔滨工业大学-计算机学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#哈尔滨工业大学-计算机学院&#34;&gt;#&lt;/a&gt; 哈尔滨工业大学 - 计算机学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;左旺孟：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ob21lcGFnZS5oaXQuZWR1LmNuL3dhbmdtZW5nenVv&#34;&gt;https://homepage.hit.edu.cn/wangmengzuo&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师懂得都懂，low level 泰斗。听说对学生也相当好，人品也不错。但因为在本部太远，未考虑。&lt;/p&gt;
&lt;h1 id=&#34;南京大学-智能科学与技术学院苏州&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#南京大学-智能科学与技术学院苏州&#34;&gt;#&lt;/a&gt; 南京大学 - 智能科学与技术学院（苏州）&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;张凯：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jc3puLmdpdGh1Yi5pby8=&#34;&gt;https://cszn.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;邰颖：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90eXNoaXdvLmdpdGh1Yi5pby9pbmRleC5odG1s&#34;&gt;https://tyshiwo.github.io/index.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过张凯老师，张凯老师人很好。第一次信没有回复，第二次在 follow 信发过去后很快就回信了，这个是第一个回信的老师，表示欢迎我来。虽然有点类似官回，但给我很大的鼓励。&lt;/p&gt;
&lt;h1 id=&#34;北京师范大学-人工智能学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#北京师范大学-人工智能学院&#34;&gt;#&lt;/a&gt; 北京师范大学 - 人工智能学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;黄华：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92bWNsLmJudS5lZHUuY24vZ3JvdXAvdGVhY2hlci9kY2RhZWE3OWI1ZTU0Yjc1YjUzMjc5NTEwOWE4NWEzNC5odG0=&#34;&gt;https://vmcl.bnu.edu.cn/group/teacher/dcdaea79b5e54b75b532795109a85a34.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有点偏 low level 中的底层，与相机有关，感觉干不来。&lt;/p&gt;
&lt;h1 id=&#34;南京大学-计算机学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#南京大学-计算机学院&#34;&gt;#&lt;/a&gt; 南京大学 - 计算机学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;路通：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcy5uanUuZWR1LmNuL2x1dG9uZy9pbmRleC5odG0=&#34;&gt;https://cs.nju.edu.cn/lutong/index.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过但没有回复。&lt;/p&gt;
&lt;h1 id=&#34;大连理工大学-国际信息科学与工程学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#大连理工大学-国际信息科学与工程学院&#34;&gt;#&lt;/a&gt; 大连理工大学 - 国际信息科学与工程学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;刘日升：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yc2xpdS50ZWNoLw==&#34;&gt;https://rsliu.tech/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师同时也做机器人，很强。因为位置偏远，没有考虑。&lt;/p&gt;
&lt;h1 id=&#34;四川大学-计算机学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四川大学-计算机学院&#34;&gt;#&lt;/a&gt; 四川大学 - 计算机学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;彭玺：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW5neGkubWUv&#34;&gt;https://pengxi.me/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;电子科技大学-计算机科学与工程学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#电子科技大学-计算机科学与工程学院&#34;&gt;#&lt;/a&gt; 电子科技大学 - 计算机科学与工程学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;顾舒航：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaHVoYW5nZ3UuZ2l0aHViLmlvLw==&#34;&gt;https://shuhanggu.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;天津大学-智能与计算学部&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#天津大学-智能与计算学部&#34;&gt;#&lt;/a&gt; 天津大学 - 智能与计算学部&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;郭晓杰：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3ZpZXcveGpndW8=&#34;&gt;https://sites.google.com/view/xjguo&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很强，LIME 论文的团队。听说对学生也很好，联系过一次，没有回信，再次未被看上。&lt;/p&gt;
&lt;h1 id=&#34;电子科技大学-信息与通信工程学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#电子科技大学-信息与通信工程学院&#34;&gt;#&lt;/a&gt; 电子科技大学 - 信息与通信工程学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;刘帅成：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5saXVzaHVhaWNoZW5nLm9yZy8=&#34;&gt;http://www.liushuaicheng.org/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很强，GLARE 论文的团队，依然是联系过后未被看上，没有回信。&lt;/p&gt;
&lt;h1 id=&#34;中国科学技术大学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中国科学技术大学&#34;&gt;#&lt;/a&gt; 中国科学技术大学&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;李厚强：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N0YWZmLnVzdGMuZWR1LmNuL35saWhxL2VuLw==&#34;&gt;http://staff.ustc.edu.cn/~lihq/en/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;熊志伟：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N0YWZmLnVzdGMuZWR1LmNuL356d3hpb25nLw==&#34;&gt;http://staff.ustc.edu.cn/~zwxiong/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;刘东：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LnVzdGMuZWR1LmNuL2RvbmdlbGl1Lw==&#34;&gt;https://faculty.ustc.edu.cn/dongeliu/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;陈志波：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LnVzdGMuZWR1LmNuL2NoZW56aGliby8=&#34;&gt;https://faculty.ustc.edu.cn/chenzhibo/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;武汉大学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#武汉大学&#34;&gt;#&lt;/a&gt; 武汉大学&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;马佳义：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL212cC53aHUuZWR1LmNuL2ppYXlpbWEv&#34;&gt;http://mvp.whu.edu.cn/jiayima/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;西安电子科技大学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#西安电子科技大学&#34;&gt;#&lt;/a&gt; 西安电子科技大学&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;董伟生：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWUueGlkaWFuLmVkdS5jbi9mYWN1bHR5L3dzZG9uZy8=&#34;&gt;https://see.xidian.edu.cn/faculty/wsdong/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过董老师 2 次，但都是没有打开看我的信。&lt;/p&gt;
&lt;h1 id=&#34;西安交通大学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#西安交通大学&#34;&gt;#&lt;/a&gt; 西安交通大学&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;孟德宇：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nci54anR1LmVkdS5jbi93ZWIvZHltZW5n&#34;&gt;https://gr.xjtu.edu.cn/web/dymeng&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;西交夏令营要本科学校计算机 a 评估。&lt;/p&gt;
&lt;h1 id=&#34;华东师范大学&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#华东师范大学&#34;&gt;#&lt;/a&gt; 华东师范大学&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;谢源：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LmVjbnUuZWR1LmNuL19zMTYveHkyXzExMzQyL21haW4ucHNw&#34;&gt;https://faculty.ecnu.edu.cn/_s16/xy2_11342/main.psp&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;风评未知，也没有团队主页，暂不考虑。&lt;/p&gt;
&lt;h1 id=&#34;中科院深先所&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中科院深先所&#34;&gt;#&lt;/a&gt; 中科院深先所&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MMLab：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tbWxhYi5zaWF0LmFjLmNuLw==&#34;&gt;https://mmlab.siat.ac.cn/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;董超：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3hwaXhlbC5ncm91cC8=&#34;&gt;http://xpixel.group/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过董超老师 2 次，依然没有打开信看。&lt;/p&gt;
&lt;h1 id=&#34;同济大学-计算机科学与技术学院软件学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同济大学-计算机科学与技术学院软件学院&#34;&gt;#&lt;/a&gt; 同济大学 - 计算机科学与技术学院（软件学院）&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;张林：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zc2UudG9uZ2ppLmVkdS5jbi9pbmZvLzEyMTIvNTA1Mi5odG0=&#34;&gt;https://sse.tongji.edu.cn/info/1212/5052.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同济大学 bar 过高。&lt;/p&gt;
&lt;h1 id=&#34;北京邮电大学-计算机学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#北京邮电大学-计算机学院&#34;&gt;#&lt;/a&gt; 北京邮电大学 - 计算机学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;明安龙：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZWFjaGVyLmJ1cHQuZWR1LmNuL21hbA==&#34;&gt;https://teacher.bupt.edu.cn/mal&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过明老师，明老师做计算摄影、美学评估方向为主，方向有点不太 match。&lt;/p&gt;
&lt;h1 id=&#34;北京邮电大学-人智学院&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#北京邮电大学-人智学院&#34;&gt;#&lt;/a&gt; 北京邮电大学 - 人智学院&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;鲁鹏：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jdi14dWViYS5jbHViL3BhZ2VzL21lbWJlcnMvcGx1Lmh0bWw=&#34;&gt;https://cv-xueba.club/pages/members/plu.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/project/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%B0%8F%E5%AE%9E%E8%B7%B5%E2%80%94%E2%80%94%E6%9E%84%E5%BB%BAEnv%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95/</guid>
            <title>强化学习小实践——构建Env的基本方法</title>
            <link>https://yunhdan.github.io/project/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%B0%8F%E5%AE%9E%E8%B7%B5%E2%80%94%E2%80%94%E6%9E%84%E5%BB%BAEnv%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95/</link>
            <category term="项目与实践" scheme="https://yunhdan.github.io/categories/project/" />
            <pubDate>Thu, 22 May 2025 18:50:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;这个小实践以一个示例说明构建 Env 的基本方法。同样能够涉及到 Gymnasium 的基本用法。&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;rainbow&#34;&gt;环境准备&lt;/span&gt;&lt;/h1&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;最好新建一个虚拟环境，在这个环境下进行环境配置。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;首先，需要在终端执行如下命令安装这个示例需要的包：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; copier&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;copier copy https://github.com/Farama-Foundation/gymnasium-env-template.git &lt;span class=&#34;token string&#34;&gt;&#34;path/to/directory&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;其中，&amp;quot;path/to/directory&amp;quot; 更改为你自定义的放项目的文件夹位置。执行完毕后，项目文件夹下会出现如下内容：&lt;/p&gt;
&lt;figure class=&#34;highlight raw&#34;&gt;&lt;figcaption data-lang=&#34;&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;├── gymnasium_env&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│   ├── envs&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│   │   ├── grid_world.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│   │   └── __init__.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│   ├── __init__.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│   └── wrappers&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│       ├── clip_reward.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│       ├── discrete_actions.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│       ├── __init__.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│       ├── reacher_weighted_reward.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;│       └── relative_position.py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;├── LICENSE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;├── pyproject.toml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;└── README.md&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后确保你的电脑安装了 Microsoft Visual C++ Build Tools。&lt;br /&gt;
安装方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在浏览器打开 https://visualstudio.microsoft.com/zh-hans/visual-cpp-build-tools/&lt;/li&gt;
&lt;li&gt;点击 “下载生成工具”，接着会下载 vs_BuildTools.exe。&lt;/li&gt;
&lt;li&gt;下载完毕后执行 vs_BuildTools.exe，在工作负载勾选第一个。&lt;/li&gt;
&lt;li&gt;在右侧勾选以下组件：MSVC v143 - VS 2022 C++ x64/x86 build tools、Windows 11 SDK。&lt;/li&gt;
&lt;li&gt;点击安装即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，在终端执行：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;path/to/directory&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; swig&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;gymnasium[box2d]&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; gymnasium_env&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pip &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;自此相关环境已经配置完毕。&lt;/p&gt;
&lt;h1 id=&#34;创建环境实例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建环境实例&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;rainbow&#34;&gt;创建环境实例&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;在与 gymnasim_env 同级下，编写 run.py 文件：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gymnasium &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; gymnasium_env&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;env &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gymnasium&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;make&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gymnasium_env/GridWorld-v0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;human&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reset&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;episode_over &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; episode_over&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    action &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;action_space&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sample&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    observation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; reward&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; terminated&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; truncated&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; info &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;step&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    episode_over &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; terminated &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; truncated&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;点击运行，就可以看到一个网格，Agent 是蓝色的圆圈，Agent 想要到达红色方块处，这就是 Agent 运行的环境 Env。这个 Agent 因为是一个未训练的模型，所以并不能高效地完成这个任务，它经过了一段时间才 “随机” 地到达了红色方块处。本实践主要是展示如何构建一个环境实例。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/rl_env1.png&#34; alt=&#34;image&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;相关说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关说明&#34;&gt;#&lt;/a&gt; &lt;span class=&#34;rainbow&#34;&gt;相关说明&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;下面说明一些重要的方法以帮助进一步理解环境创建的过程。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;env &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; gymnasium&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;make&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;gymnasium_env/GridWorld-v0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; render_mode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;human&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个语句，根据 &#39;gymnasium_env/GridWorld-v0&#39; 路径下自定义的环境类创建一个环境，render_mode 是可视化的模式，‘human’表示用人性化的方式展现出来。&lt;/p&gt;
&lt;p&gt;很明显，你发现并没有这个路径 &#39;gymnasium_env/GridWorld-v0&#39;，我们打开 gymnasium_env 文件夹下的__init__.py，可以看到如下代码：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; gymnasium&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;envs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;registration &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; register&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;register&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token builtin&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;gymnasium_env/GridWorld-v0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    entry_point&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;gymnasium_env.envs:GridWorldEnv&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;因为是自定义的环境类，而非 gymnasium 库内置的环境类，所以通常需要用 register 类进行环境注册。entry_point 指定了类的位置，id 根据其创建一个路径。但如此做还不够，因为 gymnasium 不一定能够通过 &amp;quot;gymnasium_env.envs:GridWorldEnv&amp;quot; 找到自定义的 GridWorldEnv。&lt;/p&gt;
&lt;p&gt;因为这条语句的意思是，向 gymnasium_env.envs 文件夹寻找 GridWorldEnv 这个类，但 envs 文件夹自己能不能知道自己有 GridWorldEnv 这个类？我们还要再做一步，在 envs 文件夹内的__init__.py 文件导入 GridWorldEnv，正如代码所示的那样：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; gymnasium_env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;envs&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grid_world &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; GridWorldEnv&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这样，&amp;quot;gymnasium_env.envs:GridWorldEnv&amp;quot; 就能生效了，GridWorldEnv 便可以被注册为 &amp;quot;gymnasium_env/GridWorld-v0&amp;quot; 这个路径。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reset&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;环境类通常有内置方法 reset ()，这个方法用于初始化环境。当环境类被实例化后，使用该方法生成第一个观察状态。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;action &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;action_space&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sample&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当前实践的 Agent 的代码没有定义，所以暂时用环境类内置的 action_space 方法去生成 Agent 的动作。一般情况下，Agent 的 action 是 Agent 观察环境后得出的，是 Agent 的方法。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;observation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; reward&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; terminated&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; truncated&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; info &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;step&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;action&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;环境类需要有 step 方法，根据 Agent 的 action 去生成激励 reward，更新旧观察状态为新观察状态 observation。terminated 是检查是否已经结束游戏，truncated 检查是否应该中途停止游戏，info 是游戏有关的信息。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;没什么说的，关闭环境，释放资源。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
