<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>枯萎的花将在另一彼岸悄然绽放</title>
        <subtitle></subtitle>
        <icon>https://yunhdan.github.io/images/favicon.ico</icon>
        <link>https://yunhdan.github.io</link>
        <author>
          <name>Runhua Deng</name>
        </author>
        <description>计算机视觉 &amp; 图像恢复</description>
        <language>zh-CN</language>
        <pubDate>Mon, 23 Jun 2025 11:30:47 +0800</pubDate>
        <lastBuildDate>Mon, 23 Jun 2025 11:30:47 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/book/%E4%B9%A0%E6%80%9D%E6%83%B3%E7%90%86%E8%AE%BA/</guid>
            <title>新思想理论</title>
            <link>https://yunhdan.github.io/book/%E4%B9%A0%E6%80%9D%E6%83%B3%E7%90%86%E8%AE%BA/</link>
            <category term="读书" scheme="https://yunhdan.github.io/categories/book/" />
            <pubDate>Mon, 23 Jun 2025 11:30:47 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;导论&#34;&gt;&lt;a href=&#34;#导论&#34; class=&#34;headerlink&#34; title=&#34;导论&#34;&gt;&lt;/a&gt;导论&lt;/h1&gt;&lt;h2 id=&#34;新思想是“两个结合”的重大成果&#34;&gt;&lt;a href=&#34;#新思想是“两个结合”的重大成果&#34; class=&#34;headerlink&#34; title=&#34;新思想是“两个结合”的重大成果&#34;&gt;&lt;/a&gt;新思想是“两个结合”的重大成果&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;新思想是马克思主义基本原理同中国具体实际相结合、同中国优秀传统文化相结合的重大成果。&lt;/li&gt;
&lt;li&gt;“两个结合”  我们党在探索中国特色社会主义道路得出的规律性认识，是对坚持和发展马克思主义做出的重大理论贡献，是我们取得成功的重大法宝。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;新思想是完整的科学体系&#34;&gt;&lt;a href=&#34;#新思想是完整的科学体系&#34; class=&#34;headerlink&#34; title=&#34;新思想是完整的科学体系&#34;&gt;&lt;/a&gt;新思想是完整的科学体系&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;新思想回答了新时代坚持和发展什么样的中国特色社会主义、怎样坚持和发展中国特色社会主义、建设什么样的社会主义现代化强国、怎样建设社会主义现代化强国、建设什么样的长期执政的马克思主义政党、怎样建设长期执政的马克思主义政党等重大时代课题。&lt;/li&gt;
&lt;li&gt;十个明确概括了新思想的主要内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;+++info 展开看内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;明确中国特色社会主义的最本质特征是中国共产党领导。&lt;/li&gt;
&lt;li&gt;明确总任务是实现社会主义现代化和中华民族伟大复兴。&lt;/li&gt;
&lt;li&gt;明确新时代下我国社会的主要矛盾是人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾。&lt;/li&gt;
&lt;li&gt;明确中国特色社会主义事业总体布局是经济建设、政治建设、文化建设、社会建设、生态文明建设五位一体。&lt;/li&gt;
&lt;li&gt;明确全面深化改革的总目标是完善和发展中国特色社会主义制度、推进国家治理体系和治理能力的现代化。&lt;/li&gt;
&lt;li&gt;明确全面推进依法治国的总目标是建设中国特色社会主义法治体系、建设社会主义法治国家。&lt;/li&gt;
&lt;li&gt;明确必须坚持和完善社会主义基本经济制度。&lt;/li&gt;
&lt;li&gt;明确党在新时代的强军目标是建设一支听党指挥、能打胜仗、作风优良的人民军队，并把人民军队建设成为世界一流军队。&lt;/li&gt;
&lt;li&gt;明确中国特色大国外交要服务民族复兴、促进人类进步，推动建设新型国际关系，推动构建人类命运共同体。&lt;/li&gt;
&lt;li&gt;明确全面从严治党的战略方针。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;+++&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Springboot%E3%80%81Mybatis/</guid>
            <title>Springboot、Mybatis</title>
            <link>https://yunhdan.github.io/cs/Springboot%E3%80%81Mybatis/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Thu, 19 Jun 2025 13:57:13 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;Mybatis是怎么防止SQL注入的？&#34;&gt;&lt;a href=&#34;#Mybatis是怎么防止SQL注入的？&#34; class=&#34;headerlink&#34; title=&#34;Mybatis是怎么防止SQL注入的？&#34;&gt;&lt;/a&gt;Mybatis是怎么防止SQL注入的？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;这篇文章介绍了什么是SQL注入，以及Mybatis是怎么防止注入的，算是填补一下当时做项目不求甚解带来的漏洞：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQ4MTIzNC9hcnRpY2xlL2RldGFpbHMvMTIwOTUwMDAz&#34;&gt;https://blog.csdn.net/weixin_43481234/article/details/120950003&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/</guid>
            <title>边缘计算</title>
            <link>https://yunhdan.github.io/cs/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Wed, 18 Jun 2025 21:10:03 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;TFlite-GPU-Delegate&#34;&gt;&lt;a href=&#34;#TFlite-GPU-Delegate&#34; class=&#34;headerlink&#34; title=&#34;TFlite GPU Delegate&#34;&gt;&lt;/a&gt;TFlite GPU Delegate&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;这篇算是比较通俗易懂地简要概览一下TFlite GPU Delegate的文章了：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDM1NjEwNDA=&#34;&gt;https://zhuanlan.zhihu.com/p/143561040&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Conda%E3%80%81Pip%E3%80%81Cuda/</guid>
            <title>Conda、Pip、Cuda</title>
            <link>https://yunhdan.github.io/cs/Conda%E3%80%81Pip%E3%80%81Cuda/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Wed, 18 Jun 2025 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;安装mamba-ssm和causal-conv1d&#34;&gt;&lt;a href=&#34;#安装mamba-ssm和causal-conv1d&#34; class=&#34;headerlink&#34; title=&#34;安装mamba_ssm和causal_conv1d&#34;&gt;&lt;/a&gt;安装mamba_ssm和causal_conv1d&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Windows居然也支持mamba_ssim和causal_conv1d了：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MTAwMjAwL2FydGljbGUvZGV0YWlscy8xMzk3NTQyMzE=&#34;&gt;https://blog.csdn.net/qq_45100200/article/details/139754231&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cuda系列&#34;&gt;&lt;a href=&#34;#cuda系列&#34; class=&#34;headerlink&#34; title=&#34;cuda系列&#34;&gt;&lt;/a&gt;cuda系列&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;简要介绍cudatoolkit和CUDA Toolkit的区别：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNzQzNDA5MTEzNQ==&#34;&gt;https://zhuanlan.zhihu.com/p/27434091135&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;进一步详解CUDA和cudatoolkit，拓展至cudnn和nvcc：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMDk0MDU4L2FydGljbGUvZGV0YWlscy8xMTYyMDczMzM=&#34;&gt;https://blog.csdn.net/qq_41094058/article/details/116207333&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/ai/%E7%8E%B0%E4%BB%A3%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</guid>
            <title>现代深度学习</title>
            <link>https://yunhdan.github.io/ai/%E7%8E%B0%E4%BB%A3%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link>
            <category term="人工智能" scheme="https://yunhdan.github.io/categories/ai/" />
            <pubDate>Tue, 17 Jun 2025 15:25:31 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;知识蒸馏方法&#34;&gt;&lt;a href=&#34;#知识蒸馏方法&#34; class=&#34;headerlink&#34; title=&#34;知识蒸馏方法&#34;&gt;&lt;/a&gt;知识蒸馏方法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;一文了解知识蒸馏，通俗易懂：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY5NDA5Ni9hcnRpY2xlL2RldGFpbHMvMTI3NTA1OTQ2&#34;&gt;https://blog.csdn.net/weixin_43694096/article/details/127505946&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;重参数化技术&#34;&gt;&lt;a href=&#34;#重参数化技术&#34; class=&#34;headerlink&#34; title=&#34;重参数化技术&#34;&gt;&lt;/a&gt;重参数化技术&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;重参数化的2篇根基论文&lt;code&gt;RepVGG&lt;/code&gt;和&lt;code&gt;RepMLP&lt;/code&gt;：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzA0Mzg5OTk=&#34;&gt;https://zhuanlan.zhihu.com/p/370438999&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;NTIRE图像恢复赛事&#34;&gt;&lt;a href=&#34;#NTIRE图像恢复赛事&#34; class=&#34;headerlink&#34; title=&#34;NTIRE图像恢复赛事&#34;&gt;&lt;/a&gt;&lt;code&gt;NTIRE&lt;/code&gt;图像恢复赛事&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;23年超分辨率赛道技术报告解读，文末有赛事原报告：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgwMDU3Ny9hcnRpY2xlL2RldGFpbHMvMTMxNjY4Nzgy&#34;&gt;https://blog.csdn.net/weixin_43800577/article/details/131668782&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;显存占用&#34;&gt;&lt;a href=&#34;#显存占用&#34; class=&#34;headerlink&#34; title=&#34;显存占用&#34;&gt;&lt;/a&gt;显存占用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;分析显存占用的内在机理：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NDE4OTQwMTQ=&#34;&gt;https://zhuanlan.zhihu.com/p/641894014&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Pytorch/</guid>
            <title>Pytorch</title>
            <link>https://yunhdan.github.io/cs/Pytorch/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Fri, 13 Jun 2025 13:14:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;Pytorch算子&#34;&gt;&lt;a href=&#34;#Pytorch算子&#34; class=&#34;headerlink&#34; title=&#34;Pytorch算子&#34;&gt;&lt;/a&gt;Pytorch算子&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NzQxNjY5MjA=&#34;&gt;https://zhuanlan.zhihu.com/p/574166920&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;矩阵乘法、矩阵点乘&#34;&gt;&lt;a href=&#34;#矩阵乘法、矩阵点乘&#34; class=&#34;headerlink&#34; title=&#34;矩阵乘法、矩阵点乘&#34;&gt;&lt;/a&gt;矩阵乘法、矩阵点乘&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;这篇分别为矩阵乘法和矩阵点乘介绍了两种广义算子：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzI4NjY3L2FydGljbGUvZGV0YWlscy8xMzQwMTM4OTk=&#34;&gt;https://blog.csdn.net/qq_40728667/article/details/134013899&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Flask/</guid>
            <title>Flask</title>
            <link>https://yunhdan.github.io/cs/Flask/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Fri, 13 Jun 2025 13:10:41 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;pre&gt;&lt;code class=&#34;lang-bash&#34;&gt;pip install Flask
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;Overview、铺垫资料&#34;&gt;&lt;a href=&#34;#Overview、铺垫资料&#34; class=&#34;headerlink&#34; title=&#34;Overview、铺垫资料&#34;&gt;&lt;/a&gt;Overview、铺垫资料&lt;/h1&gt;&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9mbGFzay9mbGFzay10dXRvcmlhbC5odG1s&#34;&gt;Flask 教程 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9mbGFzay9mbGFzay1iYXNpYy1jb25jZXB0Lmh0bWw=&#34;&gt;Flask 基本概念 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9mbGFzay9mbGFzay1sYXlvdXQuaHRtbA==&#34;&gt;Flask 项目结构 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这部分主要是了解Flask的背景。同时了解路由、视图函数、请求对象和响应对象、模板文件、应用工厂、蓝图、配置对象、静态文件是什么。了解Flask的项目结构如何。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Vue/</guid>
            <title>Vue</title>
            <link>https://yunhdan.github.io/cs/Vue/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Fri, 13 Jun 2025 13:07:55 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;循环语句&#34;&gt;&lt;a href=&#34;#循环语句&#34; class=&#34;headerlink&#34; title=&#34;循环语句&#34;&gt;&lt;/a&gt;循环语句&lt;/h1&gt;&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1hTTF9IUi9hcnRpY2xlL2RldGFpbHMvMTI3MzEyNjMyP29wc19yZXF1ZXN0X21pc2M9JTdCJTIycmVxdWVzdCU1RmlkJTIyJTNBJTIyY2JhNzE1ZjNiNzcwOTk1MDVlNzRhOGNlMmUzYzE3MmMlMjIlMkMlMjJzY20lMjIlM0ElMjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyMiU3RCZhbXA7cmVxdWVzdF9pZD1jYmE3MTVmM2I3NzA5OTUwNWU3NGE4Y2UyZTNjMTcyYyZhbXA7Yml6X2lkPTAmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfnRvcF9wb3NpdGl2ZX5kZWZhdWx0LTEtMTI3MzEyNjMyLW51bGwtbnVsbC4xNDJedjEwMl5wY19zZWFyY2hfcmVzdWx0X2Jhc2UzJmFtcDt1dG1fdGVybT12LWZvciZhbXA7c3BtPTEwMTguMjIyNi4zMDAxLjQxODc=&#34;&gt;vue3【列表渲染】v-for 详细介绍（vue中的“循环”）_vue3 v-for-CSDN博客&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtdi1mb3IuaHRtbA==&#34;&gt;Vue3 循环语句 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要围绕如何使用v-for遍历数组、对象。v-for的几种基本用法要掌握。&lt;/p&gt;
&lt;h1 id=&#34;安装Vue项目&#34;&gt;&lt;a href=&#34;#安装Vue项目&#34; class=&#34;headerlink&#34; title=&#34;安装Vue项目&#34;&gt;&lt;/a&gt;安装Vue项目&lt;/h1&gt;&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtaW5zdGFsbC5odG1s&#34;&gt;Vue3 安装 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtY3JlYXRlLXByb2plY3QuaHRtbA==&#34;&gt;Vue3 创建项目 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Vue项目结构说明&#34;&gt;&lt;a href=&#34;#Vue项目结构说明&#34; class=&#34;headerlink&#34; title=&#34;Vue项目结构说明&#34;&gt;&lt;/a&gt;Vue项目结构说明&lt;/h1&gt;&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS92dWUzL3Z1ZTMtcHJvamVjdC1pbnRyby5odG1s&#34;&gt;Vue3 项目说明 | 菜鸟教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/research/%E5%A4%9A%E6%A8%A1%E6%80%81%E8%AE%BA%E6%96%87%E7%B2%BE%E7%82%BC/</guid>
            <title>多模态论文精炼</title>
            <link>https://yunhdan.github.io/research/%E5%A4%9A%E6%A8%A1%E6%80%81%E8%AE%BA%E6%96%87%E7%B2%BE%E7%82%BC/</link>
            <category term="学术" scheme="https://yunhdan.github.io/categories/research/" />
            <pubDate>Wed, 04 Jun 2025 11:04:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;CLIP工作&#34;&gt;&lt;a href=&#34;#CLIP工作&#34; class=&#34;headerlink&#34; title=&#34;CLIP工作&#34;&gt;&lt;/a&gt;&lt;code&gt;CLIP&lt;/code&gt;工作&lt;/h1&gt;&lt;h2 id=&#34;2021-Learning-Transferable-Visual-Models-From-Natural-Language-Supervision-CLIP&#34;&gt;&lt;a href=&#34;#2021-Learning-Transferable-Visual-Models-From-Natural-Language-Supervision-CLIP&#34; class=&#34;headerlink&#34; title=&#34;2021 Learning Transferable Visual Models From Natural Language Supervision(CLIP)&#34;&gt;&lt;/a&gt;&lt;code&gt;2021 Learning Transferable Visual Models From Natural Language Supervision(CLIP)&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;../../assets/clip.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的&lt;code&gt;CLIP&lt;/code&gt;逐段精读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;（1）通过文本和图像的对比学习，模型学习到文本-图像对的匹配关系。&lt;/li&gt;
&lt;li&gt;（2）能够实现通过给定一张图像，在多个文本标签中选择出与图像最相关的文本。也可以实现给定一个文本，选择最符合相关的图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现文本与图像的多模态学习。&lt;/li&gt;
&lt;li&gt;实现实现无标签限制的图像分类，也可以实现无图像限制的文本-图像配对。前者可以用于图像中的物体识别，后者可以用于文本检索图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;CLIP&lt;/code&gt;对比学习训练代码&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# image_encoder - ResNet 或者 Vision Transformer
# text_encoder - CBOW 或者 Text Transformer
# I[n, h, w, c] - 图像形状
# T[n, l] - 文本形状，l是序列长度
# W_i[d_i, d_e] - 图像的线性投射矩阵
# W_t[d_t, d_e] - 文本的线性投射矩阵
# t - learned temperature parameter

# 分别提取图像特征和文本特征
I_f = image_encoder(I) #[n, d_i]
T_f = text_encoder(T) #[n, d_t]

# 对两个特征进行线性投射，得到相同维度的特征，并进行l2归一化
I_e = l2_normalize(np.dot(I_f, W_i), axis=1)
T_e = l2_normalize(np.dot(T_f, W_t), axis=1)

# 计算缩放的余弦相似度：[n, n]
logits = np.dot(I_e, T_e.T) * np.exp(t)

# 对称的对比学习损失：等价于N个类别的cross_entropy_loss
labels = np.arange(n) # 对角线元素的labels
loss_i = cross_entropy_loss(logits, labels, axis=0)
loss_t = cross_entropy_loss(logits, labels, axis=1)
loss = (loss_i + loss_t)/2
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;多模态在分割的应用&#34;&gt;&lt;a href=&#34;#多模态在分割的应用&#34; class=&#34;headerlink&#34; title=&#34;多模态在分割的应用&#34;&gt;&lt;/a&gt;多模态在分割的应用&lt;/h1&gt;&lt;h2 id=&#34;2022-ICLR-Language-driven-semantic-segmentation-LSeg&#34;&gt;&lt;a href=&#34;#2022-ICLR-Language-driven-semantic-segmentation-LSeg&#34; class=&#34;headerlink&#34; title=&#34;2022 ICLR Language-driven semantic segmentation(LSeg)&#34;&gt;&lt;/a&gt;&lt;code&gt;2022 ICLR Language-driven semantic segmentation(LSeg)&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;../../assets/lseg1.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的逐段精读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将&lt;code&gt;CLIP&lt;/code&gt;的原始文本编码器作为需分割的物体标签的文本编码器，以充分提取文本特征。&lt;/li&gt;
&lt;li&gt;将文本特征与图像特征通过矩阵相乘融合得到多模态特征，上采样后与&lt;code&gt;Ground-truth&lt;/code&gt;在像素级使用&lt;code&gt;cross entropy loss&lt;/code&gt;进行训练。&lt;/li&gt;
&lt;li&gt;测试时可以实现，根据需要分割的对象的文本标签，分割特定图像的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一篇把&lt;code&gt;CLIP&lt;/code&gt;模型运用到分割任务且有效果的工作。&lt;/li&gt;
&lt;li&gt;采用监督学习的方式训练，而不是对比学习去训练，也是为了更好地与特定分割任务适应。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不足&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依然是有监督学习，目标函数不是对比学习的目标函数。&lt;/li&gt;
&lt;li&gt;文本特征只是用于融合多模态特征，并没有提供监督信号。&lt;/li&gt;
&lt;li&gt;依然依赖于手工标注&lt;code&gt;segmentation mask&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（可以做识别物体位置的实践）&lt;/p&gt;
&lt;h2 id=&#34;2022-CVPR-GroupViT-Semantic-Segmentation-Emerges-from-Text-Supervision-GroupViT&#34;&gt;&lt;a href=&#34;#2022-CVPR-GroupViT-Semantic-Segmentation-Emerges-from-Text-Supervision-GroupViT&#34; class=&#34;headerlink&#34; title=&#34;2022 CVPR GroupViT:Semantic Segmentation Emerges from Text Supervision(GroupViT)&#34;&gt;&lt;/a&gt;&lt;code&gt;2022 CVPR GroupViT:Semantic Segmentation Emerges from Text Supervision(GroupViT)&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;../../assets/groupvit1.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的逐段精读。&lt;/p&gt;
&lt;p&gt;这篇是分割采用无监督学习的思路。主要使用的是分割中的&lt;code&gt;Grouping&lt;/code&gt;思想。展开来讲，&lt;code&gt;Grouping&lt;/code&gt;将图像分割做为一种聚类任务，首先在图像确定聚类中心点，然后在模型训练的过程中，不断学习聚类中心周围像素点与聚类中心的相互关系，将与聚类中心相关的像素点并入该聚类中心的&lt;code&gt;Group&lt;/code&gt;中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用了文本作为监督信号训练分割任务，不再依赖人工标注的图像&lt;code&gt;Ground-Truth&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;Vision Transformer&lt;/code&gt;作为图像编码器。在每个&lt;code&gt;Transformer&lt;/code&gt;层的输入&lt;code&gt;tokens&lt;/code&gt;中加入若干个&lt;code&gt;group tokens&lt;/code&gt;，这些&lt;code&gt;group tokens&lt;/code&gt;实际上就是预先设想的聚类中心数，也就是猜测的图像有哪些物体类别。经过多个&lt;code&gt;Transformer Layer&lt;/code&gt;，&lt;code&gt;Image tokens&lt;/code&gt;和这几个&lt;code&gt;group tokens&lt;/code&gt;之间的关系被自注意力不断建模与学习。与特定聚类中心接近的&lt;code&gt;image tokens&lt;/code&gt;，其特征也越接近该&lt;code&gt;group token&lt;/code&gt;的特征。&lt;/li&gt;
&lt;li&gt;多个&lt;code&gt;Transformer&lt;/code&gt;层后跟一个&lt;code&gt;Grouping Block&lt;/code&gt;层。&lt;code&gt;Grouping Block&lt;/code&gt;的本质是一个交叉注意力机制，将&lt;code&gt;Image tokens&lt;/code&gt;并入所属的&lt;code&gt;Group tokens&lt;/code&gt;。每个&lt;code&gt;Grouping Block&lt;/code&gt;都将总&lt;code&gt;tokens&lt;/code&gt;数降低，因此也减小了计算成本。&lt;/li&gt;
&lt;li&gt;使用对比学习的方式进行训练，带监督信号的文本被编码后的特征与最后的图像&lt;code&gt;tokens&lt;/code&gt;特征两者交叉熵损失。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先使用了文本标注分割的&lt;code&gt;Ground-Truth&lt;/code&gt;，不再依赖繁琐的手工标注。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不足&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能分割特定数量的类别，无法分割任意数量的物体。测试时，必须指定分割物体的数目，最后得到模型输出的&lt;code&gt;tokens&lt;/code&gt;与文本标签进行余弦相似度的计算，确定分割物体的文本标签。&lt;/li&gt;
&lt;li&gt;训练中没有侧重语义信息，仅训练出了较好的分割能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/groupvit2.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;（测试时，模型输出了两个&lt;code&gt;token&lt;/code&gt;，我们指定分割物体的文本标签有&lt;code&gt;table、dog...potted plant&lt;/code&gt;，于是可以使用余弦相似度计算得到一个相似度矩阵。对每行取最大的值，对应的文本标签即为该&lt;code&gt;token&lt;/code&gt;的类别）&lt;/p&gt;
&lt;h1 id=&#34;多模态在检测的应用&#34;&gt;&lt;a href=&#34;#多模态在检测的应用&#34; class=&#34;headerlink&#34; title=&#34;多模态在检测的应用&#34;&gt;&lt;/a&gt;多模态在检测的应用&lt;/h1&gt;&lt;h2 id=&#34;2022-CVPR-Grounded-Language-Image-Pre-training-Glip&#34;&gt;&lt;a href=&#34;#2022-CVPR-Grounded-Language-Image-Pre-training-Glip&#34; class=&#34;headerlink&#34; title=&#34;2022 CVPR Grounded Language-Image Pre-training(Glip)&#34;&gt;&lt;/a&gt;&lt;code&gt;2022 CVPR Grounded Language-Image Pre-training(Glip)&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;../../assets/glip1.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习自朱毅老师的逐段精读。&lt;/p&gt;
&lt;p&gt;与常规目标检测任务相关的一个任务是&lt;code&gt;Vision Grounding&lt;/code&gt;。具体是根据提供的文本，在图片中找到文本中出现的物体的位置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;贡献&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考&lt;code&gt;CLIP&lt;/code&gt;范式，将图像的&lt;code&gt;Bounding box&lt;/code&gt;的&lt;code&gt;region&lt;/code&gt;输入图像编码器，将提供的文本输入文本编码器，最后得到每个&lt;code&gt;Bounding box&lt;/code&gt;与单词的相似度矩阵。在相似度矩阵上与&lt;code&gt;Ground-Truth&lt;/code&gt;的相似度矩阵求定位损失&lt;code&gt;Localization Loss&lt;/code&gt;和分类损失&lt;code&gt;Alignment Loss&lt;/code&gt;即可完成训练。&lt;/li&gt;
&lt;li&gt;为了更加充分地学习&lt;code&gt;Bounding box&lt;/code&gt;和文本的&lt;code&gt;Joint Feature&lt;/code&gt;，也就是多模态特征。在最后的特征相似度计算前，使用交叉注意力对图像特征和文本特征进行多层交互学习，即&lt;code&gt;Deep Fusion&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;创新&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;Deep Fusion&lt;/code&gt;技术以辅助学习多模态特征。&lt;/li&gt;
&lt;li&gt;将&lt;code&gt;Gounding&lt;/code&gt;任务与目标检测任务很好地结合，并借鉴&lt;code&gt;CLIP&lt;/code&gt;的思想做大规模数据的预训练，成功取得了很好的&lt;code&gt;Zero-shot&lt;/code&gt;效果。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/baoyan/Low-level-Vision-Group/</guid>
            <title>Low-level-Vision-Group</title>
            <link>https://yunhdan.github.io/baoyan/Low-level-Vision-Group/</link>
            <category term="保研" scheme="https://yunhdan.github.io/categories/baoyan/" />
            <pubDate>Tue, 03 Jun 2025 11:08:17 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info &lt;/p&gt;
&lt;p&gt;做底层视觉的团队，供保研用。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;+++danger 注意&lt;/p&gt;
&lt;p&gt;请做好心理准备，这些导师都很强，申请做他们的学生，在面试考核中一定是会被拷打的。对方的学术水平，能力水平本身就在你之上，你的任何漏洞、问题、毛病都会被看得一清二楚。所以想要做到让对方完全满意是不太可能的，要做好这个心理建设。&lt;/p&gt;
&lt;p&gt;+++&lt;/p&gt;
&lt;h1 id=&#34;中山大学-网络空间安全学院&#34;&gt;&lt;a href=&#34;#中山大学-网络空间安全学院&#34; class=&#34;headerlink&#34; title=&#34;中山大学-网络空间安全学院&#34;&gt;&lt;/a&gt;中山大学-网络空间安全学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;任文琦：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3ZpZXcvd2VucWlyZW4vaG9tZXBhZ2U=&#34;&gt;https://sites.google.com/view/wenqiren/homepage&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师特别强，我发过email2次都是已阅没回，没看上我。&lt;/p&gt;
&lt;h1 id=&#34;厦门大学-信息学院&#34;&gt;&lt;a href=&#34;#厦门大学-信息学院&#34; class=&#34;headerlink&#34; title=&#34;厦门大学-信息学院&#34;&gt;&lt;/a&gt;厦门大学-信息学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;丁兴号：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94bXUtc21hcnRkc3AuZ2l0aHViLmlvLw==&#34;&gt;https://xmu-smartdsp.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;没有联系过，没有实验室主页，情况未知。&lt;/p&gt;
&lt;h1 id=&#34;南开大学-密码与网络空间安全学院&#34;&gt;&lt;a href=&#34;#南开大学-密码与网络空间安全学院&#34; class=&#34;headerlink&#34; title=&#34;南开大学-密码与网络空间安全学院&#34;&gt;&lt;/a&gt;南开大学-密码与网络空间安全学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;程明明实验室李重仪，郭春乐：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tbWNoZW5nLm5ldC9yZWNydWl0L2NvbW1lbnQtcGFnZS0yNS8=&#34;&gt;https://mmcheng.net/recruit/comment-page-25/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;底层视觉顶级组，考核贼强，六级要480+。考核差不多相当于用c++复现一篇传统论文，感觉非常困难故未考虑。&lt;/p&gt;
&lt;h1 id=&#34;东南大学-计算机科学与工程学院&#34;&gt;&lt;a href=&#34;#东南大学-计算机科学与工程学院&#34; class=&#34;headerlink&#34; title=&#34;东南大学-计算机科学与工程学院&#34;&gt;&lt;/a&gt;东南大学-计算机科学与工程学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;薛晖：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYWxtLnNldS5lZHUuY24vaHh1ZS8=&#34;&gt;https://palm.seu.edu.cn/hxue/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个是有名的palm实验室，不放实习，不建议去。&lt;/p&gt;
&lt;h1 id=&#34;中山大学-计算机学院&#34;&gt;&lt;a href=&#34;#中山大学-计算机学院&#34; class=&#34;headerlink&#34; title=&#34;中山大学-计算机学院&#34;&gt;&lt;/a&gt;中山大学-计算机学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;李冠彬：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3lzdS1oY3AubmV0L2ZhY3VsdHkvbGlndWFuYmluLmh0bWw=&#34;&gt;https://www.sysu-hcp.net/faculty/liguanbin.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;张冬雨：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jc2Uuc3lzdS5lZHUuY24vdGVhY2hlci9aaGFuZ0Rvbmd5dQ==&#34;&gt;https://cse.sysu.edu.cn/teacher/ZhangDongyu&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过李老师2次，但是都没有看上我，没回信。&lt;/p&gt;
&lt;h1 id=&#34;南京理工大学-计算机科学与工程学院&#34;&gt;&lt;a href=&#34;#南京理工大学-计算机科学与工程学院&#34; class=&#34;headerlink&#34; title=&#34;南京理工大学-计算机科学与工程学院&#34;&gt;&lt;/a&gt;南京理工大学-计算机科学与工程学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;潘金山：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qc3Bhbi5naXRodWIuaW8v&#34;&gt;https://jspan.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师做low level特别强。&lt;/p&gt;
&lt;h1 id=&#34;北京大学-信息工程学院（深圳）&#34;&gt;&lt;a href=&#34;#北京大学-信息工程学院（深圳）&#34; class=&#34;headerlink&#34; title=&#34;北京大学-信息工程学院（深圳）&#34;&gt;&lt;/a&gt;北京大学-信息工程学院（深圳）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;张健：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWNlLnBrdS5lZHUuY24vaW5mby8xMDQ2LzI1MDYuaHRt&#34;&gt;https://www.ece.pku.edu.cn/info/1046/2506.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;老师很强，听说对学生也很温和友好。我联系过2次，均未搭理，没回信。看了一下他实验室的学生的来向，基本全是9和2，双非和四非根本不可能。&lt;/p&gt;
&lt;h1 id=&#34;哈尔滨工业大学-计算机学院&#34;&gt;&lt;a href=&#34;#哈尔滨工业大学-计算机学院&#34; class=&#34;headerlink&#34; title=&#34;哈尔滨工业大学-计算机学院&#34;&gt;&lt;/a&gt;哈尔滨工业大学-计算机学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;左旺孟：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ob21lcGFnZS5oaXQuZWR1LmNuL3dhbmdtZW5nenVv&#34;&gt;https://homepage.hit.edu.cn/wangmengzuo&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师懂得都懂，low level泰斗。听说对学生也相当好，人品也不错。但因为在本部太远，未考虑。&lt;/p&gt;
&lt;h1 id=&#34;南京大学-智能科学与技术学院（苏州）&#34;&gt;&lt;a href=&#34;#南京大学-智能科学与技术学院（苏州）&#34; class=&#34;headerlink&#34; title=&#34;南京大学-智能科学与技术学院（苏州）&#34;&gt;&lt;/a&gt;南京大学-智能科学与技术学院（苏州）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;张凯：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jc3puLmdpdGh1Yi5pby8=&#34;&gt;https://cszn.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;邰颖：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90eXNoaXdvLmdpdGh1Yi5pby9pbmRleC5odG1s&#34;&gt;https://tyshiwo.github.io/index.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过张凯老师，张凯老师人很好。第一次信没有回复，第二次在follow信发过去后很快就回信了，这个是第一个回信的老师，表示欢迎我来。虽然有点类似官回，但给我很大的鼓励。&lt;/p&gt;
&lt;h1 id=&#34;北京师范大学-人工智能学院&#34;&gt;&lt;a href=&#34;#北京师范大学-人工智能学院&#34; class=&#34;headerlink&#34; title=&#34;北京师范大学-人工智能学院&#34;&gt;&lt;/a&gt;北京师范大学-人工智能学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;黄华：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92bWNsLmJudS5lZHUuY24vZ3JvdXAvdGVhY2hlci9kY2RhZWE3OWI1ZTU0Yjc1YjUzMjc5NTEwOWE4NWEzNC5odG0=&#34;&gt;https://vmcl.bnu.edu.cn/group/teacher/dcdaea79b5e54b75b532795109a85a34.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有点偏low level中的底层，与相机有关，感觉干不来。&lt;/p&gt;
&lt;h1 id=&#34;南京大学-计算机学院&#34;&gt;&lt;a href=&#34;#南京大学-计算机学院&#34; class=&#34;headerlink&#34; title=&#34;南京大学-计算机学院&#34;&gt;&lt;/a&gt;南京大学-计算机学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;路通：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcy5uanUuZWR1LmNuL2x1dG9uZy9pbmRleC5odG0=&#34;&gt;https://cs.nju.edu.cn/lutong/index.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过但没有回复。&lt;/p&gt;
&lt;h1 id=&#34;大连理工大学-国际信息科学与工程学院&#34;&gt;&lt;a href=&#34;#大连理工大学-国际信息科学与工程学院&#34; class=&#34;headerlink&#34; title=&#34;大连理工大学-国际信息科学与工程学院&#34;&gt;&lt;/a&gt;大连理工大学-国际信息科学与工程学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;刘日升：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yc2xpdS50ZWNoLw==&#34;&gt;https://rsliu.tech/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个老师同时也做机器人，很强。因为位置偏远，没有考虑。&lt;/p&gt;
&lt;h1 id=&#34;四川大学-计算机学院&#34;&gt;&lt;a href=&#34;#四川大学-计算机学院&#34; class=&#34;headerlink&#34; title=&#34;四川大学-计算机学院&#34;&gt;&lt;/a&gt;四川大学-计算机学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;彭玺：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZW5neGkubWUv&#34;&gt;https://pengxi.me/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;电子科技大学-计算机科学与工程学院&#34;&gt;&lt;a href=&#34;#电子科技大学-计算机科学与工程学院&#34; class=&#34;headerlink&#34; title=&#34;电子科技大学-计算机科学与工程学院&#34;&gt;&lt;/a&gt;电子科技大学-计算机科学与工程学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;顾舒航：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaHVoYW5nZ3UuZ2l0aHViLmlvLw==&#34;&gt;https://shuhanggu.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;天津大学-智能与计算学部&#34;&gt;&lt;a href=&#34;#天津大学-智能与计算学部&#34; class=&#34;headerlink&#34; title=&#34;天津大学-智能与计算学部&#34;&gt;&lt;/a&gt;天津大学-智能与计算学部&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;郭晓杰：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3ZpZXcveGpndW8=&#34;&gt;https://sites.google.com/view/xjguo&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很强，LIME论文的团队。听说对学生也很好，联系过一次，没有回信，再次未被看上。&lt;/p&gt;
&lt;h1 id=&#34;电子科技大学-信息与通信工程学院&#34;&gt;&lt;a href=&#34;#电子科技大学-信息与通信工程学院&#34; class=&#34;headerlink&#34; title=&#34;电子科技大学-信息与通信工程学院&#34;&gt;&lt;/a&gt;电子科技大学-信息与通信工程学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;刘帅成：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5saXVzaHVhaWNoZW5nLm9yZy8=&#34;&gt;http://www.liushuaicheng.org/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很强，GLARE论文的团队，依然是联系过后未被看上，没有回信。&lt;/p&gt;
&lt;h1 id=&#34;中国科学技术大学&#34;&gt;&lt;a href=&#34;#中国科学技术大学&#34; class=&#34;headerlink&#34; title=&#34;中国科学技术大学&#34;&gt;&lt;/a&gt;中国科学技术大学&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;李厚强：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N0YWZmLnVzdGMuZWR1LmNuL35saWhxL2VuLw==&#34;&gt;http://staff.ustc.edu.cn/~lihq/en/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;熊志伟：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N0YWZmLnVzdGMuZWR1LmNuL356d3hpb25nLw==&#34;&gt;http://staff.ustc.edu.cn/~zwxiong/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;刘东：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LnVzdGMuZWR1LmNuL2RvbmdlbGl1Lw==&#34;&gt;https://faculty.ustc.edu.cn/dongeliu/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;陈志波：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LnVzdGMuZWR1LmNuL2NoZW56aGliby8=&#34;&gt;https://faculty.ustc.edu.cn/chenzhibo/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;武汉大学&#34;&gt;&lt;a href=&#34;#武汉大学&#34; class=&#34;headerlink&#34; title=&#34;武汉大学&#34;&gt;&lt;/a&gt;武汉大学&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;马佳义：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL212cC53aHUuZWR1LmNuL2ppYXlpbWEv&#34;&gt;http://mvp.whu.edu.cn/jiayima/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;西安电子科技大学&#34;&gt;&lt;a href=&#34;#西安电子科技大学&#34; class=&#34;headerlink&#34; title=&#34;西安电子科技大学&#34;&gt;&lt;/a&gt;西安电子科技大学&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;董伟生：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWUueGlkaWFuLmVkdS5jbi9mYWN1bHR5L3dzZG9uZy8=&#34;&gt;https://see.xidian.edu.cn/faculty/wsdong/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过董老师2次，但都是没有打开看我的信。&lt;/p&gt;
&lt;h1 id=&#34;西安交通大学&#34;&gt;&lt;a href=&#34;#西安交通大学&#34; class=&#34;headerlink&#34; title=&#34;西安交通大学&#34;&gt;&lt;/a&gt;西安交通大学&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;孟德宇：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nci54anR1LmVkdS5jbi93ZWIvZHltZW5n&#34;&gt;https://gr.xjtu.edu.cn/web/dymeng&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;西交夏令营要本科学校计算机a评估。&lt;/p&gt;
&lt;h1 id=&#34;华东师范大学&#34;&gt;&lt;a href=&#34;#华东师范大学&#34; class=&#34;headerlink&#34; title=&#34;华东师范大学&#34;&gt;&lt;/a&gt;华东师范大学&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;谢源：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LmVjbnUuZWR1LmNuL19zMTYveHkyXzExMzQyL21haW4ucHNw&#34;&gt;https://faculty.ecnu.edu.cn/_s16/xy2_11342/main.psp&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;风评未知，也没有团队主页，暂不考虑。&lt;/p&gt;
&lt;h1 id=&#34;中科院深先所&#34;&gt;&lt;a href=&#34;#中科院深先所&#34; class=&#34;headerlink&#34; title=&#34;中科院深先所&#34;&gt;&lt;/a&gt;中科院深先所&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;MMLab：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tbWxhYi5zaWF0LmFjLmNuLw==&#34;&gt;https://mmlab.siat.ac.cn/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;董超：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3hwaXhlbC5ncm91cC8=&#34;&gt;http://xpixel.group/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过董超老师2次，依然没有打开信看。&lt;/p&gt;
&lt;h1 id=&#34;同济大学-计算机科学与技术学院（软件学院）&#34;&gt;&lt;a href=&#34;#同济大学-计算机科学与技术学院（软件学院）&#34; class=&#34;headerlink&#34; title=&#34;同济大学-计算机科学与技术学院（软件学院）&#34;&gt;&lt;/a&gt;同济大学-计算机科学与技术学院（软件学院）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;张林：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zc2UudG9uZ2ppLmVkdS5jbi9pbmZvLzEyMTIvNTA1Mi5odG0=&#34;&gt;https://sse.tongji.edu.cn/info/1212/5052.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同济大学bar过高。&lt;/p&gt;
&lt;h1 id=&#34;北京邮电大学-计算机学院&#34;&gt;&lt;a href=&#34;#北京邮电大学-计算机学院&#34; class=&#34;headerlink&#34; title=&#34;北京邮电大学-计算机学院&#34;&gt;&lt;/a&gt;北京邮电大学-计算机学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;明安龙：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZWFjaGVyLmJ1cHQuZWR1LmNuL21hbA==&#34;&gt;https://teacher.bupt.edu.cn/mal&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联系过明老师，明老师做计算摄影、美学评估方向为主，方向有点不太match。&lt;/p&gt;
&lt;h1 id=&#34;北京邮电大学-人智学院&#34;&gt;&lt;a href=&#34;#北京邮电大学-人智学院&#34; class=&#34;headerlink&#34; title=&#34;北京邮电大学-人智学院&#34;&gt;&lt;/a&gt;北京邮电大学-人智学院&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;鲁鹏：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jdi14dWViYS5jbHViL3BhZ2VzL21lbWJlcnMvcGx1Lmh0bWw=&#34;&gt;https://cv-xueba.club/pages/members/plu.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/project/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%B0%8F%E5%AE%9E%E8%B7%B5%E2%80%94%E2%80%94%E6%9E%84%E5%BB%BAEnv%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95/</guid>
            <title>强化学习小实践——构建Env的基本方法</title>
            <link>https://yunhdan.github.io/project/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%B0%8F%E5%AE%9E%E8%B7%B5%E2%80%94%E2%80%94%E6%9E%84%E5%BB%BAEnv%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95/</link>
            <category term="项目与实践" scheme="https://yunhdan.github.io/categories/project/" />
            <pubDate>Thu, 22 May 2025 18:50:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;这个小实践以一个示例说明构建Env的基本方法。同样能够涉及到Gymnasium的基本用法。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h1 id=&#34;环境准备-rainbow&#34;&gt;&lt;a href=&#34;#环境准备-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[环境准备]{.rainbow}&#34;&gt;&lt;/a&gt;[环境准备]{.rainbow}&lt;/h1&gt;&lt;p&gt;:::warning&lt;/p&gt;
&lt;p&gt;最好新建一个虚拟环境，在这个环境下进行环境配置。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;首先，需要在终端执行如下命令安装这个示例需要的包：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-shell&#34;&gt;pip install copier
copier copy https://github.com/Farama-Foundation/gymnasium-env-template.git &amp;quot;path/to/directory&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中，”path/to/directory”更改为你自定义的放项目的文件夹位置。执行完毕后，项目文件夹下会出现如下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;.
├── gymnasium_env
│   ├── envs
│   │   ├── grid_world.py
│   │   └── __init__.py
│   ├── __init__.py
│   └── wrappers
│       ├── clip_reward.py
│       ├── discrete_actions.py
│       ├── __init__.py
│       ├── reacher_weighted_reward.py
│       └── relative_position.py
├── LICENSE
├── pyproject.toml
└── README.md
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后确保你的电脑安装了Microsoft Visual C++ Build Tools。&lt;br&gt;安装方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在浏览器打开&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS96aC1oYW5zL3Zpc3VhbC1jcHAtYnVpbGQtdG9vbHMv&#34;&gt;https://visualstudio.microsoft.com/zh-hans/visual-cpp-build-tools/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;点击“下载生成工具”，接着会下载vs_BuildTools.exe。&lt;/li&gt;
&lt;li&gt;下载完毕后执行vs_BuildTools.exe，在工作负载勾选第一个。&lt;/li&gt;
&lt;li&gt;在右侧勾选以下组件：MSVC v143 - VS 2022 C++ x64/x86 build tools、Windows 11 SDK。&lt;/li&gt;
&lt;li&gt;点击安装即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，在终端执行：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-shell&#34;&gt;cd &amp;quot;path/to/directory&amp;quot;
pip install swig
pip install &amp;quot;gymnasium[box2d]&amp;quot;
cd gymnasium_env
pip install -e .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;自此相关环境已经配置完毕。&lt;/p&gt;
&lt;h1 id=&#34;创建环境实例-rainbow&#34;&gt;&lt;a href=&#34;#创建环境实例-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[创建环境实例]{.rainbow}&#34;&gt;&lt;/a&gt;[创建环境实例]{.rainbow}&lt;/h1&gt;&lt;p&gt;在与gymnasim_env同级下，编写run.py文件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;import gymnasium 
import gymnasium_env

env = gymnasium.make(&amp;#39;gymnasium_env/GridWorld-v0&amp;#39;, render_mode=&amp;#39;human&amp;#39;)
env.reset()

episode_over = False
while not episode_over:
    action = env.action_space.sample()
    observation, reward, terminated, truncated, info = env.step(action)

    episode_over = terminated or truncated

env.close()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;点击运行，就可以看到一个网格，Agent是蓝色的圆圈，Agent想要到达红色方块处，这就是Agent运行的环境Env。这个Agent因为是一个未训练的模型，所以并不能高效地完成这个任务，它经过了一段时间才“随机”地到达了红色方块处。本实践主要是展示如何构建一个环境实例。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/rl_env1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;相关说明-rainbow&#34;&gt;&lt;a href=&#34;#相关说明-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[相关说明]{.rainbow}&#34;&gt;&lt;/a&gt;[相关说明]{.rainbow}&lt;/h1&gt;&lt;p&gt;下面说明一些重要的方法以帮助进一步理解环境创建的过程。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;env = gymnasium.make(&amp;#39;gymnasium_env/GridWorld-v0&amp;#39;, render_mode=&amp;#39;human&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个语句，根据’gymnasium_env/GridWorld-v0’路径下自定义的环境类创建一个环境，render_mode是可视化的模式，‘human’表示用人性化的方式展现出来。&lt;/p&gt;
&lt;p&gt;很明显，你发现并没有这个路径’gymnasium_env/GridWorld-v0’，我们打开gymnasium_env文件夹下的__init__.py，可以看到如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;from gymnasium.envs.registration import register

register(
    id=&amp;quot;gymnasium_env/GridWorld-v0&amp;quot;,
    entry_point=&amp;quot;gymnasium_env.envs:GridWorldEnv&amp;quot;,
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为是自定义的环境类，而非gymnasium库内置的环境类，所以通常需要用register类进行环境注册。entry_point指定了类的位置，id根据其创建一个路径。但如此做还不够，因为gymnasium不一定能够通过”gymnasium_env.envs:GridWorldEnv”找到自定义的GridWorldEnv。&lt;/p&gt;
&lt;p&gt;因为这条语句的意思是，向gymnasium_env.envs文件夹寻找GridWorldEnv这个类，但envs文件夹自己能不能知道自己有GridWorldEnv这个类？我们还要再做一步，在envs文件夹内的__init__.py文件导入GridWorldEnv，正如代码所示的那样：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;from gymnasium_env.envs.grid_world import GridWorldEnv
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，”gymnasium_env.envs:GridWorldEnv”就能生效了，GridWorldEnv便可以被注册为”gymnasium_env/GridWorld-v0”这个路径。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;env.reset()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;环境类通常有内置方法reset()，这个方法用于初始化环境。当环境类被实例化后，使用该方法生成第一个观察状态。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;action = env.action_space.sample()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当前实践的Agent的代码没有定义，所以暂时用环境类内置的action_space方法去生成Agent的动作。一般情况下，Agent的action是Agent观察环境后得出的，是Agent的方法。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;observation, reward, terminated, truncated, info = env.step(action)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;环境类需要有step方法，根据Agent的action去生成激励reward，更新旧观察状态为新观察状态observation。terminated是检查是否已经结束游戏，truncated检查是否应该中途停止游戏，info是游戏有关的信息。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;env.close()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;没什么说的，关闭环境，释放资源。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/baoyan/%E4%BF%9D%E7%A0%94%E5%8E%86%E7%A8%8B/</guid>
            <title>保研历程</title>
            <link>https://yunhdan.github.io/baoyan/%E4%BF%9D%E7%A0%94%E5%8E%86%E7%A8%8B/</link>
            <category term="保研" scheme="https://yunhdan.github.io/categories/baoyan/" />
            <pubDate>Fri, 16 May 2025 21:31:49 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;个人基本情况-rainbow&#34;&gt;&lt;a href=&#34;#个人基本情况-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[个人基本情况]{.rainbow}&#34;&gt;&lt;/a&gt;[个人基本情况]{.rainbow}&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;本科：江西四非，计算机科学与技术，2022级&lt;/li&gt;
&lt;li&gt;排名：前5%。&lt;/li&gt;
&lt;li&gt;竞赛：若干国奖，若干省奖。&lt;/li&gt;
&lt;li&gt;科研经历：2段，low-level vision相关，一篇Q2期刊一作，一篇竞赛产出的CVPR Workshop。&lt;/li&gt;
&lt;li&gt;英语：四级558，六级擦边428。无雅思。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;定位与计划-rainbow&#34;&gt;&lt;a href=&#34;#定位与计划-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[定位与计划]{.rainbow}&#34;&gt;&lt;/a&gt;[定位与计划]{.rainbow}&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;院校倾向：主上2，末九。冲中9。有一定的地域考虑，深圳优先。&lt;/li&gt;
&lt;li&gt;方向选择：做AI，主要是Low Level Vision相关，可3d，可多模态。&lt;/li&gt;
&lt;li&gt;导师选择：人好肯带我最重要，个人倾向于年轻的导师，我感觉我不是那种给我资源自己找出路就能很好的人，还是希望有年轻的导师多带带我。导师人好，读研生活愉快些很重要！&lt;/li&gt;
&lt;li&gt;其他的一些考虑：title强一些更好、学硕最佳、暂时没有直博想法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;夏令营经历-rainbow&#34;&gt;&lt;a href=&#34;#夏令营经历-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[夏令营经历]{.rainbow}&#34;&gt;&lt;/a&gt;[夏令营经历]{.rainbow}&lt;/h1&gt;&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;院校&lt;/th&gt;
&lt;th&gt;入营情况&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;南大CS&lt;/td&gt;
&lt;td&gt;寄&lt;/td&gt;
&lt;td&gt;没收到邮件默认为寄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中大网安&lt;/td&gt;
&lt;td&gt;寄&lt;/td&gt;
&lt;td&gt;刚报完名一两天，夏令营就取消了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;北大信工&lt;/td&gt;
&lt;td&gt;寄&lt;/td&gt;
&lt;td&gt;没收到邮件默认为寄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;上科大信院VDI&lt;/td&gt;
&lt;td&gt;未知&lt;/td&gt;
&lt;td&gt;07.07、07.14、07.17&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;华中科大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;川大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中科院深先院&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;南京航空航天&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;华东师大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;武大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;暨南大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;深大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;中科大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;北京师大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;人大信院&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电子科大&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;北交&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h1 id=&#34;预推免&#34;&gt;&lt;a href=&#34;#预推免&#34; class=&#34;headerlink&#34; title=&#34;预推免&#34;&gt;&lt;/a&gt;预推免&lt;/h1&gt;&lt;h1 id=&#34;最后总结&#34;&gt;&lt;a href=&#34;#最后总结&#34; class=&#34;headerlink&#34; title=&#34;最后总结&#34;&gt;&lt;/a&gt;最后总结&lt;/h1&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/ai/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%90%86%E8%AE%BA/</guid>
            <title>深度学习理论</title>
            <link>https://yunhdan.github.io/ai/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%90%86%E8%AE%BA/</link>
            <category term="人工智能" scheme="https://yunhdan.github.io/categories/ai/" />
            <pubDate>Fri, 09 May 2025 23:49:32 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;复习深度学习必要的理论，可参考该复习线路。该文内容学自李沐动手学深度学习，更基础详尽的理论可以学习吴恩达深度学习。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h1 id=&#34;线性神经网络-rainbow&#34;&gt;&lt;a href=&#34;#线性神经网络-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[线性神经网络]{.rainbow}&#34;&gt;&lt;/a&gt;[线性神经网络]{.rainbow}&lt;/h1&gt;&lt;h2 id=&#34;线性回归-dot&#34;&gt;&lt;a href=&#34;#线性回归-dot&#34; class=&#34;headerlink&#34; title=&#34;++线性回归++{.dot}&#34;&gt;&lt;/a&gt;++线性回归++{.dot}&lt;/h2&gt;&lt;p&gt;:::info Summary&lt;/p&gt;
&lt;p&gt;学习视频链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVBYNHkxZzdLQy8/c3BtX2lkX2Zyb209MzMzLjEzODcuY29sbGVjdGlvbi52aWRlb19jYXJkLmNsaWNrJmFtcDt2ZF9zb3VyY2U9M2QxNDU2MGMyOGY5MGVmZGQxZjNlNmNhZjdiZjQyNzc=&#34;&gt;https://www.bilibili.com/video/BV1PX4y1g7KC/?spm_id_from=333.1387.collection.video_card.click&amp;amp;vd_source=3d14560c28f90efdd1f3e6caf7bf4277&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性回归是对n维输入的加权，外加偏差，通常用于预测，方程形式：&lt;script type=&#34;math/tex; mode=display&#34;&gt;
y = w_1x_1 + w_2x_2 + ... + b&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通常使用&lt;code&gt;MSE&lt;/code&gt;损失去衡量预测的精确性，即预测值$\hat{y}$和真实值y的均方差：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
L_{MSE} = \frac{1}{2}||\hat{y} - y||^2&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;线性回归一般有显式解，显式解是损失导数为0的点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;线性回归可以看做是单层神经网络，$w_i$实际上是唯一的一层神经元的权重。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pytorch实现线性回归很简单。线性回归可以被看成是一层神经网络，因此可以用全连接层实现：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;net = nn.Linear(2, 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Linear&lt;/code&gt;第一个参数是输入数据形状的最后一个维度，比如输入数据features.shape是[4,2]，那么&lt;code&gt;Linear&lt;/code&gt;第一个参数就是2。通常输入数据的最后一个维度是数据的特征，2代表输入数据有两个维度的特征，如买房数据有房价和占地面积两个维度的特征。第二个参数就是输出数据形状的最后一个维度。&lt;/p&gt;
&lt;h2 id=&#34;基础优化算法概览-dot&#34;&gt;&lt;a href=&#34;#基础优化算法概览-dot&#34; class=&#34;headerlink&#34; title=&#34;++基础优化算法概览++{.dot}&#34;&gt;&lt;/a&gt;++基础优化算法概览++{.dot}&lt;/h2&gt;&lt;p&gt;:::info Summary&lt;/p&gt;
&lt;p&gt;学习视频链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVBYNHkxZzdLQz9zcG1faWRfZnJvbT0zMzMuNzg4LnZpZGVvcG9kLmVwaXNvZGVzJmFtcDt2ZF9zb3VyY2U9M2QxNDU2MGMyOGY5MGVmZGQxZjNlNmNhZjdiZjQyNzcmYW1wO3A9Mg==&#34;&gt;https://www.bilibili.com/video/BV1PX4y1g7KC?spm_id_from=333.788.videopod.episodes&amp;amp;vd_source=3d14560c28f90efdd1f3e6caf7bf4277&amp;amp;p=2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h3 id=&#34;梯度下降&#34;&gt;&lt;a href=&#34;#梯度下降&#34; class=&#34;headerlink&#34; title=&#34;梯度下降&#34;&gt;&lt;/a&gt;梯度下降&lt;/h3&gt;&lt;p&gt;基本思想是，对一组初始化的参数，反复迭代训练，按照下面的公式进行参数更新，使得最小化损失函数：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
w_t = w_{t-1} - \alpha \frac{\partial Loss}{\partial w_{t-1}}&lt;/script&gt;&lt;p&gt;$\alpha$是学习率。学习率是一个很重要的超参，设置太大会导致模型无法收敛，设置太小会导致收敛过慢。&lt;/p&gt;
&lt;h3 id=&#34;小批量梯度下降&#34;&gt;&lt;a href=&#34;#小批量梯度下降&#34; class=&#34;headerlink&#34; title=&#34;小批量梯度下降&#34;&gt;&lt;/a&gt;小批量梯度下降&lt;/h3&gt;&lt;p&gt;在整个训练集上进行求梯度、求导会很慢。我们可以随机采样b个样本，计算损失来近似整个训练集上的损失。这个b就是&lt;code&gt;batch_size&lt;/code&gt;（批量大小），不能设置太大，太大导致内存占用过高，设置太小又无法充分发挥硬件潜力。&lt;/p&gt;
&lt;h2 id=&#34;基本深度学习训练流程-dot&#34;&gt;&lt;a href=&#34;#基本深度学习训练流程-dot&#34; class=&#34;headerlink&#34; title=&#34;++基本深度学习训练流程++{.dot}&#34;&gt;&lt;/a&gt;++基本深度学习训练流程++{.dot}&lt;/h2&gt;&lt;p&gt;以线性回归为例，假设我们要建立一个这样的模型：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
y = 2x_1 -3.4x_2 + 4.2&lt;/script&gt;&lt;p&gt;事先导入需要用的包：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;import numpy as np
import torch
from torch.utils import data
from d2l import torch as d2l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;人工生成数据：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;def synthetic_data(w, b, num_examples):
    &amp;quot;&amp;quot;&amp;quot;生成y=Xw+b+噪声&amp;quot;&amp;quot;&amp;quot;
    X = torch.normal(0, 1, (num_examples, len(w)))
    y = torch.matmul(X, w) + b
    y += torch.normal(0, 0.01, y.shape)
    return X, y.reshape((-1, 1))

true_w = torch.tensor([2, -3.4])
true_b = 4.2
features, labels = synthetic_data(true_w, true_b, 1000)    # 生成1k个样本。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;数据案例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;print(&amp;#39;features:&amp;#39;, features[0],&amp;#39;\nlabel:&amp;#39;, labels[0])
# 返回
# features: tensor([-0.3679, -1.8471]) 
# label: tensor([9.7361])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;features&lt;/code&gt;是样本的特征，本质是一个二维数组，长度为1000，而&lt;code&gt;label&lt;/code&gt;是样本的预测真实值。这里每个样本有两个特征，对每个特征单独分析，都会发现其与&lt;code&gt;label&lt;/code&gt;存在线性关系：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/d2l1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;读取数据集的函数，返回一个dataloader：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;def load_array(data_arrays, batch_size, is_train=True):
    &amp;quot;&amp;quot;&amp;quot;构造一个PyTorch数据迭代器&amp;quot;&amp;quot;&amp;quot;
    dataset = data.TensorDataset(*data_arrays)
    return data.DataLoader(dataset, batch_size, shuffle=is_train)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;数据情况示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;batch_size = 10
data_iter = load_array((features, labels), batch_size)

next(iter(data_iter))

# 结果分别是features和labels：
# [tensor([[ 0.1554, -0.2034],
#          [-0.2140,  1.0352],
#          [-0.4209,  0.0428],
#          [ 0.1887,  0.6141],
#          [ 0.4987, -0.2314],
#          [ 0.0653,  1.6406],
#          [-1.1881,  0.2900],
#          [-0.2824,  0.5910],
#          [ 0.9963, -0.1816],
#          [-1.6830, -1.3963]]),
#  tensor([[ 5.2116],
#          [ 0.2479],
#          [ 3.2188],
#          [ 2.4845],
#          [ 5.9884],
#          [-1.2453],
#          [ 0.8441],
#          [ 1.6217],
#          [ 6.8072],
#         [ 5.5692]])]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们的目的就是使用这1000个样本，训练出一个线性回归模型，也就是求出w和b，以最大化预测的精度，即给定一个样本特征，能够尽可能估计出其对应&lt;code&gt;label&lt;/code&gt;的值。&lt;/p&gt;
&lt;p&gt;初始化线性回归模型的参数，然后在训练过程中，这些参数会被学习、调整。定义模型和损失函数，并初始化模型参数：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# nn是神经网络的缩写
from torch import nn

net = nn.Sequential(nn.Linear(2, 1))
loss = nn.MSELoss()

net[0].weight.data.normal_(0, 0.01)
net[0].bias.data.fill_(0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;正如前面所说的，对整个数据集进行梯度求导会相当费时，所以通常采用小批量梯度下降——SGD。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;trainer = torch.optim.SGD(net.parameters(), lr=0.03)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样就可以开始训练了：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;num_epochs = 3
for epoch in range(num_epochs):
    for X, y in data_iter:
        l = loss(net(X) ,y)
        trainer.zero_grad()
        l.backward()
        trainer.step()
    l = loss(net(features), labels)
    print(f&amp;#39;epoch &amp;#123;epoch + 1&amp;#125;, loss &amp;#123;l:f&amp;#125;&amp;#39;)

# 训练过程举例：
# epoch 1, loss 0.043705
# epoch 2, loss 0.000172
# epoch 3, loss 0.000047
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;回归、分类与独热编码-dot&#34;&gt;&lt;a href=&#34;#回归、分类与独热编码-dot&#34; class=&#34;headerlink&#34; title=&#34;++回归、分类与独热编码++{.dot}&#34;&gt;&lt;/a&gt;++回归、分类与独热编码++{.dot}&lt;/h2&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;学习视频：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUs2NHkxUTd3dT9zcG1faWRfZnJvbT0zMzMuNzg4LnZpZGVvcG9kLmVwaXNvZGVzJmFtcDt2ZF9zb3VyY2U9M2QxNDU2MGMyOGY5MGVmZGQxZjNlNmNhZjdiZjQyNzc=&#34;&gt;https://www.bilibili.com/video/BV1K64y1Q7wu?spm_id_from=333.788.videopod.episodes&amp;amp;vd_source=3d14560c28f90efdd1f3e6caf7bf4277&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;回归可以用于预测的问题，比如预测房屋被售出价格，或者棒球队可能获得的胜场数，又或者患者住院的天数，回归的输出是一个连续的数值。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/d2l2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;分类则更倾向于问“哪一个”。比如，某个电子邮件是否属于垃圾邮件，某张图像是驴、狗、猫还是鸡。分类问题通常是多个输出，输出i是模型预测输入为第i类的置信度。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/d2l3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;独热编码能够很好地应用到分类问题上，比如有三个类别：{狗，猫，鸡}。在计算机中，可以用(1,0,0)代表狗，用(0,1,0)代表猫，用(0,0,1)代表鸡。也就是说，用向量表示标签，分量和类别一样多，都是3。类别对应的分量设置为1，其他所有分量不是这个类别的设置为0，这就是独热编码。&lt;/p&gt;
&lt;h2 id=&#34;Softmax运算与全连接层-dot&#34;&gt;&lt;a href=&#34;#Softmax运算与全连接层-dot&#34; class=&#34;headerlink&#34; title=&#34;++Softmax运算与全连接层++{.dot}&#34;&gt;&lt;/a&gt;++Softmax运算与全连接层++{.dot}&lt;/h2&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;学习视频：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUs2NHkxUTd3dT9zcG1faWRfZnJvbT0zMzMuNzg4LnZpZGVvcG9kLmVwaXNvZGVzJmFtcDt2ZF9zb3VyY2U9M2QxNDU2MGMyOGY5MGVmZGQxZjNlNmNhZjdiZjQyNzc=&#34;&gt;https://www.bilibili.com/video/BV1K64y1Q7wu?spm_id_from=333.788.videopod.episodes&amp;amp;vd_source=3d14560c28f90efdd1f3e6caf7bf4277&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;softmax运算将数据转换为[0,1]区间的数值，可以理解为一种标准化，数值可以认为是概率。比如，一个长度为3的向量经过softmax操作后，3个数值都会被转换为0到1的区间值，并且相加和为1。&lt;/p&gt;
&lt;p&gt;softmax公式如下：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
softmax(x) = \frac{exp(x_i)}{\sum_{k}^{len(x)}exp(x_k)}&lt;/script&gt;&lt;p&gt;全连接层无处不在，前面提到全连接层可以很方便地通过nn.Linear实现。但是全连接层也不是没有缺点，参数量冗余是问题。对于任何具有d个输入和q个输出的全连接层（对应在最后一个维度上，输入和输出的特征数分别为d和q），参数量开销为O(dq)。&lt;/p&gt;
&lt;p&gt;后续会提到用Dropout方法处理这个问题。&lt;/p&gt;
&lt;h2 id=&#34;经典损失函数-dot&#34;&gt;&lt;a href=&#34;#经典损失函数-dot&#34; class=&#34;headerlink&#34; title=&#34;++经典损失函数++{.dot}&#34;&gt;&lt;/a&gt;++经典损失函数++{.dot}&lt;/h2&gt;&lt;h3 id=&#34;L1损失&#34;&gt;&lt;a href=&#34;#L1损失&#34; class=&#34;headerlink&#34; title=&#34;L1损失&#34;&gt;&lt;/a&gt;L1损失&lt;/h3&gt;&lt;h3 id=&#34;L2损失&#34;&gt;&lt;a href=&#34;#L2损失&#34; class=&#34;headerlink&#34; title=&#34;L2损失&#34;&gt;&lt;/a&gt;L2损失&lt;/h3&gt;&lt;h3 id=&#34;Huber鲁棒损失&#34;&gt;&lt;a href=&#34;#Huber鲁棒损失&#34; class=&#34;headerlink&#34; title=&#34;Huber鲁棒损失&#34;&gt;&lt;/a&gt;Huber鲁棒损失&lt;/h3&gt;&lt;h3 id=&#34;交叉熵损失&#34;&gt;&lt;a href=&#34;#交叉熵损失&#34; class=&#34;headerlink&#34; title=&#34;交叉熵损失&#34;&gt;&lt;/a&gt;交叉熵损失&lt;/h3&gt;&lt;h2 id=&#34;信息论基础-dot&#34;&gt;&lt;a href=&#34;#信息论基础-dot&#34; class=&#34;headerlink&#34; title=&#34;++信息论基础++{.dot}&#34;&gt;&lt;/a&gt;++信息论基础++{.dot}&lt;/h2&gt;&lt;h1 id=&#34;多层感知机-rainbow&#34;&gt;&lt;a href=&#34;#多层感知机-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[多层感知机]{.rainbow}&#34;&gt;&lt;/a&gt;[多层感知机]{.rainbow}&lt;/h1&gt;&lt;h3 id=&#34;多层感知机理论-dot&#34;&gt;&lt;a href=&#34;#多层感知机理论-dot&#34; class=&#34;headerlink&#34; title=&#34;++多层感知机理论++{.dot}&#34;&gt;&lt;/a&gt;++多层感知机理论++{.dot}&lt;/h3&gt;&lt;p&gt;前面提到的线性回归是一种线性神经网络，这样的网络存在一种假设：输入和输出是线性相关的。这种假设下，任何输入的特征增大都会导致模型的输出增大或减小。但很多时候，输入和输出并非是线性相关的。比如一张图像，增加某个位置的像素的强度值能否总是增大其分类为狗的概率？    &lt;/p&gt;
&lt;p&gt;我们可以在网络中加入一个或多个隐藏层来突破线性模型的限制，使其能处理更普遍的函数关系类型。这种架构称为多层感知机（&lt;code&gt;multilayer perceptron, MLP&lt;/code&gt;），这是堆叠许多全连接层的神经网络。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/d2l4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;每两个层都是全连接的，每个输入都会影响隐藏层中的每个神经元，而隐藏层中的每个神经元又会影响输出层中的每个神经元。&lt;/p&gt;
&lt;p&gt;如果输入$X \in \mathbb{R}^{n \times d}$，n是小样本数，d是输入特征。对于隐藏层有权重$W_1 \in \mathbb{R}^{d \times h}$、偏置$b_1 \in \mathbb{R}^{1 \times h}$，输出层也有权重$W_2 \in \mathbb{R}^{h \times q}$和偏置$b_2 \in \mathbb{R}^{1 \times q}$。其中，h通常是这个隐藏层的隐藏单元数，q是输出的输出特征，如果要分类为10类，q就是10。因此多层感知机（单个隐藏层）的数学表达式可以表示为，O是输出，H称为隐藏表征（&lt;code&gt;hidden representation&lt;/code&gt;）：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
H = XW_1 + b_1    \\
O = HW_2 + b_2&lt;/script&gt;&lt;h3 id=&#34;激活函数-dot&#34;&gt;&lt;a href=&#34;#激活函数-dot&#34; class=&#34;headerlink&#34; title=&#34;++激活函数++{.dot}&#34;&gt;&lt;/a&gt;++激活函数++{.dot}&lt;/h3&gt;&lt;p&gt;没有激活函数的多层感知机相当于线性神经网络。观察上面的表达式，隐藏单元由输入的仿射变换给出，而输出也只是隐藏单元的仿射函数。仿射函数的仿射函数还是仿射函数，可以如下证明上面的多层感知机等价于单层模型：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
O = (XW_1 + b_1)W_2 + b_2 = XW_1W_2 + b_1W_2 + b_2 = XW + b&lt;/script&gt;&lt;p&gt;这是因为，之前说到的线性回归模型已经可以表示任何仿射函数。通过合并，多层感知机退化为单层的线性回归模型。为了发挥多层架构的潜力，可以在仿射变换后应用非线性的激活函数（&lt;code&gt;activation function&lt;/code&gt;），即：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
H = \sigma(XW_1 + b_1)    \\
O = \sigma(HW_2 + b_2)&lt;/script&gt;&lt;p&gt;这样，多层感知机避免了线性计算退化为单层的线性模型的风险。通过隐藏层中的神经元，多层感知机可以捕获输入之间复杂的相互作用，这些神经元依赖每个输入的值。如果给定足够的神经元和正确的权重，我们就可以对任意函数进行建模，尽管实际应用中学习该函数是很困难的。&lt;/p&gt;
&lt;h4 id=&#34;ReLU函数&#34;&gt;&lt;a href=&#34;#ReLU函数&#34; class=&#34;headerlink&#34; title=&#34;ReLU函数&#34;&gt;&lt;/a&gt;&lt;code&gt;ReLU&lt;/code&gt;函数&lt;/h4&gt;&lt;p&gt;最受欢迎的激活函数：修正线性单元（&lt;code&gt;rectified linear unit, ReLU&lt;/code&gt;）。数学表达式为：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
ReLU(x) = max(x, 0)&lt;/script&gt;&lt;p&gt;&lt;code&gt;ReLU&lt;/code&gt;函数通过将相应的激活值设为0，仅保留正元素并丢弃所有负元素。当输入值精确为0试，&lt;code&gt;ReLU&lt;/code&gt;函数不可导。&lt;code&gt;ReLU&lt;/code&gt;函数求导很方便，优化表现好，并一定程度上缓解了以往神经网络的梯度消失问题。代码实现和函数曲线图如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;y = torch.relu(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/d2l5.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;sigmoid函数&#34;&gt;&lt;a href=&#34;#sigmoid函数&#34; class=&#34;headerlink&#34; title=&#34;sigmoid函数&#34;&gt;&lt;/a&gt;sigmoid函数&lt;/h4&gt;&lt;p&gt;对于一个定义在$\mathbb{R}$的输入，&lt;code&gt;sigmoid&lt;/code&gt;激活函数将输入变换到(0,1)区间。数学表达式为：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
sigmoid(x) = \frac{1}{1+exp(-x)}&lt;/script&gt;&lt;p&gt;这是一个平滑的、可微的阈值单元的近似函数。sigmoid常被用做输出层的激活函数，这个时候，它输出二元分类的概率，因此sigmoid可以看作是softmax的一个特例。但是，隐藏层中的激活函数还是不选择sigmoid，因为&lt;code&gt;ReLU&lt;/code&gt;更合适。当输入接近0时，sigmoid函数接近线性变换。代码实现和函数曲线图如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;y = torch.sigmoid(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/d2l6.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;Tanh函数&#34;&gt;&lt;a href=&#34;#Tanh函数&#34; class=&#34;headerlink&#34; title=&#34;Tanh函数&#34;&gt;&lt;/a&gt;&lt;code&gt;Tanh&lt;/code&gt;函数&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Tanh&lt;/code&gt;（双曲正切）函数也是将输入压缩转换到区间(-1,1)上。函数公式如下：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
tanh(x) = \frac{1 - exp(-2x)}{1+exp(-2x)}&lt;/script&gt;&lt;p&gt;输入在0附近时，它和sigmoid函数一样，接近线性变换。代码实现和函数曲线图如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;y = torch.tanh(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/d2l7.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/other/%E5%8D%9A%E5%AE%A2%E6%96%87%E6%A1%A3%E7%BE%8E%E5%8C%96%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
            <title>博客文档美化使用说明</title>
            <link>https://yunhdan.github.io/other/%E5%8D%9A%E5%AE%A2%E6%96%87%E6%A1%A3%E7%BE%8E%E5%8C%96%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
            <category term="琐碎" scheme="https://yunhdan.github.io/categories/other/" />
            <pubDate>Thu, 06 Mar 2025 21:04:00 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;摘自&lt;code&gt;Hexo-Shoka&lt;/code&gt;主题拥有者的使用说明：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLw==&#34;&gt;Step.4 主题特殊功能 - Theme Shoka Documentation - 二进制杂谈 - 计算机科学 | Yume Shoka = 有夢書架 = 吾乃天，壶中之天 (lostyu.me)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h1 id=&#34;文字特效&#34;&gt;&lt;a href=&#34;#文字特效&#34; class=&#34;headerlink&#34; title=&#34;文字特效&#34;&gt;&lt;/a&gt;文字特效&lt;/h1&gt;&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;++下划线++
++波浪线++&amp;#123;.wavy&amp;#125;
++着重点++&amp;#123;.dot&amp;#125;
++紫色下划线++&amp;#123;.primary&amp;#125;
++绿色波浪线++&amp;#123;.wavy .success&amp;#125;
++黄色着重点++&amp;#123;.dot .warning&amp;#125;
~~删除线～～
~~红色删除线～～&amp;#123;.danger&amp;#125;
==荧光高亮==
[赤橙黄绿青蓝紫]&amp;#123;.rainbow&amp;#125;
[红色]&amp;#123;.red&amp;#125;
[粉色]&amp;#123;.pink&amp;#125;
[橙色]&amp;#123;.orange&amp;#125;
[黄色]&amp;#123;.yellow&amp;#125;
[绿色]&amp;#123;.green&amp;#125;
[靛青]&amp;#123;.aqua&amp;#125;
[蓝色]&amp;#123;.blue&amp;#125;
[紫色]&amp;#123;.purple&amp;#125;
[灰色]&amp;#123;.grey&amp;#125;
快捷键 [Ctrl]&amp;#123;.kbd&amp;#125; + [C]&amp;#123;.kbd .red&amp;#125;
H~2~0
29^th^
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;++下划线++&lt;br&gt;++波浪线++{.wavy}&lt;br&gt;++着重点++{.dot}&lt;br&gt;++紫色下划线++{.primary}&lt;br&gt;++绿色波浪线++{.wavy .success}&lt;br&gt;++黄色着重点++{.dot .warning}&lt;br&gt;~~删除线～～&lt;br&gt;~~红色删除线～～{.danger}&lt;br&gt;==荧光高亮==&lt;br&gt;[赤橙黄绿青蓝紫]{.rainbow}&lt;br&gt;[红色]{.red}&lt;br&gt;[粉色]{.pink}&lt;br&gt;[橙色]{.orange}&lt;br&gt;[黄色]{.yellow}&lt;br&gt;[绿色]{.green}&lt;br&gt;[靛青]{.aqua}&lt;br&gt;[蓝色]{.blue}&lt;br&gt;[紫色]{.purple}&lt;br&gt;[灰色]{.grey}&lt;br&gt;快捷键 [Ctrl]{.kbd} + [C]{.kbd .red}&lt;br&gt;H~2~0&lt;br&gt;29^th^&lt;/p&gt;
&lt;h1 id=&#34;隐藏文字&#34;&gt;&lt;a href=&#34;#隐藏文字&#34; class=&#34;headerlink&#34; title=&#34;隐藏文字&#34;&gt;&lt;/a&gt;隐藏文字&lt;/h1&gt;&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;!! 黑幕黑幕黑幕黑幕黑幕黑幕 !!： 鼠标滑过显示内容
!! 模糊模糊模糊模糊模糊模糊 !!&amp;#123;.bulr&amp;#125; ： 选中文字显示内容
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;!! 黑幕黑幕黑幕黑幕黑幕黑幕 !!： 鼠标滑过显示内容&lt;br&gt;!! 模糊模糊模糊模糊模糊模糊 !!{.bulr} ： 选中文字显示内容&lt;/p&gt;
&lt;h1 id=&#34;标签块&#34;&gt;&lt;a href=&#34;#标签块&#34; class=&#34;headerlink&#34; title=&#34;标签块&#34;&gt;&lt;/a&gt;标签块&lt;/h1&gt;&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;[default]&amp;#123;.label&amp;#125;
[primary]&amp;#123;.label .primary&amp;#125;
[info]&amp;#123;.label .info&amp;#125;
[:heavy_check_mark:success]&amp;#123;.label .success&amp;#125;
[warning]&amp;#123;.label .warning&amp;#125;
[:broken_heart:danger]&amp;#123;.label .danger&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[default]{.label}&lt;br&gt;[primary]{.label .primary}&lt;br&gt;[info]{.label .info}&lt;br&gt;[:heavy_check_mark:success]{.label .success}&lt;br&gt;[warning]{.label .warning}&lt;br&gt;[:broken_heart:danger]{.label .danger}&lt;/p&gt;
&lt;h1 id=&#34;提醒块&#34;&gt;&lt;a href=&#34;#提醒块&#34; class=&#34;headerlink&#34; title=&#34;提醒块&#34;&gt;&lt;/a&gt;提醒块&lt;/h1&gt;&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;:::default
默认默认
:::

:::primary
基本基本
:::

:::info
提示提示
:::

:::success
成功成功
:::

:::warning
警告警告
:::

:::danger
危险危险
:::
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;:::default&lt;/p&gt;
&lt;p&gt;默认默认&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;:::primary&lt;/p&gt;
&lt;p&gt;基本基本&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;提示提示&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;:::success&lt;/p&gt;
&lt;p&gt;成功成功&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;:::warning&lt;/p&gt;
&lt;p&gt;警告警告&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;:::danger&lt;/p&gt;
&lt;p&gt;危险危险&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h1 id=&#34;折叠块&#34;&gt;&lt;a href=&#34;#折叠块&#34; class=&#34;headerlink&#34; title=&#34;折叠块&#34;&gt;&lt;/a&gt;折叠块&lt;/h1&gt;&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;+++ 默认默认 这里是一段文字
++ 下划线 ++
+++


+++primary 紫色
:::info
参考信息
:::

- 第一行
- 第二行
+++


+++info  蓝色
;;;id3 卡片 1
这里是卡片 1 的内容
;;;

;;;id3 卡片 2
这里是卡片 2 的内容
;;;
+++

+++success 绿色
&amp;#123;% links %&amp;#125;
- site: 優萌初華
  url: https://shoka.lostyu.me
  color: &#34;#e9546b&#34;
&amp;#123;% endlinks %&amp;#125;
+++

+++warning 黄色
!! 警告警告警告警告警告！！&amp;#123;.bulr&amp;#125;
[label]&amp;#123;.label .success&amp;#125;
+++

+++danger 红色
[danger]&amp;#123;.label .danger&amp;#125;
+++
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;+++ 默认默认 这里是一段文字&lt;br&gt;++ 下划线 ++&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;+++primary 紫色&lt;/p&gt;
&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;参考信息&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一行&lt;/li&gt;
&lt;li&gt;第二行&lt;br&gt;+++&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;+++info  蓝色&lt;br&gt;;;;id3 卡片 1&lt;br&gt;这里是卡片 1 的内容&lt;br&gt;;;;&lt;/p&gt;
&lt;p&gt;;;;id3 卡片 2&lt;br&gt;这里是卡片 2 的内容&lt;br&gt;;;;&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;+++success 绿色&lt;br&gt;&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;優萌初華&#34; style=&#34;--block-color:#e9546b;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=&#34; data-background-image=&#34;/images/404.png&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=&#34;&gt;優萌初華&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;https://shoka.lostyu.me&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;+++warning 黄色&lt;br&gt;!! 警告警告警告警告警告！！{.bulr}&lt;br&gt;[label]{.label .success}&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;+++danger 红色&lt;br&gt;[danger]{.label .danger}&lt;br&gt;+++&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/ai/Deep-Learning-Experiment-Tricks/</guid>
            <title>Deep Learning Experiment Tricks</title>
            <link>https://yunhdan.github.io/ai/Deep-Learning-Experiment-Tricks/</link>
            <category term="人工智能" scheme="https://yunhdan.github.io/categories/ai/" />
            <pubDate>Sun, 02 Mar 2025 23:58:57 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;一般在一个新的&lt;code&gt;trick&lt;/code&gt;和&lt;code&gt;experience&lt;/code&gt;开坑时，都会先暂时粗略地搬运一些其他地方的内容，或者简略描述。偶尔精进与专门研究时，会特别地丰富和细致化该内容。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h1 id=&#34;pytorch-mssim-ssim的使用&#34;&gt;&lt;a href=&#34;#pytorch-mssim-ssim的使用&#34; class=&#34;headerlink&#34; title=&#34;pytorch_mssim.ssim的使用&#34;&gt;&lt;/a&gt;&lt;code&gt;pytorch_mssim.ssim&lt;/code&gt;的使用&lt;/h1&gt;&lt;p&gt;以下面计算&lt;code&gt;ssim&lt;/code&gt;的代码为例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;ssim_value = ssim(final, gt_batch, data_range=2.0, size_average=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;data_range&lt;/code&gt;表示图像像素值的动态范围（最大值与最小值的差）。如果输入图像经过归一化处理（如 &lt;code&gt;transforms.Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5])&lt;/code&gt;），则像素值范围会被映射到&lt;code&gt;[-1, 1]&lt;/code&gt;。此时 &lt;code&gt;data_range&lt;/code&gt; 应设为 &lt;code&gt;2.0&lt;/code&gt;（因为 &lt;code&gt;1 - (-1) = 2&lt;/code&gt;），而不是 &lt;code&gt;1.0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SSIM&lt;/code&gt;默认假设输入范围是&lt;code&gt;[0, 1]&lt;/code&gt;（当 &lt;code&gt;data_range=1&lt;/code&gt;）或 &lt;code&gt;[0, 255]&lt;/code&gt;（当 &lt;code&gt;data_range=255&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;size_average=True&lt;/code&gt; 会将 &lt;code&gt;SSIM&lt;/code&gt; 值在所有图像和通道上取平均。&lt;code&gt;pytorch_msssim&lt;/code&gt;的新版本使用reduction取代这个参数，重写为：&lt;code&gt;reduction=&amp;#39;mean&amp;#39;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;有时候，应该确保输入给&lt;code&gt;ssim&lt;/code&gt;做计算时的数据范围在&lt;code&gt;[-1, 1]&lt;/code&gt;之间，不然，则要裁剪处理：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;final_clamped = torch.clamp(final, 0.0, 1.0)
ssim_value = ssim(final_clamped, gt_batch, data_range=1.0, size_average=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;损失函数下降、震荡、上升的原因&#34;&gt;&lt;a href=&#34;#损失函数下降、震荡、上升的原因&#34; class=&#34;headerlink&#34; title=&#34;损失函数下降、震荡、上升的原因&#34;&gt;&lt;/a&gt;损失函数下降、震荡、上升的原因&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在训练包含多个损失函数的模型时，各子损失函数的变化趋势能够反映模型的学习动态和优化方向。以下是不同趋势的详细分析及应对策略：&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;一、损失函数整体持续下降&#34;&gt;&lt;a href=&#34;#一、损失函数整体持续下降&#34; class=&#34;headerlink&#34; title=&#34;一、损失函数整体持续下降&#34;&gt;&lt;/a&gt;&lt;strong&gt;一、损失函数整体持续下降&lt;/strong&gt;&lt;/h4&gt;&lt;h4 id=&#34;含义解析&#34;&gt;&lt;a href=&#34;#含义解析&#34; class=&#34;headerlink&#34; title=&#34;含义解析&#34;&gt;&lt;/a&gt;&lt;strong&gt;含义解析&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;良性学习信号&lt;/strong&gt;：模型正在有效优化该任务目标，权重分配合理，数据质量良好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;潜在风险&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;过拟合倾向&lt;/strong&gt;：若验证集对应指标未同步下降，可能过拟合训练数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任务主导性&lt;/strong&gt;：其他损失未充分优化，模型可能偏向该任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;典型案例&#34;&gt;&lt;a href=&#34;#典型案例&#34; class=&#34;headerlink&#34; title=&#34;典型案例&#34;&gt;&lt;/a&gt;&lt;strong&gt;典型案例&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;重建损失（如L1/L2）持续下降，但对抗损失震荡 → 模型过度拟合像素级精度，忽视生成真实性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;应对策略&#34;&gt;&lt;a href=&#34;#应对策略&#34; class=&#34;headerlink&#34; title=&#34;应对策略&#34;&gt;&lt;/a&gt;&lt;strong&gt;应对策略&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;验证泛化性&lt;/strong&gt;：检查验证集对应指标是否同步改善&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;调整权重&lt;/strong&gt;：若其他损失停滞，适当降低该损失权重（如从1.0→0.7）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;早停机制&lt;/strong&gt;：当验证损失不再下降时停止训练&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;二、损失函数震荡波动&#34;&gt;&lt;a href=&#34;#二、损失函数震荡波动&#34; class=&#34;headerlink&#34; title=&#34;二、损失函数震荡波动&#34;&gt;&lt;/a&gt;&lt;strong&gt;二、损失函数震荡波动&lt;/strong&gt;&lt;/h4&gt;&lt;h4 id=&#34;含义解析-1&#34;&gt;&lt;a href=&#34;#含义解析-1&#34; class=&#34;headerlink&#34; title=&#34;含义解析&#34;&gt;&lt;/a&gt;&lt;strong&gt;含义解析&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;优化不稳定&lt;/strong&gt;：学习率过高、批次过小或损失间存在冲突。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据问题&lt;/strong&gt;：噪声数据或类别不均衡导致梯度方向不一致。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对抗性博弈&lt;/strong&gt;：典型于GAN的判别器与生成器损失交替上升。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;数值特征&#34;&gt;&lt;a href=&#34;#数值特征&#34; class=&#34;headerlink&#34; title=&#34;数值特征&#34;&gt;&lt;/a&gt;&lt;strong&gt;数值特征&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高频震荡&lt;/strong&gt;（如±5%）：常由学习率过大引起&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;低频震荡&lt;/strong&gt;（如每5个epoch变化）：多任务目标冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;典型案例-1&#34;&gt;&lt;a href=&#34;#典型案例-1&#34; class=&#34;headerlink&#34; title=&#34;典型案例&#34;&gt;&lt;/a&gt;&lt;strong&gt;典型案例&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;分类损失下降但正则化损失震荡 → L2正则化强度过高导致参数更新不稳定&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;应对策略-1&#34;&gt;&lt;a href=&#34;#应对策略-1&#34; class=&#34;headerlink&#34; title=&#34;应对策略&#34;&gt;&lt;/a&gt;&lt;strong&gt;应对策略&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;降低学习率&lt;/strong&gt;：将初始学习率减少3-5倍（如2e-4→5e-5）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增大批次大小&lt;/strong&gt;：从32提升至128，稳定梯度估计&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;梯度裁剪&lt;/strong&gt;：设置&lt;code&gt;max_grad_norm=1.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;冲突分析&lt;/strong&gt;：计算损失梯度余弦相似度，对负相关损失解耦训练&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;三、损失函数持续上升&#34;&gt;&lt;a href=&#34;#三、损失函数持续上升&#34; class=&#34;headerlink&#34; title=&#34;三、损失函数持续上升&#34;&gt;&lt;/a&gt;&lt;strong&gt;三、损失函数持续上升&lt;/strong&gt;&lt;/h4&gt;&lt;h4 id=&#34;含义解析-2&#34;&gt;&lt;a href=&#34;#含义解析-2&#34; class=&#34;headerlink&#34; title=&#34;含义解析&#34;&gt;&lt;/a&gt;&lt;strong&gt;含义解析&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;严重警告信号&lt;/strong&gt;：模型在该任务上性能退化，优化方向错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常见诱因&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;损失权重倒置&lt;/strong&gt;：如误将权重设为负数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任务本质冲突&lt;/strong&gt;：如超分辨率任务中，L1损失下降但感知损失上升&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数值不稳定&lt;/strong&gt;：梯度爆炸导致损失进入病态区域&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;典型案例-2&#34;&gt;&lt;a href=&#34;#典型案例-2&#34; class=&#34;headerlink&#34; title=&#34;典型案例&#34;&gt;&lt;/a&gt;&lt;strong&gt;典型案例&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;对抗损失上升而重建损失下降 → 判别器过强导致生成器无法有效学习&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;应对策略-2&#34;&gt;&lt;a href=&#34;#应对策略-2&#34; class=&#34;headerlink&#34; title=&#34;应对策略&#34;&gt;&lt;/a&gt;&lt;strong&gt;应对策略&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;立即暂停训练&lt;/strong&gt;：检查损失计算代码和权重符号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;损失权重热力图&lt;/strong&gt;：可视化各损失对总损失的贡献比例&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;渐进式训练&lt;/strong&gt;：分阶段引入上升的损失项（如先用L1预训练，第50epoch加入对抗损失）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;架构改进&lt;/strong&gt;：对于根本性冲突，修改网络结构（如增加多尺度特征融合模块）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;四、综合优化建议&#34;&gt;&lt;a href=&#34;#四、综合优化建议&#34; class=&#34;headerlink&#34; title=&#34;四、综合优化建议&#34;&gt;&lt;/a&gt;&lt;strong&gt;四、综合优化建议&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;动态权重调整&lt;/strong&gt;：采用不确定性加权法（如《Multi-Task Learning Using Uncertainty to Weigh Losses》）&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 各损失自动加权示例
log_var = torch.nn.Parameter(torch.zeros(3)) # 3个损失
loss = 0.5*(loss1/torch.exp(log_var[0]) + loss2/torch.exp(log_var[1]) + log_var.sum())
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;损失相关性监控&lt;/strong&gt;：计算各损失间的Pearson相关系数矩阵，识别冲突组合&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;课程学习策略&lt;/strong&gt;：早期侧重易优化损失（如L1），后期加强高阶损失（如SSIM、VGG感知损失）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可视化工具&lt;/strong&gt;：使用TensorBoard的并行坐标视图对比超参数与损失关系&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;五、调试检查清单&#34;&gt;&lt;a href=&#34;#五、调试检查清单&#34; class=&#34;headerlink&#34; title=&#34;五、调试检查清单&#34;&gt;&lt;/a&gt;&lt;strong&gt;五、调试检查清单&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;当出现异常损失趋势时，按以下顺序排查：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;数值检查&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;确认损失计算未出现NaN/Inf&lt;/li&gt;
&lt;li&gt;检查梯度幅值（&lt;code&gt;torch.nn.utils.clip_grad_norm_&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据流验证&lt;/strong&gt;：&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 数据检查代码片段
for batch in val_loader:
    print(batch[&amp;#39;image&amp;#39;].min(), batch[&amp;#39;image&amp;#39;].max()) # 应为[0,1]或[-1,1]
    visualize(batch[&amp;#39;image&amp;#39;][0]) # 肉眼验证图像质量
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;权重合理性&lt;/strong&gt;：确保各损失量级匹配（如L1≈0.1，对抗损失≈2.0时，需调整权重平衡）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模型容量测试&lt;/strong&gt;：在小数据集（如100样本）上过拟合，验证能否达到预期损失&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过系统分析损失动态，可精准定位模型优化瓶颈，实现多目标协同优化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;transforms-Resize&#34;&gt;&lt;a href=&#34;#transforms-Resize&#34; class=&#34;headerlink&#34; title=&#34;transforms.Resize()&#34;&gt;&lt;/a&gt;&lt;code&gt;transforms.Resize()&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;这个与&lt;code&gt;RandomCrop()&lt;/code&gt;还不太一样，&lt;code&gt;Resize()&lt;/code&gt;是等比例的缩放原图。所以存在一定的信息损失，一般不使用这种操作。&lt;/p&gt;
&lt;h1 id=&#34;不确定性损失加权法——多任务损失均衡&#34;&gt;&lt;a href=&#34;#不确定性损失加权法——多任务损失均衡&#34; class=&#34;headerlink&#34; title=&#34;不确定性损失加权法——多任务损失均衡&#34;&gt;&lt;/a&gt;不确定性损失加权法——多任务损失均衡&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;以下是使用不确定性加权法改造后的损失函数实现：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;import torch
import torch.nn as nn
import torch.nn.functional as F
from pytorch_msssim import ssim

class UncertaintyWeightedLoss(nn.Module):
    def __init__(self, trans, num_tasks=5):
        &amp;quot;&amp;quot;&amp;quot;
        trans: HVI转换器实例
        num_tasks: 需要加权的损失项数量（这里包含L1, SSIM, Res, Cons, HVI）
        &amp;quot;&amp;quot;&amp;quot;
        super().__init__()
        self.trans = trans
        # 初始化可学习的不确定性参数（log方差）
        self.log_vars = nn.Parameter(torch.zeros(num_tasks))
        # 初始化参数（可选）
        nn.init.uniform_(self.log_vars, -3, -1)  # 初始方差在0.05~0.37之间

    def compute_losses(self, final, gt, output, S1, P1, S2, P2):
        &amp;quot;&amp;quot;&amp;quot;分解计算各个基础损失项&amp;quot;&amp;quot;&amp;quot;
        # RGB空间损失
        l1_loss = F.l1_loss(final, gt)
        ssim_loss = 1 - ssim(final, gt, data_range=1.0, size_average=True)

        # 残差一致性损失
        loss_res1 = F.mse_loss(S1, P1 + S2) / (S1.detach().var() + 1e-6)
        loss_res2 = F.mse_loss(S2, P2 + S1) / (S2.detach().var() + 1e-6)
        res_loss = loss_res1 + loss_res2

        # 下采样一致性损失
        g1, g2 = pair_downsampler(output)
        cons_loss = F.l1_loss(S1, P1 + g1) + F.l1_loss(S2, P2 + g2)

        # HVI空间损失
        final_hvi = self.trans.HVIT(final)
        gt_hvi = self.trans.HVIT(gt)
        hvi_l1 = F.l1_loss(final_hvi, gt_hvi)
        hvi_edge = edge_loss(final_hvi, gt_hvi)

        return [l1_loss, ssim_loss, res_loss, cons_loss, hvi_l1, hvi_edge]

    def forward(self, final, gt, output, S1, P1, S2, P2):
        # 获取所有基础损失项
        losses = self.compute_losses(final, gt, output, S1, P1, S2, P2)

        # 应用不确定性加权
        total_loss = 0.0
        for i, loss in enumerate(losses):
            precision = torch.exp(-self.log_vars[i])
            total_loss += precision * loss + self.log_vars[i]

        # 返回总损失和详细损失项（用于监控）
        loss_details = &amp;#123;
            &amp;#39;total&amp;#39;: total_loss,
            &amp;#39;l1&amp;#39;: losses[0],
            &amp;#39;ssim&amp;#39;: losses[1],
            &amp;#39;res&amp;#39;: losses[2],
            &amp;#39;cons&amp;#39;: losses[3],
            &amp;#39;hvi_l1&amp;#39;: losses[4],
            &amp;#39;hvi_edge&amp;#39;: losses[5],
            &amp;#39;log_vars&amp;#39;: self.log_vars
        &amp;#125;
        return total_loss, loss_details
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主要改进点说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;模块化设计&lt;/strong&gt;：&lt;br&gt;```python&lt;h1 id=&#34;初始化方式变化&#34;&gt;&lt;a href=&#34;#初始化方式变化&#34; class=&#34;headerlink&#34; title=&#34;初始化方式变化&#34;&gt;&lt;/a&gt;初始化方式变化&lt;/h1&gt;trans = RGB_HVI().to(device)&lt;br&gt;criterion = UncertaintyWeightedLoss(trans).to(device)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;前向计算变化&#34;&gt;&lt;a href=&#34;#前向计算变化&#34; class=&#34;headerlink&#34; title=&#34;前向计算变化&#34;&gt;&lt;/a&gt;前向计算变化&lt;/h1&gt;&lt;p&gt;total_loss, loss_details = criterion(final, gt, output, S1, P1, S2, P2)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
2. **动态权重机制**：
- 每个损失项自动获得权重：weight = exp(-log_var)
- 包含正则项：log_var 防止方差无限增大
- 初始权重范围：exp(-3)=0.05 ~ exp(-1)=0.37

3. **训练监控增强**：
```python
# 在训练循环中添加监控
writer.add_scalars(&amp;#39;Loss/Train&amp;#39;, &amp;#123;
    &amp;#39;total&amp;#39;: loss_details[&amp;#39;total&amp;#39;].item(),
    &amp;#39;l1&amp;#39;: loss_details[&amp;#39;l1&amp;#39;].item(),
    &amp;#39;ssim&amp;#39;: loss_details[&amp;#39;ssim&amp;#39;].item(),
    &amp;#39;res&amp;#39;: loss_details[&amp;#39;res&amp;#39;].item(),
    &amp;#39;cons&amp;#39;: loss_details[&amp;#39;cons&amp;#39;].item(),
    &amp;#39;hvi_l1&amp;#39;: loss_details[&amp;#39;hvi_l1&amp;#39;].item(),
    &amp;#39;hvi_edge&amp;#39;: loss_details[&amp;#39;hvi_edge&amp;#39;].item()
&amp;#125;, total_iter)

# 监控不确定性参数
for i, log_var in enumerate(loss_details[&amp;#39;log_vars&amp;#39;]):
    writer.add_scalar(f&amp;#39;Uncertainty/var_&amp;#123;i&amp;#125;&amp;#39;, torch.exp(log_var).item(), epoch)
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;优化器调整&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 需要将损失参数加入优化器
optimizer = optim.Adam(
 list(model.parameters()) + list(criterion.parameters()),
 lr=args.lr, 
 betas=(0.9, 0.999)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;梯度稳定性处理&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 在训练步骤中添加梯度裁剪
torch.nn.utils.clip_grad_norm_(
 list(model.parameters()) + list(criterion.parameters()),
 max_norm=1.0
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;该实现通过以下方式解决原代码问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;自动平衡机制&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;难任务（高方差项）自动获得低权重&lt;/li&gt;
&lt;li&gt;简单任务（低方差项）获得高权重&lt;/li&gt;
&lt;li&gt;通过反向传播自动调整权重&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;数值稳定性改进&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;使用log方差代替直接学习方差，避免除零错误&lt;/li&gt;
&lt;li&gt;初始值限制在合理范围&lt;/li&gt;
&lt;li&gt;梯度裁剪防止参数爆炸&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;可解释性增强&lt;/strong&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;通过TensorBoard可直接观察每个任务的：  &lt;ul&gt;
&lt;li&gt;损失值变化曲线&lt;/li&gt;
&lt;li&gt;自适应权重变化（exp(-log_var)）&lt;/li&gt;
&lt;li&gt;方差参数演化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际使用时需要注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;参数初始化&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 如果某些任务需要强调，可以调整初始值
nn.init.constant_(self.log_vars[4], -2.0)  # 强调HVI_L1损失
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;学习率设置&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 为损失参数设置更小的学习率
optimizer = optim.Adam([
    &amp;#123;&amp;#39;params&amp;#39;: model.parameters(), &amp;#39;lr&amp;#39;: 1e-4&amp;#125;,
    &amp;#123;&amp;#39;params&amp;#39;: criterion.parameters(), &amp;#39;lr&amp;#39;: 1e-5&amp;#125;
])
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;多阶段训练&lt;/strong&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 初始阶段固定部分损失权重
if epoch &amp;lt; warmup_epochs:
    criterion.log_vars.requires_grad_(False)
else:
    criterion.log_vars.requires_grad_(True)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种实现方式比手动调整lambda参数更科学，尤其在处理类似HVI这类新增损失时，能自动平衡其与原有损失项的关系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;余弦退火学习率调度器&#34;&gt;&lt;a href=&#34;#余弦退火学习率调度器&#34; class=&#34;headerlink&#34; title=&#34;余弦退火学习率调度器&#34;&gt;&lt;/a&gt;余弦退火学习率调度器&lt;/h1&gt;&lt;p&gt;一代经典的学习率调度器。&lt;/p&gt;
&lt;p&gt;模板代码参考如：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# ... 其他导入 ...
from torch.optim.lr_scheduler import CosineAnnealingLR

def main():
    # 参数解析
    parser = argparse.ArgumentParser(&amp;quot;MAI_Denoised_Train&amp;quot;)
    # ... 原有参数 ...
    parser.add_argument(&amp;#39;--min_lr&amp;#39;, type=float, default=1e-6, help=&amp;#39;minimum learning rate for cosine annealing&amp;#39;)
    args = parser.parse_args()

    # ... 模型初始化 ...

    # 初始化优化器和调度器
    optimizer = optim.Adam(model.parameters(), lr=args.lr, betas=(0.9, 0.999), weight_decay=1e-6)
    scheduler = CosineAnnealingLR(optimizer, T_max=args.epochs, eta_min=args.min_lr)

    # 训练循环
    for epoch in range(args.epochs):
        # 训练过程...

        # 验证过程...

        # 更新学习率
        scheduler.step()

        # 记录学习率
        current_lr = scheduler.get_last_lr()[0]
        writer.add_scalar(&amp;#39;Learning Rate&amp;#39;, current_lr, epoch)
        logging.info(f&amp;#39;Epoch [&amp;#123;epoch+1&amp;#125;/&amp;#123;args.epochs&amp;#125;] Learning Rate: &amp;#123;current_lr:.7f&amp;#125;&amp;#39;)

    # ... 后续代码 ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;Optuna自动化调参&#34;&gt;&lt;a href=&#34;#Optuna自动化调参&#34; class=&#34;headerlink&#34; title=&#34;Optuna自动化调参&#34;&gt;&lt;/a&gt;&lt;code&gt;Optuna&lt;/code&gt;自动化调参&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;为了使用 Optuna 进行超参数调优，我们需要对代码进行以下主要修改。这里展示关键修改步骤（完整代码见最后）：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;import optuna
from optuna.trial import Trial

def objective(trial):
    # 定义可调参数范围
    args = argparse.Namespace(
        batch_size=trial.suggest_categorical(&amp;#39;batch_size&amp;#39;, [32, 64, 128]),
        lr=trial.suggest_float(&amp;#39;lr&amp;#39;, 1e-6, 1e-3, log=True),
        lambda_hvi1=trial.suggest_float(&amp;#39;lambda_hvi1&amp;#39;, 0.001, 0.1),
        lambda_hvi2=trial.suggest_float(&amp;#39;lambda_hvi2&amp;#39;, 0.001, 0.1),
        lambda_rgb1=trial.suggest_float(&amp;#39;lambda_rgb1&amp;#39;, 0.1, 2),
        lambda_rgb2=trial.suggest_float(&amp;#39;lambda_rgb2&amp;#39;, 0.1, 2),
        # 保留其他固定参数...
        cuda=True,
        gpu=&amp;#39;cuda:0&amp;#39;,
        epochs=100,  # 调试时可减少epoch
        save=f&amp;#39;./EXP/&amp;#123;trial.number&amp;#125;&amp;#39;  # 为每个trial创建独立目录
    )

    # 运行训练并返回验证指标
    final_psnr = train_model(args, trial)
    return final_psnr

def train_model(args, trial=None):
    # [原main()函数内容在这里重构]
    # 在验证循环中报告中间结果
    if trial:
        trial.report(val_psnr, epoch)
        if trial.should_prune():
            raise optuna.exceptions.TrialPruned()

    return best_val_psnr  # 返回需要优化的指标

if __name__ == &amp;quot;__main__&amp;quot;:
    # 创建Optuna study
    study = optuna.create_study(
        direction=&amp;#39;maximize&amp;#39;,
        sampler=optuna.samplers.TPESampler(),
        pruner=optuna.pruners.MedianPruner()
    )

    # 运行优化
    study.optimize(objective, n_trials=50, timeout=3600*24)

    # 输出结果
    print(&amp;quot;Best trial:&amp;quot;)
    trial = study.best_trial
    print(f&amp;quot;  Value: &amp;#123;trial.value&amp;#125;&amp;quot;)
    print(&amp;quot;  Params: &amp;quot;)
    for key, value in trial.params.items():
        print(f&amp;quot;    &amp;#123;key&amp;#125;: &amp;#123;value&amp;#125;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主要修改点说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;参数建议&lt;/strong&gt;：使用 trial.suggest_* 方法替代原argparse参数：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;trial.suggest_categorical(&amp;#39;batch_size&amp;#39;, [32, 64, 128])
trial.suggest_float(&amp;#39;lr&amp;#39;, 1e-6, 1e-3, log=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;目标函数&lt;/strong&gt;：将训练过程封装到目标函数中，返回验证PSNR作为优化指标&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;中间报告&lt;/strong&gt;：在训练过程中定期报告验证指标，支持提前终止：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;trial.report(val_psnr, epoch)
if trial.should_prune():
    raise optuna.exceptions.TrialPruned()
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;独立目录&lt;/strong&gt;：为每个trial创建独立的保存目录，避免文件冲突：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;args.save = f&amp;#39;./EXP/&amp;#123;trial.number&amp;#125;&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Study配置&lt;/strong&gt;：创建优化study时指定优化方向（最大化PSNR）和采样策略：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;study = optuna.create_study(direction=&amp;#39;maximize&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完整整合后的代码示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;import optuna
from optuna.trial import Trial
import argparse
import torch

def main():
    # 原始训练代码...

def objective(trial):
    # 定义超参数搜索空间
    params = &amp;#123;
        &amp;#39;batch_size&amp;#39;: trial.suggest_categorical(&amp;#39;batch_size&amp;#39;, [32, 64, 128]),
        &amp;#39;lr&amp;#39;: trial.suggest_float(&amp;#39;lr&amp;#39;, 1e-6, 1e-3, log=True),
        &amp;#39;lambda_hvi1&amp;#39;: trial.suggest_float(&amp;#39;lambda_hvi1&amp;#39;, 0.001, 0.1),
        &amp;#39;lambda_hvi2&amp;#39;: trial.suggest_float(&amp;#39;lambda_hvi2&amp;#39;, 0.001, 0.1),
        &amp;#39;lambda_rgb1&amp;#39;: trial.suggest_float(&amp;#39;lambda_rgb1&amp;#39;, 0.5, 2.0),
        &amp;#39;lambda_rgb2&amp;#39;: trial.suggest_float(&amp;#39;lambda_rgb2&amp;#39;, 0.5, 2.0),
        &amp;#39;lambda_res&amp;#39;: trial.suggest_float(&amp;#39;lambda_res&amp;#39;, 0.5, 2.0),
        &amp;#39;lambda_cons&amp;#39;: trial.suggest_float(&amp;#39;lambda_cons&amp;#39;, 0.5, 2.0),
    &amp;#125;

    # 固定参数
    fixed_params = &amp;#123;
        &amp;#39;cuda&amp;#39;: True,
        &amp;#39;gpu&amp;#39;: &amp;#39;cuda:0&amp;#39;,
        &amp;#39;epochs&amp;#39;: 100,  # 调优时epoch可以适当减少
        &amp;#39;data_dir&amp;#39;: &amp;#39;/path/to/data&amp;#39;,
        &amp;#39;save&amp;#39;: f&amp;#39;./EXP/trial_&amp;#123;trial.number&amp;#125;&amp;#39;,
    &amp;#125;

    # 合并参数
    args = argparse.Namespace(**&amp;#123;**params, **fixed_params&amp;#125;)

    # 运行训练
    best_psnr = train_with_args(args, trial)
    return best_psnr

def train_with_args(args, trial=None):
    # [原main()函数内容重构到这里]
    # 初始化模型、数据加载等...

    best_psnr = 0
    for epoch in range(args.epochs):
        # 训练循环...

        # 验证循环
        with torch.no_grad():
            val_psnr = evaluate(model, val_loader)

            # 向Optuna报告中间结果
            if trial:
                trial.report(val_psnr, epoch)

                # 提前终止
                if trial.should_prune():
                    raise optuna.exceptions.TrialPruned()

        if val_psnr &amp;gt; best_psnr:
            best_psnr = val_psnr
            torch.save(model.state_dict(), f&amp;quot;&amp;#123;args.save&amp;#125;/best_model.pth&amp;quot;)

    return best_psnr

if __name__ == &amp;quot;__main__&amp;quot;:
    # 创建Optuna study
    study = optuna.create_study(
        direction=&amp;#39;maximize&amp;#39;,
        sampler=optuna.samplers.TPESampler(),
        pruner=optuna.pruners.MedianPruner(n_startup_trials=5, n_warmup_steps=10)
    )

    # 运行优化
    study.optimize(objective, n_trials=50, timeout=3600*24)

    # 输出最佳结果
    print(&amp;quot;Best trial:&amp;quot;)
    trial = study.best_trial
    print(f&amp;quot;  PSNR: &amp;#123;trial.value&amp;#125;&amp;quot;)
    print(&amp;quot;  Params: &amp;quot;)
    for key, value in trial.params.items():
        print(f&amp;quot;    &amp;#123;key&amp;#125;: &amp;#123;value&amp;#125;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;关键优化技巧：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;参数范围设置&lt;/strong&gt;：根据参数性质选择适当的范围：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;trial.suggest_float(&amp;#39;lr&amp;#39;, 1e-6, 1e-3, log=True)  # 对数尺度更适合学习率
trial.suggest_categorical(&amp;#39;batch_size&amp;#39;, [32, 64, 128])
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;提前终止&lt;/strong&gt;：使用MedianPruner避免资源浪费：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;pruner=optuna.pruners.MedianPruner(n_startup_trials=5, n_warmup_steps=10)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;并行优化&lt;/strong&gt;：通过指定n_jobs并行运行：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;study.optimize(objective, n_trials=100, n_jobs=4)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;持久化存储&lt;/strong&gt;：使用数据库保存进度：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;study = optuna.create_study(
    storage=&amp;#39;sqlite:///optuna.db&amp;#39;,
    study_name=&amp;#39;denoising_study&amp;#39;,
    load_if_exists=True
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意事项：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;资源管理&lt;/strong&gt;：调优时适当减少epoch数量（如50-100），最终训练时再用完整epoch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;参数空间&lt;/strong&gt;：初始搜索使用较宽范围，后期可基于初步结果缩小范围&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;指标选择&lt;/strong&gt;：建议使用验证集PSNR作为优化目标，而非训练损失&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;随机种子&lt;/strong&gt;：为保持可比性，可在每个trial中固定随机种子：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;torch.manual_seed(trial.suggest_int(&amp;#39;seed&amp;#39;, 0, 1000))
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GPU内存&lt;/strong&gt;：注意batch_size与GPU显存的匹配，建议在suggest_categorical中包含可行值&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这种集成方式可以在不破坏原有训练逻辑的基础上，系统性地探索超参数空间。最终可以通过study.best_trial.params获取最佳参数组合，用于最终模型的训练。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;混合精度训练&#34;&gt;&lt;a href=&#34;#混合精度训练&#34; class=&#34;headerlink&#34; title=&#34;混合精度训练&#34;&gt;&lt;/a&gt;混合精度训练&lt;/h1&gt;&lt;h1 id=&#34;梯度累积&#34;&gt;&lt;a href=&#34;#梯度累积&#34; class=&#34;headerlink&#34; title=&#34;梯度累积&#34;&gt;&lt;/a&gt;梯度累积&lt;/h1&gt;&lt;p&gt;通过多次小批量迭代累积梯度，模拟大 &lt;code&gt;Batch Size&lt;/code&gt; 的效果，模板代码参考可见下方：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;accumulation_steps = 4  # 累积4个batch的梯度
for i, (inputs, labels) in enumerate(dataloader):
    outputs = model(inputs)
    loss = criterion(outputs, labels)
    loss = loss / accumulation_steps  # 损失按累积步数缩放
    loss.backward()

    if (i + 1) % accumulation_steps == 0:
        optimizer.step()
        optimizer.zero_grad()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;torchinfo统计模型的显存占用&#34;&gt;&lt;a href=&#34;#torchinfo统计模型的显存占用&#34; class=&#34;headerlink&#34; title=&#34;torchinfo统计模型的显存占用&#34;&gt;&lt;/a&gt;&lt;code&gt;torchinfo&lt;/code&gt;统计模型的显存占用&lt;/h1&gt;&lt;p&gt;参考如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;from torchinfo import summary
model = MyModel().cuda()
summary(model, input_size=(batch_size, 3, 256, 256))
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;显存分析器memory-profiler&#34;&gt;&lt;a href=&#34;#显存分析器memory-profiler&#34; class=&#34;headerlink&#34; title=&#34;显存分析器memory_profiler&#34;&gt;&lt;/a&gt;显存分析器&lt;code&gt;memory_profiler&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;这个工具可以可以统计每行代码的显存变化&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;from pytorch_memlab import LineProfiler

@profile
def train_batch(inputs, labels):
    outputs = model(inputs)
    loss = criterion(outputs, labels)
    loss.backward()
    optimizer.step()

# 运行后会打印每行代码的显存变化
train_batch(inputs, labels)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;Dataloader的num-workers设置&#34;&gt;&lt;a href=&#34;#Dataloader的num-workers设置&#34; class=&#34;headerlink&#34; title=&#34;Dataloader的num_workers设置&#34;&gt;&lt;/a&gt;&lt;code&gt;Dataloader&lt;/code&gt;的&lt;code&gt;num_workers&lt;/code&gt;设置&lt;/h1&gt;&lt;p&gt;&lt;code&gt;num_workers&lt;/code&gt;通常设置为0，&lt;code&gt;CPU&lt;/code&gt;线程数的&lt;code&gt;75%&lt;/code&gt;，&lt;code&gt;CPU&lt;/code&gt;线程数，&lt;code&gt;CPU&lt;/code&gt;线程数的两倍。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CPU&lt;/code&gt;的线程数计算公式为：线程数 = 逻辑核心数 = 物理核心数 * 单核线程数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;num_workers&lt;/code&gt;很大程度上影响&lt;code&gt;GPU&lt;/code&gt;的占用率。保持长时间的高&lt;code&gt;GPU&lt;/code&gt;占用率是高效率训练深度学习的基础。&lt;/p&gt;
&lt;h1 id=&#34;损失为Nan的分析&#34;&gt;&lt;a href=&#34;#损失为Nan的分析&#34; class=&#34;headerlink&#34; title=&#34;损失为Nan的分析&#34;&gt;&lt;/a&gt;损失为&lt;code&gt;Nan&lt;/code&gt;的分析&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;损失值出现NaN（Not a Number）通常由数值不稳定引起，以下是可能原因及解决方案：&lt;/p&gt;
&lt;h4 id=&#34;1-输入数据问题&#34;&gt;&lt;a href=&#34;#1-输入数据问题&#34; class=&#34;headerlink&#34; title=&#34;1. 输入数据问题&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;输入数据问题&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;检查数据中的NaN或异常值&lt;/strong&gt;：确保输入数据无缺失或无效值。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;import numpy as np
print(&amp;quot;NaN in data:&amp;quot;, np.isnan(data).any())
print(&amp;quot;数据范围:&amp;quot;, data.min(), data.max())
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;数据标准化/归一化&lt;/strong&gt;：过大或过小的输入值可能导致梯度爆炸。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;data = (data - data.mean()) / data.std()  # 标准化
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-学习率过高&#34;&gt;&lt;a href=&#34;#2-学习率过高&#34; class=&#34;headerlink&#34; title=&#34;2. 学习率过高&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;学习率过高&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;降低学习率&lt;/strong&gt;：过大的学习率会导致参数更新不稳定。&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;optimizer = torch.optim.SGD(model.parameters(), lr=0.01)  # 初始学习率设为0.01或更小
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-损失函数实现问题&#34;&gt;&lt;a href=&#34;#3-损失函数实现问题&#34; class=&#34;headerlink&#34; title=&#34;3. 损失函数实现问题&#34;&gt;&lt;/a&gt;3. &lt;strong&gt;损失函数实现问题&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;避免对零取对数&lt;/strong&gt;：在交叉熵损失中增加极小值ε（如1e-8）。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;loss = -tf.reduce_sum(y_true * tf.math.log(y_pred + 1e-8))
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用框架内置函数&lt;/strong&gt;：如TensorFlow的&lt;code&gt;CategoricalCrossentropy(from_logits=True)&lt;/code&gt;，避免手动实现中的错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-梯度爆炸（前提是你的其他代码得写对）&#34;&gt;&lt;a href=&#34;#4-梯度爆炸（前提是你的其他代码得写对）&#34; class=&#34;headerlink&#34; title=&#34;4. 梯度爆炸（前提是你的其他代码得写对）&#34;&gt;&lt;/a&gt;4. &lt;strong&gt;梯度爆炸（前提是你的其他代码得写对）&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;梯度裁剪&lt;/strong&gt;：限制梯度最大范数。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# PyTorch示例
torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=1.0)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# TensorFlow示例
gradients = tape.gradient(loss, model.trainable_variables)
gradients, _ = tf.clip_by_global_norm(gradients, 1.0)
optimizer.apply_gradients(zip(gradients, model.trainable_variables))
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-模型结构问题&#34;&gt;&lt;a href=&#34;#5-模型结构问题&#34; class=&#34;headerlink&#34; title=&#34;5. 模型结构问题&#34;&gt;&lt;/a&gt;5. &lt;strong&gt;模型结构问题&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;激活函数与输出层匹配&lt;/strong&gt;：分类任务最后一层需用Softmax（或配合&lt;code&gt;from_logits=True&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;权重初始化&lt;/strong&gt;：使用He/Xavier初始化避免初始值过大。&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# PyTorch示例
torch.nn.init.kaiming_normal_(layer.weight)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-数值稳定性技巧&#34;&gt;&lt;a href=&#34;#6-数值稳定性技巧&#34; class=&#34;headerlink&#34; title=&#34;6. 数值稳定性技巧&#34;&gt;&lt;/a&gt;6. &lt;strong&gt;数值稳定性技巧&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;添加Batch Normalization&lt;/strong&gt;：稳定层间输出分布。&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;model.add(tf.keras.layers.BatchNormalization())
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;混合精度训练&lt;/strong&gt;：使用FP16时，开启梯度缩放。&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;optimizer = tf.keras.mixed_precision.LossScaleOptimizer(optimizer)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-调试步骤&#34;&gt;&lt;a href=&#34;#7-调试步骤&#34; class=&#34;headerlink&#34; title=&#34;7. 调试步骤&#34;&gt;&lt;/a&gt;7. &lt;strong&gt;调试步骤&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;小数据集测试&lt;/strong&gt;：用少量样本过拟合，快速复现问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;打印中间结果&lt;/strong&gt;：检查前向传播输出和梯度。&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 检查输出层
print(&amp;quot;模型输出:&amp;quot;, outputs)
# 检查梯度
for name, param in model.named_parameters():
    if param.grad is not None:
        print(f&amp;quot;梯度 &amp;#123;name&amp;#125;: &amp;#123;param.grad.norm()&amp;#125;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;8-其他可能原因&#34;&gt;&lt;a href=&#34;#8-其他可能原因&#34; class=&#34;headerlink&#34; title=&#34;8. 其他可能原因&#34;&gt;&lt;/a&gt;8. &lt;strong&gt;其他可能原因&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正则化过强&lt;/strong&gt;：降低L2正则化系数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据预处理错误&lt;/strong&gt;：检查标准化时是否除以零（如方差为零的特征）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;总结流程&#34;&gt;&lt;a href=&#34;#总结流程&#34; class=&#34;headerlink&#34; title=&#34;总结流程&#34;&gt;&lt;/a&gt;总结流程&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;检查输入数据&lt;/strong&gt;：确保无NaN且已标准化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;降低学习率&lt;/strong&gt;：尝试0.001或更低。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;验证损失函数&lt;/strong&gt;：使用内置函数或添加ε。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;梯度裁剪&lt;/strong&gt;：限制梯度大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;检查模型结构&lt;/strong&gt;：激活函数、初始化、添加BatchNorm。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;逐步调试&lt;/strong&gt;：缩小数据范围，打印中间变量。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过以上步骤逐步排查，通常可以定位并解决NaN损失问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;torchvision-utils-save-image&#34;&gt;&lt;a href=&#34;#torchvision-utils-save-image&#34; class=&#34;headerlink&#34; title=&#34;torchvision.utils.save_image&#34;&gt;&lt;/a&gt;&lt;code&gt;torchvision.utils.save_image&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;有个参数叫做&lt;code&gt;Normalize&lt;/code&gt;，这个将数值映射到&lt;code&gt;[0,255]&lt;/code&gt;的区间。相关使用说明如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;当设置normalize=True时：
- 会自动将张量的数值范围从[min, max]线性映射到[0, 255]
- 例如：输入张量范围是[-1, 1]，会被映射到0-255
- 例如：输入张量范围是[0, 1]，会被映射到0-255（相当于直接乘以255）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;torchvision.utils.save_image&lt;/code&gt;保存图像要求图像的数值范围必须是指定范围，即在&lt;code&gt;[0,1]&lt;/code&gt;或&lt;code&gt;[0,255]&lt;/code&gt;。如果数据范围在其他区间，则需要保证数据范围符合&lt;code&gt;torchvision.utils.save_image&lt;/code&gt;的要求，可通过设置&lt;code&gt;normalize&lt;/code&gt;为&lt;code&gt;True&lt;/code&gt;解决这个问题。&lt;/p&gt;
&lt;h1 id=&#34;export-PYTHONPATH-quot-PWD-PYTHONPATH-quot&#34;&gt;&lt;a href=&#34;#export-PYTHONPATH-quot-PWD-PYTHONPATH-quot&#34; class=&#34;headerlink&#34; title=&#34;export PYTHONPATH=&amp;quot;$PWD:$PYTHONPATH&amp;quot;&#34;&gt;&lt;/a&gt;&lt;code&gt;export PYTHONPATH=&amp;quot;$PWD:$PYTHONPATH&amp;quot;&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;这是一个通过&lt;code&gt;PYTHONPATH&lt;/code&gt;手动指定项目根目录的命令。&lt;/p&gt;
&lt;p&gt;以深度学习项目&lt;code&gt;Retinexformer&lt;/code&gt;为例，这个项目文件夹内包含了训练的代码&lt;code&gt;train.py&lt;/code&gt;，以及模型架构文件等。&lt;/p&gt;
&lt;p&gt;有时候直接在终端通过&lt;code&gt;python train.py&lt;/code&gt;的绝对路径会报一些代码文件中的库引用错误，但是你反复检查了路径，觉得代码里导包的方式没问题。&lt;/p&gt;
&lt;p&gt;这时候你就可以先通过&lt;code&gt;cd&lt;/code&gt;命令进入项目文件夹中，然后再执行这个&lt;code&gt;export&lt;/code&gt;命令手动指定项目根目录：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-bash&#34;&gt;&amp;gt; cd Retinexformer
&amp;gt; export PYTHONPATH=&amp;quot;$PWD:$PYTHONPATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;确保Python优先加载本地项目的代码而不是Anaconda环境中的库&#34;&gt;&lt;a href=&#34;#确保Python优先加载本地项目的代码而不是Anaconda环境中的库&#34; class=&#34;headerlink&#34; title=&#34;确保Python优先加载本地项目的代码而不是Anaconda环境中的库&#34;&gt;&lt;/a&gt;确保&lt;code&gt;Python&lt;/code&gt;优先加载本地项目的代码而不是&lt;code&gt;Anaconda&lt;/code&gt;环境中的库&lt;/h1&gt;&lt;p&gt;情景：&lt;code&gt;TinyNeuralNetwork&lt;/code&gt;库代码在项目文件夹&lt;code&gt;Retinexformer&lt;/code&gt;下面，&lt;code&gt;Anaconda&lt;/code&gt;也有一个&lt;code&gt;TinyNeuralNetwork&lt;/code&gt;库。现在我们在本地更新了&lt;code&gt;TinyNeuralNetwork&lt;/code&gt;库代码，想要运行更新后的库代码中的&lt;code&gt;convert.py&lt;/code&gt;代码。这个时候Python有可能会在执行新库代码&lt;code&gt;convert.py&lt;/code&gt;的时候，调用&lt;code&gt;Anaconda&lt;/code&gt;环境的旧库代码。&lt;/p&gt;
&lt;p&gt;一种方法是指定优先级，强制优先加载项目中的本地库：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;import sys
import os

# 获取当前脚本所在目录（TinyNeuralNetwork文件夹的路径）
TINYNN_DIR = os.path.dirname(os.path.abspath(__file__))
# 获取项目根目录（假设 TinyNeuralNetwork 是 Retinexformer 的子目录）
PROJECT_ROOT = os.path.dirname(TINYNN_DIR)

# 将本地库路径插入到 sys.path 的最前面
sys.path.insert(0, TINYNN_DIR)
sys.path.insert(0, PROJECT_ROOT)

# 打印验证路径是否正确添加（可选）
print(&amp;quot;当前 Python 路径:&amp;quot;)
for p in sys.path:
    print(p)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;另一种方式就是在终端执行&lt;code&gt;convert.py&lt;/code&gt;而不是在&lt;code&gt;IDE&lt;/code&gt;中运行：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;&amp;gt; cd Retinexformer
&amp;gt; export PYTHONPATH=&amp;quot;$PWD:$PYTHONPATH&amp;quot;
&amp;gt; python convert.py
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;当Linux内存不足时，扩大交换空间&#34;&gt;&lt;a href=&#34;#当Linux内存不足时，扩大交换空间&#34; class=&#34;headerlink&#34; title=&#34;当Linux内存不足时，扩大交换空间&#34;&gt;&lt;/a&gt;当&lt;code&gt;Linux&lt;/code&gt;内存不足时，扩大交换空间&lt;/h1&gt;&lt;p&gt;首先要处理一下现有的交换文件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-bash&#34;&gt;# 查看当前启用的交换空间
sudo swapon --show

# 如果存在 /swapfile，先关闭交换文件
sudo swapoff /swapfile

# 删除旧的交换文件
sudo rm /swapfile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后创建一个更大内存的交换文件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-bash&#34;&gt;# 创建8GB交换文件
sudo fallocate -l 8G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/baoyan/Embodied-3D-Labs/</guid>
            <title>Embodied AI Labs</title>
            <link>https://yunhdan.github.io/baoyan/Embodied-3D-Labs/</link>
            <category term="保研" scheme="https://yunhdan.github.io/categories/baoyan/" />
            <pubDate>Sun, 02 Mar 2025 18:29:16 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;收集一些做具身智能的导师和实验室。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h2 id=&#34;中大-电子与通信工程学院（报着乐）-rainbow&#34;&gt;&lt;a href=&#34;#中大-电子与通信工程学院（报着乐）-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[中大-电子与通信工程学院（报着乐）]{.rainbow}&#34;&gt;&lt;/a&gt;[中大-电子与通信工程学院（报着乐）]{.rainbow}&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;郭裕兰（不回），导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zY2hvbGFyLmdvb2dsZS5jb20vY2l0YXRpb25zP3VzZXI9V1FSTnZkc0FBQUFKJmFtcDtobD16aC1DTuOAgeWunumqjOWupOS4u+mhte+8mmh0dHBzOi8vd3d3Lnl1bGFuZ3VvLmNuLw==&#34;&gt;https://scholar.google.com/citations?user=WQRNvdsAAAAJ&amp;amp;hl=zh-CN、实验室主页：https://www.yulanguo.cn/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;人机物智能融合实验室（&lt;code&gt;HCP Lab&lt;/code&gt;）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3lzdS1oY3AubmV0L2hvbWUv&#34;&gt;https://www.sysu-hcp.net/home/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;南科大相关主页-rainbow&#34;&gt;&lt;a href=&#34;#南科大相关主页-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[南科大相关主页]{.rainbow}&#34;&gt;&lt;/a&gt;[南科大相关主页]{.rainbow}&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;系统设计与智能制造学院夏令营：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZGltLnN1c3RlY2guZWR1LmNuL2luZGV4L3Nob3c/aWQ9NDY0&#34;&gt;https://sdim.sustech.edu.cn/index/show?id=464&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;南科大研招网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ncy5zdXN0ZWNoLmVkdS5jbi8jL2FkbWlzc2lvbi9pbmRleA==&#34;&gt;https://gs.sustech.edu.cn/#/admission/index&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;南科大计算机科学与工程系-rainbow&#34;&gt;&lt;a href=&#34;#南科大计算机科学与工程系-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[南科大计算机科学与工程系]{.rainbow}&#34;&gt;&lt;/a&gt;[南科大计算机科学与工程系]{.rainbow}&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;史玉回：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3VzdGVjaC5lZHUuY24vemgvZmFjdWx0aWVzL3NoaXl1aHVpLmh0bWw=&#34;&gt;https://www.sustech.edu.cn/zh/faculties/shiyuhui.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;郝祁：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LnN1c3RlY2guZWR1LmNuLz9jYXQ9MiZhbXA7dGFnaWQ9aGFvcSZhbXA7b3JkZXJieT1kYXRlJmFtcDtpc2Nzcz0xJmFtcDtzbmFwaWQ9MSZhbXA7Z289Mg==&#34;&gt;https://faculty.sustech.edu.cn/?cat=2&amp;amp;tagid=haoq&amp;amp;orderby=date&amp;amp;iscss=1&amp;amp;snapid=1&amp;amp;go=2&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;南科大-机械与能源工程系-rainbow&#34;&gt;&lt;a href=&#34;#南科大-机械与能源工程系-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[南科大-机械与能源工程系]{.rainbow}&#34;&gt;&lt;/a&gt;[南科大-机械与能源工程系]{.rainbow}&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;周博宇-&lt;code&gt;STAR&lt;/code&gt;实验室（已读未回）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yb2JvdGljcy1zdGFyLmNvbS8=&#34;&gt;https://robotics-star.com/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;南科大-电子与电气工程系-rainbow&#34;&gt;&lt;a href=&#34;#南科大-电子与电气工程系-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[南科大-电子与电气工程系]{.rainbow}&#34;&gt;&lt;/a&gt;[南科大-电子与电气工程系]{.rainbow}&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;张宏，实验室主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yY3ZsYWIuZWVlLnN1c3RlY2guZWR1LmNuL3Jlc2VhcmNoX3BhZ2Uv77yM5a+85biI5Li76aG177yaaHR0cHM6Ly93d3cuc3VzdGVjaC5lZHUuY24vemgvZmFjdWx0aWVzL3poYW5naG9uZy5odG1s&#34;&gt;https://rcvlab.eee.sustech.edu.cn/research_page/，导师主页：https://www.sustech.edu.cn/zh/faculties/zhanghong.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;王建坤：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3VzdGVjaC5lZHUuY24vemgvZmFjdWx0aWVzL2ppYW5rdW53YW5nLmh0bWw=&#34;&gt;https://www.sustech.edu.cn/zh/faculties/jiankunwang.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;南科大-系统设计与智能制造学院-rainbow&#34;&gt;&lt;a href=&#34;#南科大-系统设计与智能制造学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[南科大-系统设计与智能制造学院]{.rainbow}&#34;&gt;&lt;/a&gt;[南科大-系统设计与智能制造学院]{.rainbow}&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;陈亮名：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3VzdGVjaC5lZHUuY24vemgvZmFjdWx0aWVzL2xpYW5nbWluZ2NoZW4uaHRtbA==&#34;&gt;https://www.sustech.edu.cn/zh/faculties/liangmingchen.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;南大-智科院-rainbow&#34;&gt;&lt;a href=&#34;#南大-智科院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[南大-智科院]{.rainbow}&#34;&gt;&lt;/a&gt;[南大-智科院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室&#34;&gt;&lt;a href=&#34;#导师与实验室&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;龙霄潇（已读不回）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueHhsb25nLnNpdGUvaW5kZXhfY24uaHRtbA==&#34;&gt;https://www.xxlong.site/index_cn.html&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;朱昊（3D）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy56aHVoYW8uY2MvaG9tZV96aC8=&#34;&gt;http://www.zhuhao.cc/home_zh/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;模式识别与计算机视觉研究组谢晋（&lt;code&gt;PRCV&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;南大-计算机学院-rainbow&#34;&gt;&lt;a href=&#34;#南大-计算机学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[南大-计算机学院]{.rainbow}&#34;&gt;&lt;/a&gt;[南大-计算机学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-1&#34;&gt;&lt;a href=&#34;#导师与实验室-1&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;推理与学习小组：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jcy5uanUuZWR1LmNuL3JsL2luZGV4Lmh0bQ==&#34;&gt;https://cs.nju.edu.cn/rl/index.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;清深研究院-rainbow&#34;&gt;&lt;a href=&#34;#清深研究院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[清深研究院]{.rainbow}&#34;&gt;&lt;/a&gt;[清深研究院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;相关主页&#34;&gt;&lt;a href=&#34;#相关主页&#34; class=&#34;headerlink&#34; title=&#34;相关主页&#34;&gt;&lt;/a&gt;相关主页&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;研招网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95emJtLnRzaW5naHVhLmVkdS5jbi9pbmRleA==&#34;&gt;https://yzbm.tsinghua.edu.cn/index&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;各学院相关信息简介：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MjI0NzAxNjg=&#34;&gt;https://zhuanlan.zhihu.com/p/422470168&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;导师与实验室-2&#34;&gt;&lt;a href=&#34;#导师与实验室-2&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;唐岩松，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hbmR5dGFuZzE1LmdpdGh1Yi5pby8=&#34;&gt;https://andytang15.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;人大-信院&#34;&gt;&lt;a href=&#34;#人大-信院&#34; class=&#34;headerlink&#34; title=&#34;人大-信院&#34;&gt;&lt;/a&gt;人大-信院&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;多媒体计算实验室：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVjLWFpbTMuY29tL2luZGV4Lmh0bWw=&#34;&gt;https://www.ruc-aim3.com/index.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;北大-信工-rainbow&#34;&gt;&lt;a href=&#34;#北大-信工-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[北大-信工]{.rainbow}&#34;&gt;&lt;/a&gt;[北大-信工]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-3&#34;&gt;&lt;a href=&#34;#导师与实验室-3&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;刘宏：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWNlLnBrdS5lZHUuY24vaW5mby8xMDYyLzIyNDEuaHRt&#34;&gt;https://www.ece.pku.edu.cn/info/1062/2241.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;上科大-信科院-rainbow&#34;&gt;&lt;a href=&#34;#上科大-信科院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[上科大-信科院]{.rainbow}&#34;&gt;&lt;/a&gt;[上科大-信科院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;相关主页-1&#34;&gt;&lt;a href=&#34;#相关主页-1&#34; class=&#34;headerlink&#34; title=&#34;相关主页&#34;&gt;&lt;/a&gt;相关主页&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;夏令营：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXN0LnNoYW5naGFpdGVjaC5lZHUuY24vMjAyNS8wNTA0L2M3MzM5YTExMTA2NjIvcGFnZS5odG0=&#34;&gt;https://sist.shanghaitech.edu.cn/2025/0504/c7339a1110662/page.htm&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;研招系统：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nYWRtaXNzaW9uLnNoYW5naGFpdGVjaC5lZHUuY24vZW5yb2xsX3N0dWRlbnQvaG9tZT9jb2xsZWdlX29pZD1jNjkwZGQxZWE3ZmY0YzgwODViZWZlN2ViZWVlODlmMA==&#34;&gt;https://gadmission.shanghaitech.edu.cn/enroll_student/home?college_oid=c690dd1ea7ff4c8085befe7ebeee89f0&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;导师网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXN0LnNoYW5naGFpdGVjaC5lZHUuY24vc3pkd3gvbGlzdC5odG0=&#34;&gt;https://sist.shanghaitech.edu.cn/szdwx/list.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;导师与实验室-4&#34;&gt;&lt;a href=&#34;#导师与实验室-4&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;顾家远（&lt;code&gt;SEALab&lt;/code&gt;，已读不回），个人主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXN0LnNoYW5naGFpdGVjaC5lZHUuY24vZ2p5L2xpc3QuaHRt77yM5oub55Sf6K+05piO77yaaHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC83MDI4NDQ5NTc=&#34;&gt;https://sist.shanghaitech.edu.cn/gjy/list.htm，招生说明：https://zhuanlan.zhihu.com/p/702844957&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;石野：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaGl5ZTIxLmdpdGh1Yi5pby8=&#34;&gt;https://shiye21.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;马跃欣：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95dWV4aW5tYS5tZS8=&#34;&gt;https://yuexinma.me/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;汪婧雅：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LnNpc3Quc2hhbmdoYWl0ZWNoLmVkdS5jbi9mYWN1bHR5L3dhbmdqaW5neWEv&#34;&gt;https://faculty.sist.shanghaitech.edu.cn/faculty/wangjingya/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Robot Interaction and Manipulation Lab&lt;/code&gt;：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yaW0tbGFib3JhdG9yeS5naXRodWIuaW8v&#34;&gt;https://rim-laboratory.github.io/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;师泽仁：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy9yb2JvdGljcy5zaGFuZ2hhaXRlY2guZWR1LmNuLw==&#34;&gt;https://link.zhihu.com/?target=https%3A//robotics.shanghaitech.edu.cn/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;西湖大学&#34;&gt;&lt;a href=&#34;#西湖大学&#34; class=&#34;headerlink&#34; title=&#34;西湖大学&#34;&gt;&lt;/a&gt;西湖大学&lt;/h2&gt;&lt;h4 id=&#34;相关主页：&#34;&gt;&lt;a href=&#34;#相关主页：&#34; class=&#34;headerlink&#34; title=&#34;相关主页：&#34;&gt;&lt;/a&gt;相关主页：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;夏令营：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbmdpbmVlcmluZy53ZXN0bGFrZS5lZHUuY24vTmV3c0V2ZW50cy9MYXRlc3ROZXdzLzIwMjUwNC90MjAyNTA0MzBfNTUyMTEuc2h0bWw=&#34;&gt;https://engineering.westlake.edu.cn/NewsEvents/LatestNews/202504/t20250430_55211.shtml&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;研招系统：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ncmFkYWRtaXNzaW9uLndlc3RsYWtlLmVkdS5jbi9wc2MvQ1NQUkQvRU1QTE9ZRUUvU0EvYy9XTF9DVVNUT01JWkVfTUVOVS5XTF9BRF9MT0dJTl9DT00uR0JMP1BhZ2U9V0xfQURfTE9HSU4mYW1wO0FjdGlvbj1VJmFtcDtsYW5ndWFnZUNkPVpIUyZhbXA7&#34;&gt;https://gradadmission.westlake.edu.cn/psc/CSPRD/EMPLOYEE/SA/c/WL_CUSTOMIZE_MENU.WL_AD_LOGIN_COM.GBL?Page=WL_AD_LOGIN&amp;amp;Action=U&amp;amp;languageCd=ZHS&amp;amp;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;导师与实验室-5&#34;&gt;&lt;a href=&#34;#导师与实验室-5&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;盗梦空间&lt;code&gt;3D&lt;/code&gt;实验室：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5pbmNlcHRpb24zZC5mdW4vIw==&#34;&gt;http://www.inception3d.fun/#&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;同济大学-电子与信息工程学院-rainbow&#34;&gt;&lt;a href=&#34;#同济大学-电子与信息工程学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[同济大学-电子与信息工程学院]{.rainbow}&#34;&gt;&lt;/a&gt;[同济大学-电子与信息工程学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-6&#34;&gt;&lt;a href=&#34;#导师与实验室-6&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;王志鹏，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yb2JvdC50b25namkuZWR1LmNuL2luZm8vMTI1Ni8yMDg2Lmh0bQ==&#34;&gt;https://robot.tongji.edu.cn/info/1256/2086.htm&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;蒋烁，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yb2JvdC50b25namkuZWR1LmNuL2luZm8vMTI1Ni8yMDkwLmh0bQ==&#34;&gt;https://robot.tongji.edu.cn/info/1256/2090.htm&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;沈润杰，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yb2JvdC50b25namkuZWR1LmNuL2luZm8vMTI1Ni8yMDg0Lmh0bQ==&#34;&gt;https://robot.tongji.edu.cn/info/1256/2084.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;同济大学-电子与信息工程学院-rainbow-1&#34;&gt;&lt;a href=&#34;#同济大学-电子与信息工程学院-rainbow-1&#34; class=&#34;headerlink&#34; title=&#34;[同济大学-电子与信息工程学院]{.rainbow}&#34;&gt;&lt;/a&gt;[同济大学-电子与信息工程学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-7&#34;&gt;&lt;a href=&#34;#导师与实验室-7&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;范睿（已读不回），实验室主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9taWFzLmdyb3VwL21lbWJlcnMv77yM5oub55Sf6LS077yaaHR0cHM6Ly93d3cuc2R4ejIwNTAuY29tLzQyNjY4Lmh0bWw=&#34;&gt;https://mias.group/members/，招生贴：https://www.sdxz2050.com/42668.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;陈启军，实验室主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYWlsLnRvbmdqaS5lZHUuY24vI2NvbnRhY3Q=&#34;&gt;https://rail.tongji.edu.cn/#contact&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;陆亮，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mYWN1bHR5LnRvbmdqaS5lZHUuY24vbHVsaWFuZzgyOS96aF9DTi9pbmRleC5odG0=&#34;&gt;https://faculty.tongji.edu.cn/luliang829/zh_CN/index.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;武汉大学相关主页-rainbow&#34;&gt;&lt;a href=&#34;#武汉大学相关主页-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[武汉大学相关主页]{.rainbow}&#34;&gt;&lt;/a&gt;[武汉大学相关主页]{.rainbow}&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;研究生招生服务平台：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9laGFsbC53aHUuZWR1LmNuL2dzYXBwL3N5cy93ZHlqc2JtL2VudHJhbmNlLmRv&#34;&gt;https://ehall.whu.edu.cn/gsapp/sys/wdyjsbm/entrance.do&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;武汉大学信息学部-卫星导航定位技术研究中心-rainbow&#34;&gt;&lt;a href=&#34;#武汉大学信息学部-卫星导航定位技术研究中心-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[武汉大学信息学部-卫星导航定位技术研究中心]{.rainbow}&#34;&gt;&lt;/a&gt;[武汉大学信息学部-卫星导航定位技术研究中心]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-8&#34;&gt;&lt;a href=&#34;#导师与实验室-8&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;郭迟，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2pzenkud2h1LmVkdS5jbi9ndW9jaGkvemhfQ04vaW5kZXguaHRt77yM5a6e6aqM5a6k5Li76aG177yaaHR0cHM6Ly93d3cuemhpeXV0ZWFtLmNvbS8=&#34;&gt;http://jszy.whu.edu.cn/guochi/zh_CN/index.htm，实验室主页：https://www.zhiyuteam.com/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;武汉大学-动力与机械学院-rainbow&#34;&gt;&lt;a href=&#34;#武汉大学-动力与机械学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[武汉大学-动力与机械学院]{.rainbow}&#34;&gt;&lt;/a&gt;[武汉大学-动力与机械学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-9&#34;&gt;&lt;a href=&#34;#导师与实验室-9&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;郭朝，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wbWMud2h1LmVkdS5jbi9pbmZvLzEwMTcvMTU2MTMxLmh0bQ==&#34;&gt;https://pmc.whu.edu.cn/info/1017/156131.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;武汉大学-计算机学院-rainbow&#34;&gt;&lt;a href=&#34;#武汉大学-计算机学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[武汉大学-计算机学院]{.rainbow}&#34;&gt;&lt;/a&gt;[武汉大学-计算机学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-10&#34;&gt;&lt;a href=&#34;#导师与实验室-10&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;张敬，导师主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2pzenkud2h1LmVkdS5jbi96aGFuZ2ppbmcxMjM0NTYvemhfQ04vaW5kZXguaHRt&#34;&gt;http://jszy.whu.edu.cn/zhangjing123456/zh_CN/index.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;苏州大学-未来科学与工程学院-rainbow&#34;&gt;&lt;a href=&#34;#苏州大学-未来科学与工程学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[苏州大学-未来科学与工程学院]{.rainbow}&#34;&gt;&lt;/a&gt;[苏州大学-未来科学与工程学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-11&#34;&gt;&lt;a href=&#34;#导师与实验室-11&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;杨聪，个人主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWIuc3VkYS5lZHUuY24veWFuZ2Nvbmcv&#34;&gt;https://web.suda.edu.cn/yangcong/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;西电-电子工程学院-rainbow&#34;&gt;&lt;a href=&#34;#西电-电子工程学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[西电-电子工程学院]{.rainbow}&#34;&gt;&lt;/a&gt;[西电-电子工程学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-12&#34;&gt;&lt;a href=&#34;#导师与实验室-12&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;多模态增强智能实验室：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWUueGlkaWFuLmVkdS5jbi9mYWN1bHR5L3dzZG9uZy9pbmRleC5odG0=&#34;&gt;https://see.xidian.edu.cn/faculty/wsdong/index.htm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;西电-人智学院-rainbow&#34;&gt;&lt;a href=&#34;#西电-人智学院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[西电-人智学院]{.rainbow}&#34;&gt;&lt;/a&gt;[西电-人智学院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-13&#34;&gt;&lt;a href=&#34;#导师与实验室-13&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;梁雪峰（多模态的），个人主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWIueGlkaWFuLmVkdS5jbi94bGlhbmcvaW5kZXguaHRtbA==&#34;&gt;https://web.xidian.edu.cn/xliang/index.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;浙大-计院-rainbow&#34;&gt;&lt;a href=&#34;#浙大-计院-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[浙大-计院]{.rainbow}&#34;&gt;&lt;/a&gt;[浙大-计院]{.rainbow}&lt;/h2&gt;&lt;h4 id=&#34;导师与实验室-14&#34;&gt;&lt;a href=&#34;#导师与实验室-14&#34; class=&#34;headerlink&#34; title=&#34;导师与实验室&#34;&gt;&lt;/a&gt;导师与实验室&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;王文冠，个人主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3ZpZXcvd2VuZ3VhbndhbmfvvIzmi5vnlJ/otLTvvJpodHRwczovL3podWFubGFuLnpoaWh1LmNvbS9wLzgxNTE1NjU5MQ==&#34;&gt;https://sites.google.com/view/wenguanwang，招生贴：https://zhuanlan.zhihu.com/p/815156591&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Next实验室：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5uZXh0LnpqdS5lZHUuY24v&#34;&gt;http://www.next.zju.edu.cn/&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;张博，个人主页：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wZXJzb24uemp1LmVkdS5jbi9Ub255Wmhhbmc=&#34;&gt;https://person.zju.edu.cn/TonyZhang&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/ai/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</guid>
            <title>强化学习</title>
            <link>https://yunhdan.github.io/ai/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</link>
            <category term="人工智能" scheme="https://yunhdan.github.io/categories/ai/" />
            <pubDate>Sat, 01 Mar 2025 17:04:23 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;学习自李宏毅与蘑菇书。蘑菇书链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kYXRhd2hhbGVjaGluYS5naXRodWIuaW8vZWFzeS1ybC8jLw==&#34;&gt;蘑菇书EasyRL (datawhalechina.github.io)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;搭配李宏毅的强化学习课程使用最佳。&lt;/p&gt;
&lt;p&gt;这篇博文内容结合了自己的理解，不可避免地会存在不当，欢迎指正。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h1 id=&#34;情景定义-rainbow&#34;&gt;&lt;a href=&#34;#情景定义-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[情景定义]{.rainbow}&#34;&gt;&lt;/a&gt;[情景定义]{.rainbow}&lt;/h1&gt;&lt;p&gt;智能体&lt;code&gt;Actor&lt;/code&gt;、环境&lt;code&gt;Environment&lt;/code&gt;与奖励&lt;code&gt;Reward&lt;/code&gt;。在后面的内容中，你都可以将智能体理解为玩游戏的机器人，将环境理解为游戏主机，奖励理解为机器人玩游戏干掉怪兽得到的分数。&lt;/p&gt;
&lt;h1 id=&#34;策略梯度算法（Policy-gradient-Algorithm）-rainbow&#34;&gt;&lt;a href=&#34;#策略梯度算法（Policy-gradient-Algorithm）-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[策略梯度算法（Policy gradient Algorithm）]{.rainbow}&#34;&gt;&lt;/a&gt;[策略梯度算法（Policy gradient Algorithm）]{.rainbow}&lt;/h1&gt;&lt;p&gt;智能体通常作为&lt;code&gt;Actor&lt;/code&gt;，在 ++策略++ 不断调整与指引下使得其在环境重获取到最大的奖励。策略在具体的实现上，现代强化学习通常用网络替代之。在前面的比喻中，你可以将策略理解为机器人取得高分的方法和手段。&lt;/p&gt;
&lt;h2 id=&#34;符号定义&#34;&gt;&lt;a href=&#34;#符号定义&#34; class=&#34;headerlink&#34; title=&#34;++符号定义++&#34;&gt;&lt;/a&gt;++符号定义++&lt;/h2&gt;&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;符号&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;释义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$t$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;同一时间下的某个状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$T$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;某个轨迹下的所有状态数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$a_t$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;某个状态下智能体的动作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$s_t$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;某个状态下的环境&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$\theta$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;智能体的策略模型参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$r_t$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;某个状态下智能体采取动作后的奖励&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$\tau_i$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;某次轨迹：所有状态的环境与动作的组合。$\tau=\{s_1,a_1,s_2,a_2,…s_t,a_t\}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$p$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;概率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$R$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;总奖励&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2 id=&#34;手推策略梯度公式&#34;&gt;&lt;a href=&#34;#手推策略梯度公式&#34; class=&#34;headerlink&#34; title=&#34;++手推策略梯度公式++&#34;&gt;&lt;/a&gt;++手推策略梯度公式++&lt;/h2&gt;&lt;p&gt;给定智能体&lt;code&gt;Actor&lt;/code&gt;的参数$\theta$，可以计算轨迹$\tau$的发生的概率：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
p_{\theta}(\tau) = p(s_1)p_{\theta}(a_1|s_1)p(s_2|s_1,a_1)p_{\theta}(a_2|s_2)p(s_3|s_2,a_2)\cdots    \\
=p(s_1)\prod_{t=1}^{T}p_{\theta}(a_t|s_t)p(s_{t+1}|s_t,a_t)    \tag{1.1}&lt;/script&gt;&lt;p&gt; $p_{\theta}(a_1|s_1)$是策略里面的网络参数$\theta$决定的、观察到环境$s_1$后采取的动作概率。因此策略网络的输出是一个分布，是智能体采取动作的概率分布。$p(s_2|s_1,a_1)$是环境根据前一个环境的状态和智能体的动作给出的下一个环境状态，通常是环境内部的规则决定。&lt;/p&gt;
&lt;p&gt;一个轨迹$\tau$会在某个时刻终止，其内部的每一个$s_t$和$a_t$的组合均能够产生对应的奖励$r_t$。所以，所有的组合能够得到一个关于这个轨迹的总奖励$R(\tau)$。&lt;/p&gt;
&lt;p&gt;我们的目的就是要调整策略网络的参数$\theta$使得总奖励$R(\tau)$越大越好。因此，$R(\tau)$是一个随机的变量，我们可以计算$R(\tau)$：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
R(\tau) = \sum_{t=1}^{T}r_tp_t(r_t|s_t,a_t)    \tag{1.2}&lt;/script&gt;&lt;p&gt;当策略参数$\theta$给定，那么在这组参数上一定有一个关于轨迹的分布$p_{\theta}(\tau)$，智能体的多次尝试都是一个轨迹。对于所有的轨迹$\tau_i$，存在总奖励$\overline{R}_{\theta}$的期望值为：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\overline{R}_{\theta} = \sum_{\tau}R(\tau)p_{\theta}(\tau) = \mathbb{E}_{\tau \sim p_{\theta}(\tau)}[R(\tau)]    \tag{1.3}&lt;/script&gt;&lt;p&gt;为了让 ++期望奖励++ 越大越好，要进行 ++梯度上升++ 。所以要计算期望奖励关于策略参数$\theta$的梯度：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla \overline{R}_{\theta} = \sum_{\tau}R(\tau)\nabla p_{\theta}(\tau)    \\
\because \nabla f(x) = f(x) \nabla logf(x) (不难证得)    \\
\therefore \frac{\nabla p_{\theta(\tau)}}{p_{\theta(\tau)}} = \nabla logp_{\theta}(\tau)&lt;/script&gt;&lt;p&gt;因此有：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla \overline{R}_{\theta} = \sum_{\tau}R(\tau)p_{\theta}(\tau)\frac{\nabla p_{\theta}(\tau)}{p_{\theta}(\tau)}    \\
= \sum_{\tau}R(\tau)p_{\theta}(\tau)\nabla logp_{\theta}(\tau)     \\
= \mathbb{E}_{\tau \sim p_{\theta}(\tau)}[R(\tau)\nabla logp_{\theta}(\tau)]&lt;/script&gt;&lt;p&gt;但是在实际上，我们是无法直接和准确地求期望值$\mathbb{E}_{\tau \sim p_{\theta}(\tau)}[R(\tau)\nabla logp_{\theta}(\tau)]$的。但是我们可以通过采样&lt;code&gt;N&lt;/code&gt;个$\tau$，然后计算$R(\tau)\nabla logp_{\theta}(\tau)$的&lt;code&gt;N&lt;/code&gt;个和，来近似地得到这个期望：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla \overline{R}_{\theta} = \mathbb{E}_{\tau \sim p_{\theta}(\tau)}[R(\tau)\nabla logp_{\theta}(\tau)] ≈ \frac{1}{N}\sum_{n=1}^{N}R(\tau^n)\nabla log p_{\theta}(\tau^n)    \\
= \frac{1}{N}\sum_{n=1}^{N}\sum_{t=1}^{T_n}R(\tau^n)\nabla log p_{\theta}(a_t^n|s_t^n)    \tag{1.4}&lt;/script&gt;&lt;p&gt;得到最后一行的原因，是因为$\nabla log p_{\theta}(\tau^n)$可以被展开：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla log p_{\theta}(\tau^n) = \nabla \left( logp(s_1)+\sum_{t=1}^{T}logp_{\theta}(a_t|s_t) + \sum_{t=1}^{T}logp(s_{t+1}|s_t,a_t)\right)    \\
= \nabla logp(s_1) + \nabla \sum_{t=1}^{T}logp_{\theta}(a_t|s_t)+\nabla \sum_{t=1}^{T}logp(s_{t+1}|s_t,a_t)    \\&lt;/script&gt;&lt;p&gt;因为，$p(s_1)$和$p(s_{t+1}|s_t,a_t)$来自环境，与智能体的策略参数$\theta$无关，因此第一项和第三项为0，原式化简：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
= \nabla \sum_{t=1}^{T}logp_{\theta}(a_t|s_t)    \\
= \sum_{t=1}^{T} \nabla logp_{\theta}(a_t|s_t)&lt;/script&gt;&lt;h2 id=&#34;训练思路&#34;&gt;&lt;a href=&#34;#训练思路&#34; class=&#34;headerlink&#34; title=&#34;++训练思路++&#34;&gt;&lt;/a&gt;++训练思路++&lt;/h2&gt;&lt;p&gt;现在整理一下思路。在给出一个初始策略参数$\theta$的情况下，经过训练，我们要得到一个不错的策略参数$\theta$，使得智能体在多个轨迹下得到的总奖励$\overline{R}_{\theta}$最大化。如何优化这个$\theta$呢？我们可以通过梯度上升法优化这个$\theta$，使得当$s_t$状态下执行$a_t$导致$R(\tau)$增大时增加在$s_t$下执行$a_t$的概率，反之减小这个概率：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\theta \leftarrow \theta + \eta \nabla \overline{R}_{\theta}    \tag{1.5}&lt;/script&gt;&lt;p&gt;根据公式1.4和公式1.5，我们知道优化$\theta$的关键在于求出$\nabla \overline{R}_{\theta}$，与$\nabla \overline{R}_{\theta}$有关的是$s_t^n$、$a_t^n$和$\tau^n$。所以我们要采集这些数据：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\tau^1:(s_1^1, a_1^1) \quad\quad R(\tau^1)    \\
\quad\quad (s_2^1, a_2^1) \quad\quad R(\tau^1)    \\
\quad\quad (s_3^1, a_3^1) \quad\quad R(\tau^1)    \\
\quad\quad\quad \vdots \quad\quad\quad\quad\quad \vdots    \\
\tau^2:(s_1^2, a_1^2) \quad\quad R(\tau^2)    \\
\quad\quad (s_2^2, a_2^2) \quad\quad R(\tau^2)    \\
\quad\quad (s_3^2, a_3^2) \quad\quad R(\tau^2)    \\
\quad\quad\quad \vdots \quad\quad\quad\quad\quad \vdots    \\&lt;/script&gt;&lt;p&gt;$\tau$的采集量是人为设定的，采集完一次后，会获得多组$\tau$的数据，然后使用公式1.4和公式1.5一次性更新模型：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/reinforce.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;直观理解&#34;&gt;&lt;a href=&#34;#直观理解&#34; class=&#34;headerlink&#34; title=&#34;++直观理解++&#34;&gt;&lt;/a&gt;++直观理解++&lt;/h2&gt;&lt;p&gt;如何直观理解公式1.4？既然我们要通过求出$\nabla \overline{R}_{\theta}$来得到$\theta$的更新值，就不得不依赖反向传播得到梯度。你可以想象这样一个场景：智能体在玩一个游戏，控制一个飞机射击外星人，它的策略$\theta$是智能体内部的网络&lt;code&gt;NN&lt;/code&gt;（&lt;code&gt;Neural Network&lt;/code&gt;），在游戏过程中保持不变（游戏过程就是在采样若干组轨迹的&lt;code&gt;s&lt;/code&gt;，&lt;code&gt;a&lt;/code&gt;，&lt;code&gt;R&lt;/code&gt;(&lt;script type=&#34;math/tex&#34;&gt;\tau&lt;/script&gt;)对），智能体看到场景$s$，送给策略网络&lt;code&gt;NN&lt;/code&gt;计算出要做的动作$a$的概率。如，向左移动的概率，向右移动的概率，开火的概率，所以这本质上是一个分类问题。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/reinforce2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;通常在训练过程中，我们需要智能体根据当前场景做出的动作是人为指定的，也就是说对于某个轨迹$\tau$的一个特定的$s$有个&lt;code&gt;Ground-Truth&lt;/code&gt;，这个&lt;code&gt;Ground-Truth&lt;/code&gt;就是在这个特定场景应该做出的动作$a$。比如，在某个场景$s_t$下，我们想要智能体向左，于是标签就是&lt;code&gt;[1, 0, 0]&lt;/code&gt;。智能体将$s_t$作为策略网络$\theta$的输入，估计出向左的概率要尽可能接近1，即$p_{\theta}(a_t|s_t)$要尽可能接近1。&lt;/p&gt;
&lt;p&gt;所以，在采样过程中，大量的$s_t^n$计算出大量的$p_{\theta}(a_t|s_t)$，那么根据每个$s_t$的标签，就能够计算一个交叉熵损失（&lt;code&gt;cross entropy loss&lt;/code&gt;），最小化交叉熵损失就是在最大化似然：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
Loss = - \sum_{t=1}^{T} y_i \hat{y}_i    \\
Min(Loss) = Min(- \sum_{t=1}^{T} y_i \hat{y}_i) \\
= Max(\sum_{t=1}^{T} y_i p_{\theta}(a_t|s_t))    \\
\because y_i是常数1    \\
\therefore Min(Loss) = Max(\sum_{t=1}^{T} p_{\theta}(a_t|s_t)) = Max(\sum_{t=1}^{T} log p_{\theta}(a_t|s_t))&lt;/script&gt;&lt;p&gt;所以，在训练过程中，最小化交叉熵损失，实际上在最大化某个轨迹的预测值的和。观察上面的式子，有没有发现在最小化损失，实际上在最大化$\nabla \overline{R}_{\theta}$。&lt;/p&gt;
&lt;p&gt;在计算出损失后，通过反向传播，可以直接计算出$\nabla \overline{R}_{\theta}$的值，因此就能更新参数$\theta$了。&lt;/p&gt;
&lt;h2 id=&#34;实现上的一些技巧&#34;&gt;&lt;a href=&#34;#实现上的一些技巧&#34; class=&#34;headerlink&#34; title=&#34;++实现上的一些技巧++&#34;&gt;&lt;/a&gt;++实现上的一些技巧++&lt;/h2&gt;&lt;h3 id=&#34;添加基线-dot&#34;&gt;&lt;a href=&#34;#添加基线-dot&#34; class=&#34;headerlink&#34; title=&#34;++添加基线++{.dot}&#34;&gt;&lt;/a&gt;++添加基线++{.dot}&lt;/h3&gt;&lt;p&gt;我们总是希望，对于某一给定的状态$s$采取动作$a$后，整场游戏$\tau$获得的奖励是正的，我们就增加$(s,a)$的概率。如果这个给定的状态$s$采取的动作$a$使得最后整场游戏$\tau$的奖励是负的，我们就减小$(s,a)$的概率。&lt;/p&gt;
&lt;p&gt;理想情况是这样，现实是虽然这些动作对整场游戏$\tau$的奖励贡献有大有小，但整场游戏下来的奖励总是非负的，有的动作采取后得到了20分，有的动作采取后得到0分。这种情况下，一场游戏的奖励$R(\tau)$总是正的，最低也只是0，而且要求提升贡献度大的动作的概率，降低贡献度低的动作的概率。&lt;/p&gt;
&lt;p&gt;另外一个现实是，由于本质上一个轨迹$\tau$只是在轨迹空间$p_\theta(\tau)$的一个采样，所以采样的数量较少时，一些动作可能未被采样到。那么相较于其他被采样到的动作而言，这个未被采样到的动作的概率就会被下降。这并不意味着这个未被采样到的动作贡献更小，仅仅只是未被采样到而已。相反，贡献度低的动作因为奖励总是正的、经常被采样到，所以概率提升地比未被采样、但贡献度高的动作幅度大。这就导致了不公平的出现。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/reinforce3.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;奖励总是正的，就会导致丈量动作的贡献度相较于奖励有正有负而更加困难。除此之外，还引出了概率提升膨胀的问题，未被采样到的动作的概率不升反降，而其他采样到的动作因为奖励总是正的而概率得到很大幅度的提升。&lt;/p&gt;
&lt;p&gt;为了解决这个问题，可以把奖励减去一个基线&lt;code&gt;b&lt;/code&gt;：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla \overline{R}_\theta ≈ \frac{1}{N}\sum_{n=1}^{N}\sum_{t=1}^{T_n}(R(\tau^n) - b)\nabla log p_{\theta}(a_t^n|s_t^n)    \tag{1.5}&lt;/script&gt;&lt;p&gt;此时总奖励就是$R(\tau^n) - b$。我们可以令$b≈E[R(\tau)]$，也就是说，我们在训练中不断地将$R(\tau)$的值记录下来，然后不断地记录$R(\tau)$的平均值，将这个平均值当作$b$来使用。这样一来，总奖励$R(\tau^n) - b$就会有正有负。&lt;/p&gt;
&lt;h3 id=&#34;分配合适的分数-dot&#34;&gt;&lt;a href=&#34;#分配合适的分数-dot&#34; class=&#34;headerlink&#34; title=&#34;++分配合适的分数++{.dot}&#34;&gt;&lt;/a&gt;++分配合适的分数++{.dot}&lt;/h3&gt;&lt;p&gt;观察公式1.5，只要在同一场游戏里（同一轨迹），所有的动作-状态对都要使用同样的奖励权重进行加权。也就是说，对于$(a_1^1,s_1^1),(a_2^1,s_2^1),(a_3^1,s_3^1),…,(a_T^1,s_T^1)$都使用$R(\tau^1)-b$进行加权，当$n=2$时同理。&lt;/p&gt;
&lt;p&gt;这是不公平的，在蘑菇书中结合例子解释的非常深入浅出。简单来说就是，一场游戏的结果是好的，并不意味着每一个采取的动作都是好的。相反，若是整场游戏的结果不好，并不代表每一个动作都是不好的。&lt;/p&gt;
&lt;p&gt;一种解决办法是，计算某个动作状态对的奖励权重时，不把整场游戏的奖励加起来，而是只计算从这个动作执行以后到整场游戏结束时得到的奖励。这样做是因为这个动作执行之前发生的事情是与这个动作没有关系的，所以执行当前这个动作之前所获得的所有奖励都不能算作是当前这个动作的贡献。将执行这个动作后获得所有奖励加起来，才算做这个动作真正的贡献。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/reinforce4.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;比如，这张图$(s_a,a_1)$的权重是$(+5+0-2)=+3$，$(s_b,a_2)$的权重是$(+0-2)=-2$。即使是第二场游戏也是如此规律。&lt;/p&gt;
&lt;p&gt;于是，重写公式1.5：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla \overline{R}_\theta ≈ \frac{1}{N}\sum_{n=1}^{N}\sum_{t=1}^{T_n}(\sum_{t&#39;=t}^{T_n}{r_{t&#39;}^{n}} - b)\nabla log p_{\theta}(a_t^n|s_t^n)    \tag{1.6}&lt;/script&gt;&lt;p&gt;原来的权重是整场游戏的奖励的总和，现在改成从某个时刻$t$开始，假设这个动作是在开$t$始执行的，从$t$一直到游戏结束所有奖励的总和才能代表这个动作的好坏。&lt;/p&gt;
&lt;p&gt;进一步，我们可以为未来的奖励做折扣，继续改写公式1.6：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla \overline{R}_\theta ≈ \frac{1}{N}\sum_{n=1}^{N}\sum_{t=1}^{T_n}(\sum_{t&#39;=t}^{T_n}{\gamma^{t&#39;-t}r_{t&#39;}^{n}} - b)\nabla log p_{\theta}(a_t^n|s_t^n)    \tag{1.7}&lt;/script&gt;&lt;p&gt;为什么为未来时刻的奖励乘一个系数做折扣？因为当前时刻动作对下一时刻影响较大，但是随着时间推移，到某一时刻$t$时所受那个动作影响就越来越小。可以取系数$\gamma=0.9或0.99 \in [0,1]$。例如，假设游戏有两个回合，我们在游戏的第二回合的某一个 $s_t$执行$a_t$得到+1分，在$s_{t+1}$执行$a_{t+1}$得到+3分，在$s_{t+2}$执行$a_{t+2}$得到−5分，第二回合结束。$a_t$的分数应该是：$1 + \gamma \times 3 + \gamma^2 \times (-5)$。&lt;/p&gt;
&lt;h3 id=&#34;优势函数与评论员-dot&#34;&gt;&lt;a href=&#34;#优势函数与评论员-dot&#34; class=&#34;headerlink&#34; title=&#34;++优势函数与评论员++{.dot}&#34;&gt;&lt;/a&gt;++优势函数与评论员++{.dot}&lt;/h3&gt;&lt;p&gt;观察公式1.7。事实上，$b$通常是一个网络估计出来的，是一个网络的输出。而$\sum_{t’=t}^{T_n}{\gamma^{t’-t}r_{t’}^{n}} - b$这一项通常简写为$A^\theta(s_t,a_t)$，被称为优势函数。此时，公式1.7又可以写成：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\nabla \overline{R}_\theta = \mathbb{E}_{\tau \sim p_\theta(\tau)}[R(\tau)\nabla logp_\theta(\tau)] ≈ \frac{1}{N}\sum_{n=1}^{N}\sum_{t=1}^{T_n}A^\theta(s_t,a_t)\nabla log p_{\theta}(a_t^n|s_t^n)    \tag{1.8}&lt;/script&gt;&lt;p&gt;这个优势函数也通常可以被一个网络估计出来，这个网络被称为评论员。优势函数的意义是，在某个特定状态$s_t$下采取动作$a_t$，相较于其他可能执行的动作，$a_t$有多好。这个优势函数作为权重反映了动作相对的好，而不是绝对的好。&lt;/p&gt;
&lt;h1 id=&#34;近端策略优化算法（PPO）-rainbow&#34;&gt;&lt;a href=&#34;#近端策略优化算法（PPO）-rainbow&#34; class=&#34;headerlink&#34; title=&#34;[近端策略优化算法（PPO）]{.rainbow}&#34;&gt;&lt;/a&gt;[近端策略优化算法（PPO）]{.rainbow}&lt;/h1&gt;&lt;h2 id=&#34;On-Policy-to-Off-Policy&#34;&gt;&lt;a href=&#34;#On-Policy-to-Off-Policy&#34; class=&#34;headerlink&#34; title=&#34;++On Policy to Off Policy++&#34;&gt;&lt;/a&gt;++On Policy to Off Policy++&lt;/h2&gt;&lt;h1 id=&#34;深度Q网络&#34;&gt;&lt;a href=&#34;#深度Q网络&#34; class=&#34;headerlink&#34; title=&#34;深度Q网络&#34;&gt;&lt;/a&gt;深度Q网络&lt;/h1&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Pip%E3%80%81Conda%E3%80%81github%E9%95%9C%E5%83%8F/</guid>
            <title>Pip、Conda、Github镜像</title>
            <link>https://yunhdan.github.io/cs/Pip%E3%80%81Conda%E3%80%81github%E9%95%9C%E5%83%8F/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Mon, 24 Feb 2025 20:36:05 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;Pip&#34;&gt;&lt;a href=&#34;#Pip&#34; class=&#34;headerlink&#34; title=&#34;Pip&#34;&gt;&lt;/a&gt;&lt;code&gt;Pip&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;:::info &lt;/p&gt;
&lt;p&gt;用&lt;code&gt;Pip&lt;/code&gt;安装需要的&lt;code&gt;Python&lt;/code&gt;包已经是开发过程的刚需，其中，遇到超时和缓慢的问题也是家常便饭。这里总结一下解决这类问题的方法。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;以&lt;code&gt;Tensorflow&lt;/code&gt;的安装为例，只需要增加镜像的使用即可实现。&lt;/p&gt;
&lt;p&gt;有以下命令供选择，具体到其他包可以替换&lt;code&gt;Tensorflow&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-shell&#34;&gt;pip install tensorflow -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;lang-shell&#34;&gt;pip install tensorflow -i https://pypi.tuna.tsinghua.edu.cn/simple/
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;lang-shell&#34;&gt;pip install tensorflow -i http://pypi.douban.com/simple/ --trusted-host douban.com
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;lang-shell&#34;&gt;pip install tensorflow -i https://pypi.mirrors.ustc.edu.cn/simple/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加入&lt;code&gt;trusted-host&lt;/code&gt;是因为有些网站不被&lt;code&gt;pip&lt;/code&gt;所信任，所以可能会出现安装包失败的问题，需要手动加入。&lt;/p&gt;
&lt;h1 id=&#34;Conda&#34;&gt;&lt;a href=&#34;#Conda&#34; class=&#34;headerlink&#34; title=&#34;Conda&#34;&gt;&lt;/a&gt;&lt;code&gt;Conda&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;有时候创建&lt;code&gt;conda&lt;/code&gt;环境时没有镜像源的话很容易报&lt;code&gt;HTTPERROR&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;可以找到&lt;code&gt;anaconda/bin&lt;/code&gt;，然后用&lt;code&gt;vim&lt;/code&gt;修改这个文件：&lt;code&gt;vim ~/.condarc&lt;/code&gt;，具体是在&lt;code&gt;channels&lt;/code&gt;处增加：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;并删除：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;  - default
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果没有&lt;code&gt;channels&lt;/code&gt;就自己添加，保证这个文件有这样的内容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-raw&#34;&gt;channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后&lt;code&gt;ESC&lt;/code&gt;输入&lt;code&gt;:wq!&lt;/code&gt;退出即可。&lt;/p&gt;
&lt;h1 id=&#34;Github&#34;&gt;&lt;a href=&#34;#Github&#34; class=&#34;headerlink&#34; title=&#34;Github&#34;&gt;&lt;/a&gt;&lt;code&gt;Github&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;想下载&lt;code&gt;Github&lt;/code&gt;上面的资源的一种常见方法是挂代理。在终端还可以考虑另一种方法：以镜像站代替。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;例如，需要使用&lt;code&gt;wget&lt;/code&gt;获取&lt;code&gt;github&lt;/code&gt;的某个资源时：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-bash&#34;&gt;wget https://github.com/Dao-AILab/causal-conv1d/releases/download/v1.0.0/causal_conv1d-1.0.0+cu118torch1.13cxx11abiFALSE-cp39-cp39-linux_x86_64.whl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;会提示超时或无法连接、无法下载。&lt;/p&gt;
&lt;p&gt;方法十分简单，用镜像站的网址替代&lt;code&gt;github.com&lt;/code&gt;，目前可用、好用的镜像站如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bgithub.xyz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用就是如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-bash&#34;&gt;wget https://bgithub.xyz/Dao-AILab/causal-conv1d/releases/download/v1.0.0/causal_conv1d-1.0.0+cu118torch1.13cxx11abiFALSE-cp39-cp39-linux_x86_64.whl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可见仅仅替换&lt;code&gt;github.com&lt;/code&gt;即可。当然，有些镜像站的食用方式并不是这样简单的替代对应域名，也有在&lt;code&gt;github.com&lt;/code&gt;前加域名的。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/ACM%E7%AE%97%E6%B3%95%E9%A2%98%E5%8D%95/</guid>
            <title>ACM算法题单</title>
            <link>https://yunhdan.github.io/cs/ACM%E7%AE%97%E6%B3%95%E9%A2%98%E5%8D%95/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Thu, 20 Feb 2025 22:22:05 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;:::info&lt;/p&gt;
&lt;p&gt;目的：为了备战蓝桥杯（4月12日）和夏令营预推免的机试。&lt;/p&gt;
&lt;p&gt;每一题目标：彻底弄懂该题思路。&lt;/p&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;h1 id=&#34;哈希表-blue&#34;&gt;&lt;a href=&#34;#哈希表-blue&#34; class=&#34;headerlink&#34; title=&#34;[哈希表]{.blue}&#34;&gt;&lt;/a&gt;[哈希表]{.blue}&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;简单&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;罗马数字转整数：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yb21hbi10by1pbnRlZ2VyLz9lbnZUeXBlPXByb2JsZW0tbGlzdC12MiZhbXA7ZW52SWQ9aGFzaC10YWJsZQ==&#34;&gt;https://leetcode.cn/problems/roman-to-integer/?envType=problem-list-v2&amp;amp;envId=hash-table&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;多数元素：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYWpvcml0eS1lbGVtZW50Lz9lbnZUeXBlPXByb2JsZW0tbGlzdC12MiZhbXA7ZW52SWQ9aGFzaC10YWJsZQ==&#34;&gt;https://leetcode.cn/problems/majority-element/?envType=problem-list-v2&amp;amp;envId=hash-table&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;两数之和：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90d28tc3VtL2Rlc2NyaXB0aW9uLz9lbnZUeXBlPXByb2JsZW0tbGlzdC12MiZhbXA7ZW52SWQ9aGFzaC10YWJsZQ==&#34;&gt;1. 两数之和 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;环形链表：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPWhhc2gtdGFibGU=&#34;&gt;141. 环形链表 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;相交链表：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmtlZC1saXN0cy9kZXNjcmlwdGlvbi8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPWhhc2gtdGFibGU=&#34;&gt;160. 相交链表 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;快乐数：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9oYXBweS1udW1iZXIvZGVzY3JpcHRpb24v&#34;&gt;202. 快乐数 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;同构字符串：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pc29tb3JwaGljLXN0cmluZ3MvZGVzY3JpcHRpb24v&#34;&gt;205. 同构字符串 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;存在重复元素：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250YWlucy1kdXBsaWNhdGUvZGVzY3JpcHRpb24v&#34;&gt;217. 存在重复元素 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中等&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;字母异位词分组：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ncm91cC1hbmFncmFtcy9kZXNjcmlwdGlvbi8/ZW52VHlwZT1zdHVkeS1wbGFuLXYyJmFtcDtlbnZJZD10b3AtMTAwLWxpa2Vk&#34;&gt;49. 字母异位词分组 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;最长连续序列：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWNvbnNlY3V0aXZlLXNlcXVlbmNlLz9lbnZUeXBlPXN0dWR5LXBsYW4tdjImYW1wO2VudklkPXRvcC0xMDAtbGlrZWQ=&#34;&gt;128. 最长连续序列 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;h1 id=&#34;双指针-blue&#34;&gt;&lt;a href=&#34;#双指针-blue&#34; class=&#34;headerlink&#34; title=&#34;[双指针]{.blue}&#34;&gt;&lt;/a&gt;[双指针]{.blue}&lt;/h1&gt;&lt;p&gt;[相向双指针]{.rainbow}：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;反转字符串（优化相向指针）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLXN0cmluZy9kZXNjcmlwdGlvbi8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPXR3by1wb2ludGVycw==&#34;&gt;https://leetcode.cn/problems/reverse-string/description/?envType=problem-list-v2&amp;amp;envId=two-pointers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;验证回文串（相向指针）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYWxpbmRyb21lLz9lbnZUeXBlPXByb2JsZW0tbGlzdC12MiZhbXA7ZW52SWQ9dHdvLXBvaW50ZXJz&#34;&gt;125. 验证回文串 - 力扣（LeetCode）&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;回文链表（相向指针）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLz9lbnZUeXBlPXByb2JsZW0tbGlzdC12MiZhbXA7ZW52SWQ9dHdvLXBvaW50ZXJz&#34;&gt;234. 回文链表 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;盛最多水的容器（暴力必超时，相向指针）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250YWluZXItd2l0aC1tb3N0LXdhdGVyLz9lbnZUeXBlPXN0dWR5LXBsYW4tdjImYW1wO2VudklkPXRvcC0xMDAtbGlrZWQ=&#34;&gt;11. 盛最多水的容器 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;三数之和（枚举与相向指针的结合）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy8zc3VtLz9lbnZUeXBlPXN0dWR5LXBsYW4tdjImYW1wO2VudklkPXRvcC0xMDAtbGlrZWQ=&#34;&gt;15. 三数之和 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;p&gt;[原地修改]{.rainbow}：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;移动零（快慢指针）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tb3ZlLXplcm9lcy9kZXNjcmlwdGlvbi8/ZW52VHlwZT1zdHVkeS1wbGFuLXYyJmFtcDtlbnZJZD10b3AtMTAwLWxpa2Vk&#34;&gt;283. 移动零 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;删除有序数组中的重复项：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtZHVwbGljYXRlcy1mcm9tLXNvcnRlZC1hcnJheS9kZXNjcmlwdGlvbi8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPXR3by1wb2ludGVycw==&#34;&gt;26. 删除有序数组中的重复项 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;移除元素：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtZWxlbWVudC9kZXNjcmlwdGlvbi8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPXR3by1wb2ludGVycw==&#34;&gt;27. 移除元素 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;[其他]{.rainbow}：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;找出字符串中第一个匹配项的下标：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1pbmRleC1vZi10aGUtZmlyc3Qtb2NjdXJyZW5jZS1pbi1hLXN0cmluZy9kZXNjcmlwdGlvbi8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPXR3by1wb2ludGVycw==&#34;&gt;28. 找出字符串中第一个匹配项的下标 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;合并两个有序数组（三指针）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1zb3J0ZWQtYXJyYXkvP2VudlR5cGU9cHJvYmxlbS1saXN0LXYyJmFtcDtlbnZJZD10d28tcG9pbnRlcnM=&#34;&gt;https://leetcode.cn/problems/merge-sorted-array/?envType=problem-list-v2&amp;amp;envId=two-pointers&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;反转字符串中的元音字母（双向指针）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLXZvd2Vscy1vZi1hLXN0cmluZy9kZXNjcmlwdGlvbi8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPXR3by1wb2ludGVycw==&#34;&gt;345. 反转字符串中的元音字母 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;滑动窗口-blue&#34;&gt;&lt;a href=&#34;#滑动窗口-blue&#34; class=&#34;headerlink&#34; title=&#34;[滑动窗口]{.blue}&#34;&gt;&lt;/a&gt;[滑动窗口]{.blue}&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;简单&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;存在重复元素&lt;code&gt;II&lt;/code&gt;（暴力必超时，定长滑窗）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250YWlucy1kdXBsaWNhdGUtaWkvZGVzY3JpcHRpb24vP2VudlR5cGU9cHJvYmxlbS1saXN0LXYyJmFtcDtlbnZJZD1zbGlkaW5nLXdpbmRvdw==&#34;&gt;219. 存在重复元素 II - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;最长和谐子序列（变长滑窗）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWhhcm1vbmlvdXMtc3Vic2VxdWVuY2UvZGVzY3JpcHRpb24vP2VudlR5cGU9cHJvYmxlbS1saXN0LXYyJmFtcDtlbnZJZD1zbGlkaW5nLXdpbmRvdw==&#34;&gt;594. 最长和谐子序列 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;子数组最大平均数&lt;code&gt;I&lt;/code&gt;（定长滑窗）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWF2ZXJhZ2Utc3ViYXJyYXktaS9kZXNjcmlwdGlvbi8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPXNsaWRpbmctd2luZG93&#34;&gt;643. 子数组最大平均数 I - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;拆炸弹（定长滑窗）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWZ1c2UtdGhlLWJvbWIvZGVzY3JpcHRpb24vP2VudlR5cGU9cHJvYmxlbS1saXN0LXYyJmFtcDtlbnZJZD1zbGlkaW5nLXdpbmRvdw==&#34;&gt;1652. 拆炸弹 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;找到一个数字的&lt;code&gt;K&lt;/code&gt;美丽值（定长滑窗）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1rLWJlYXV0eS1vZi1hLW51bWJlci8/ZW52VHlwZT1wcm9ibGVtLWxpc3QtdjImYW1wO2VudklkPXNsaWRpbmctd2luZG93&#34;&gt;2269. 找到一个数字的 K 美丽值 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;每个字符最多出现两次的最长子字符串（变长滑窗）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWxlbmd0aC1zdWJzdHJpbmctd2l0aC10d28tb2NjdXJyZW5jZXMvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/maximum-length-substring-with-two-occurrences/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中等&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;定长子串中元音的最大数目（最佳定长滑窗入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLW51bWJlci1vZi12b3dlbHMtaW4tYS1zdWJzdHJpbmctb2YtZ2l2ZW4tbGVuZ3RoL2Rlc2NyaXB0aW9uLw==&#34;&gt;1456. 定长子串中元音的最大数目 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;定长滑窗模板：&lt;br&gt;入——更新——出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[入]{.blue}：下标为 i 的元素进入窗口，更新相关统计量。如果 i&amp;lt;k−1 则重复第一步，目的是为了让窗口全部进入。窗口全部进入后，循环下标值i==k-1，开始做更新的内容。&lt;/li&gt;
&lt;li&gt;[更新]{.blue}：更新答案。一般是更新最大值/最小值。&lt;/li&gt;
&lt;li&gt;[出]{.blue}：下标为 i−k+1 的尾部元素离开窗口，更新相关统计量。&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;class Solution:
  def maxVowels(self, s: str, k: int) -&amp;gt; int:
      ans = vowel = 0
      for i, c in enumerate(s):
          # 1. 进入窗口
          if c in &amp;quot;aeiou&amp;quot;:
              vowel += 1
          if i &amp;lt; k - 1:  # 窗口大小不足 k
              continue
          # 2. 更新答案
          ans = max(ans, vowel)
          # 3. 离开窗口
          if s[i - k + 1] in &amp;quot;aeiou&amp;quot;:
              vowel -= 1
      return ans
&lt;/code&gt;&lt;/pre&gt;
+++&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;无重复字符的最长子串（变长滑窗入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXN1YnN0cmluZy13aXRob3V0LXJlcGVhdGluZy1jaGFyYWN0ZXJzL2Rlc2NyaXB0aW9uLz9lbnZUeXBlPXN0dWR5LXBsYW4tdjImYW1wO2VudklkPXRvcC0xMDAtbGlrZWQ=&#34;&gt;3. 无重复字符的最长子串 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;变长滑窗的核心思想是：维护一个有条件的滑动窗口。滑窗右端点右移的目的是为了扩大窗口，破坏条件。滑窗左侧端点左移的目的是为了维护这个条件，直至条件成立。下面是与哈希集合结合的滑窗去重模板（学习自灵茶山艾府）：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;class Solution:
    def lengthOfLongestSubstring(self, s: str) -&amp;gt; int:
        table = set()
        left = maxValue = 0
        for right, c in enumerate(s):
            while c in table:
                table.remove(s[left])
                left += 1
            table.add(c)
            maxValue = max(maxValue, right - left + 1)
        return maxValue
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;变长滑窗需要额外的一个指针或者一个别的手段记录滑窗尾部位置。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;重复的&lt;code&gt;DNA&lt;/code&gt;序列：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXBlYXRlZC1kbmEtc2VxdWVuY2VzL2Rlc2NyaXB0aW9uLz9lbnZUeXBlPXByb2JsZW0tbGlzdC12MiZhbXA7ZW52SWQ9c2xpZGluZy13aW5kb3c=&#34;&gt;187. 重复的DNA序列 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;长度最小的数组（变长滑窗）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXNpemUtc3ViYXJyYXktc3VtLz9lbnZUeXBlPXByb2JsZW0tbGlzdC12MiZhbXA7ZW52SWQ9c2xpZGluZy13aW5kb3c=&#34;&gt;209. 长度最小的子数组 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;大小为&lt;code&gt;K&lt;/code&gt;且平均值大于等于阈值的子数组数目（定长滑窗练手题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2Ytc3ViLWFycmF5cy1vZi1zaXplLWstYW5kLWF2ZXJhZ2UtZ3JlYXRlci10aGFuLW9yLWVxdWFsLXRvLXRocmVzaG9sZC9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;半径为&lt;code&gt;K&lt;/code&gt;的子数组平均值（定长滑窗检验入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9rLXJhZGl1cy1zdWJhcnJheS1hdmVyYWdlcy9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/k-radius-subarray-averages/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;删掉一个元素以后全为1的最长子数组（考验变长滑窗维护条件的选择）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXN1YmFycmF5LW9mLTFzLWFmdGVyLWRlbGV0aW5nLW9uZS1lbGVtZW50L2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/longest-subarray-of-1s-after-deleting-one-element/description/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;h1 id=&#34;二分算法-blue&#34;&gt;&lt;a href=&#34;#二分算法-blue&#34; class=&#34;headerlink&#34; title=&#34;[二分算法]{.blue}&#34;&gt;&lt;/a&gt;[二分算法]{.blue}&lt;/h1&gt;&lt;p&gt;[二分查找]{.rainbow}：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;搜索插入位置（闭区间二分查找）&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW5zZXJ0LXBvc2l0aW9uL2Rlc2NyaXB0aW9uLw==&#34;&gt;35. 搜索插入位置 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二分查找：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktc2VhcmNoL2Rlc2NyaXB0aW9uLw==&#34;&gt;704. 二分查找 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;寻找比目标字母大的最小字母（左闭右开区间二分查找）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXNtYWxsZXN0LWxldHRlci1ncmVhdGVyLXRoYW4tdGFyZ2V0L2Rlc2NyaXB0aW9uLw==&#34;&gt;744. 寻找比目标字母大的最小字母 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;正整数和负整数的最大计数（重用二分查找）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWNvdW50LW9mLXBvc2l0aXZlLWludGVnZXItYW5kLW5lZ2F0aXZlLWludGVnZXIvZGVzY3JpcHRpb24v&#34;&gt;2529. 正整数和负整数的最大计数 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;两个数组间的距离值（二分查找）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1kaXN0YW5jZS12YWx1ZS1iZXR3ZWVuLXR3by1hcnJheXMvZGVzY3JpcHRpb24v&#34;&gt;1385. 两个数组间的距离值 - 力扣（LeetCode）&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;在排序数组中查找元素的第一个和最后一个位置（二分查找入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWZpcnN0LWFuZC1sYXN0LXBvc2l0aW9uLW9mLWVsZW1lbnQtaW4tc29ydGVkLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;34. 在排序数组中查找元素的第一个和最后一个位置 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;（学习自灵茶山艾府）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;闭区间二分查找模板：&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;class Solution:
  # lower_bound 返回最小的满足 nums[i] &amp;gt;= target 的下标 i
  # 如果数组为空，或者所有数都 &amp;lt; target，则返回 len(nums)
  # 要求 nums 是非递减的，即 nums[i] &amp;lt;= nums[i + 1]
  def lower_bound(self, nums: List[int], target: int) -&amp;gt; int:
      left, right = 0, len(nums) - 1  # 闭区间 [left, right]
      while left &amp;lt;= right:  # 区间不为空
          # 循环不变量：
          # nums[left-1] &amp;lt; target
          # nums[right+1] &amp;gt;= target
          mid = (left + right) // 2
          if nums[mid] &amp;gt;= target:
              right = mid - 1  # 范围缩小到 [left, mid-1]
          else:
              left = mid + 1  # 范围缩小到 [mid+1, right]
      # 循环结束后 left = right+1
      # 此时 nums[left-1] &amp;lt; target 而 nums[left] = nums[right+1] &amp;gt;= target
      # 所以 left 就是第一个 &amp;gt;= target 的元素下标
      return left
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;开区间二分查找模板：&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;class Solution:
  # lower_bound 返回最小的满足 nums[i] &amp;gt;= target 的下标 i
  # 如果数组为空，或者所有数都 &amp;lt; target，则返回 len(nums)
  # 要求 nums 是非递减的，即 nums[i] &amp;lt;= nums[i + 1]
  def lower_bound(self, nums: List[int], target: int) -&amp;gt; int:
      left, right = -1, len(nums)  # 开区间 (left, right)
      while left + 1 &amp;lt; right:  # 区间不为空
          mid = (left + right) // 2
          # 循环不变量：
          # nums[left] &amp;lt; target
          # nums[right] &amp;gt;= target
          if nums[mid] &amp;gt;= target:
              right = mid  # 范围缩小到 (left, mid)
          else:
              left = mid  # 范围缩小到 (mid, right)
      # 循环结束后 left+1 = right
      # 此时 nums[left] &amp;lt; target 而 nums[right] &amp;gt;= target
      # 所以 right 就是第一个 &amp;gt;= target 的元素下标
      return right
&lt;/code&gt;&lt;/pre&gt;
+++&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;咒语和药水的成功对数（二分查找）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWNjZXNzZnVsLXBhaXJzLW9mLXNwZWxscy1hbmQtcG90aW9ucy9kZXNjcmlwdGlvbi8=&#34;&gt;2300. 咒语和药水的成功对数 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;[二分答案]{.rainbow}：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;使结果不超过阈值的最小除数（二分答案求最小入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1zbWFsbGVzdC1kaXZpc29yLWdpdmVuLWEtdGhyZXNob2xkLw==&#34;&gt;https://leetcode.cn/problems/find-the-smallest-divisor-given-a-threshold/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;（学习自灵茶山艾府）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当a和b都是正整数时，向上取整可以转换为向下取整，公式如下：&lt;script type=&#34;math/tex; mode=display&#34;&gt;\lceil \frac{a}{b} \rceil = \lfloor \frac{a+b-1}{b} \rfloor  = \lfloor \frac{a-1}{b} \rfloor + 1&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;只要某个数满足的表达式是单调的，我们就能对这个数进行二分查找。&lt;/li&gt;
&lt;li&gt;因为python的ceil向上取整函数计算出的是浮点数，会有精度误差，因此尽可能转换为向下取整函数floor。&lt;br&gt;+++&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;完成旅途的最少时间（二分答案）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXRpbWUtdG8tY29tcGxldGUtdHJpcHMv&#34;&gt;https://leetcode.cn/problems/minimum-time-to-complete-trips/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;h1 id=&#34;栈-blue&#34;&gt;&lt;a href=&#34;#栈-blue&#34; class=&#34;headerlink&#34; title=&#34;[栈]{.blue}&#34;&gt;&lt;/a&gt;[栈]{.blue}&lt;/h1&gt;&lt;p&gt;[基础]{.rainbow}：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;比较含退格的字符串（模拟栈）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iYWNrc3BhY2Utc3RyaW5nLWNvbXBhcmUvZGVzY3JpcHRpb24v&#34;&gt;844. 比较含退格的字符串 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;棒球比赛（模拟栈）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iYXNlYmFsbC1nYW1lL3NvbHV0aW9ucy8=&#34;&gt;682. 棒球比赛 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;用栈操作构建数组（无脑题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9idWlsZC1hbi1hcnJheS13aXRoLXN0YWNrLW9wZXJhdGlvbnMvZGVzY3JpcHRpb24v&#34;&gt;1441. 用栈操作构建数组 - 力扣（LeetCode）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;从字符串中移除星号（秒杀题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmluZy1zdGFycy1mcm9tLWEtc3RyaW5nLw==&#34;&gt;https://leetcode.cn/problems/removing-stars-from-a-string/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;设计浏览器历史记录（用于检验入门的题）（指针与栈结合）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZXNpZ24tYnJvd3Nlci1oaXN0b3J5Lw==&#34;&gt;1472. 设计浏览器历史记录 - 力扣（LeetCode）&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;验证栈序列（双指针与栈结合）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1zdGFjay1zZXF1ZW5jZXMvZGVzY3JpcHRpb24v&#34;&gt;946. 验证栈序列 - 力扣（LeetCode）&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;有效的括号：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8/ZW52VHlwZT1zdHVkeS1wbGFuLXYyJmFtcDtlbnZJZD10b3AtMTAwLWxpa2Vk&#34;&gt;20. 有效的括号 - 力扣（LeetCode）&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;计算字符串的镜像分数：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLW1pcnJvci1zY29yZS1vZi1hLXN0cmluZy8=&#34;&gt;3412. 计算字符串的镜像分数 - 力扣（LeetCode）&lt;/span&gt;:fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;简化路径：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaW1wbGlmeS1wYXRoLw==&#34;&gt;https://leetcode.cn/problems/simplify-path/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;h1 id=&#34;枚举-blue&#34;&gt;&lt;a href=&#34;#枚举-blue&#34; class=&#34;headerlink&#34; title=&#34;[枚举]{.blue}&#34;&gt;&lt;/a&gt;[枚举]{.blue}&lt;/h1&gt;&lt;p&gt;:::warning&lt;br&gt;同一道题目也会反复出现，比如下面的两数之和出现于前面的哈希表。&lt;br&gt;:::&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;两数之和（枚举右，维护左+哈希表）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90d28tc3VtL2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/two-sum/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;（学习自灵茶山艾府）&lt;br&gt;枚举右，维护左&lt;br&gt;双变量问题如：$x+y==target$或者$x-y==target$。可以枚举右边的y，找是否有$x==target-y$满足。通常与哈希表结合。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;好数对的数目（枚举右，维护左+哈希表）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtZ29vZC1wYWlycy9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/number-of-good-pairs/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;可互换矩形的组数（枚举右，维护左+哈希表）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtcGFpcnMtb2YtaW50ZXJjaGFuZ2VhYmxlLXJlY3RhbmdsZXMvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/number-of-pairs-of-interchangeable-rectangles/description/&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;前缀和-blue&#34;&gt;&lt;a href=&#34;#前缀和-blue&#34; class=&#34;headerlink&#34; title=&#34;[前缀和]{.blue}&#34;&gt;&lt;/a&gt;[前缀和]{.blue}&lt;/h1&gt;&lt;p&gt;[基础]{.rainbow}：&lt;br&gt;&lt;code&gt;LeetCode——&lt;/code&gt;区域和检索——数组不可变（前缀和入门模板题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yYW5nZS1zdW0tcXVlcnktaW1tdXRhYmxlLw==&#34;&gt;https://leetcode.cn/problems/range-sum-query-immutable/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;前缀和我在一篇博文有详细介绍原理，于是不再总结。&lt;br&gt;这里注意到Python有一个accumulate函数，这个函数可以计算一个数组对应的前缀和数组。有一个initial参数，将其设为0，相当于在前缀和数组前增加一个0项：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;from itertools import accumulate

# 创建一个列表
data = [1, 2, 3, 4, 5]

# 使用accumulate计算前缀和
result1 = list(accumulate(data))
result2 = list(accumulate(data, initial=0))

# 输出结果
print(result1) # 输出：[1, 3, 6, 10, 15]
print(result2) # 输出：[0, 1, 3, 6, 10, 15]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;变长子数组求和：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdW0tb2YtdmFyaWFibGUtbGVuZ3RoLXN1YmFycmF5cy8=&#34;&gt;https://leetcode.cn/problems/sum-of-variable-length-subarrays/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;统计范围内的元音字符串数：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudC12b3dlbC1zdHJpbmdzLWluLXJhbmdlcy8=&#34;&gt;https://leetcode.cn/problems/count-vowel-strings-in-ranges/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;特殊数组II（数组奇偶性与前缀和）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zcGVjaWFsLWFycmF5LWlpLw==&#34;&gt;https://leetcode.cn/problems/special-array-ii/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;[前缀和与哈希表]{.rainbow}：&lt;br&gt;+++info Summary&lt;br&gt;前缀和两次遍历示例写法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;class Solution:
    def subarraySum(self, nums: List[int], k: int) -&amp;gt; int:
        s = [0] * (len(nums) + 1)
        for i, x in enumerate(nums):
            s[i + 1] = s[i] + x

        ans = 0
        cnt = defaultdict(int)
        for sj in s:
            ans += cnt[sj - k]
            cnt[sj] += 1
        return ans
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一遍遍历示例写法（由于遍历nums会从s[1]开始计算，所以要单独处理 s[0]=0）：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;class Solution:
    def subarraySum(self, nums: List[int], k: int) -&amp;gt; int:
        ans = s = 0
        cnt = defaultdict(int)
        cnt[0] = 1  # s[0]=0 单独统计
        for x in nums:
            s += x
            ans += cnt[s - k]
            cnt[s] += 1
        return ans
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;和为K的子数组（启蒙题，值得反复品味）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJhcnJheS1zdW0tZXF1YWxzLWsvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/subarray-sum-equals-k/description/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;和相同的二元子数组：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktc3ViYXJyYXlzLXdpdGgtc3VtL2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/binary-subarrays-with-sum/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;和为奇数的子数组数目（区间奇偶与前缀和）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2Ytc3ViLWFycmF5cy13aXRoLW9kZC1zdW0v&#34;&gt;https://leetcode.cn/problems/number-of-sub-arrays-with-odd-sum/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;前缀和奇偶性与数组区间和的关系：&lt;br&gt;如果两个前缀和的奇偶性不同（一个是偶数，一个是奇数），它们之间的子数组和一定是奇数。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;和可被K整除的子数组（余数哈希+前缀和）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJhcnJheS1zdW1zLWRpdmlzaWJsZS1ieS1rLw==&#34;&gt;https://leetcode.cn/problems/subarray-sums-divisible-by-k/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;连续的子数组和（在前一道题基础上加入区间要求）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250aW51b3VzLXN1YmFycmF5LXN1bS9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/continuous-subarray-sum/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;连续数组（将不定和转为定和）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250aWd1b3VzLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/contiguous-array/description/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;本题可以用纯数学的方式避免用if-else判断数组值：&lt;br&gt;令前缀和为prev，nums[i]是数组值，如果要实现遇到nums[i]为1则prev+=1，而遇到nums[i]为-1则prev-=1，用：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;prev += nums[i] * 2 - 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;替代：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;if nums[i] == 1:
    prev += 1
else:
    prev -= 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为什么会得到这个公式？我们重新思考一下，其实无外乎可以抽象为：prev += f(nums[i])，这样就能避免用if-else。那么这个函数f如何得到呢？这时候就要考虑nums[i]的值和目标f(nums[i])的值。发现nums[i]和f(nums[i])都可以分别抽象为一个向量，然后就变成了：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
f(
\left[
\begin{matrix}
0    \\
1    \\
\end{matrix}
\right]) = 
\left[
\begin{matrix}
-1    \\
1    \\
\end{matrix}
\right]&lt;/script&gt;&lt;p&gt;一般f是一个线性变换，可以认为&lt;script type=&#34;math/tex&#34;&gt;f=wx+b&lt;/script&gt;，根据线性代数的知识，f也是一个向量，那么就有：&lt;/p&gt;
&lt;script type=&#34;math/tex; mode=display&#34;&gt;
\left[
\begin{matrix}
0    \\
1    \\
\end{matrix}
\right] \left[
\begin{matrix}
a    \\
b    \\
\end{matrix}
\right] = 
\left[
\begin{matrix}
-1    \\
1    \\
\end{matrix}
\right]&lt;/script&gt;&lt;p&gt;利用矩阵乘法，能够知道a=2，b=-1，即f=2x-1。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;统计美丽子数组数目：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudC10aGUtbnVtYmVyLW9mLWJlYXV0aWZ1bC1zdWJhcnJheXMvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/count-the-number-of-beautiful-subarrays/description/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;[距离和]{.rainbow}&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;有序数组中差绝对值之和：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdW0tb2YtYWJzb2x1dGUtZGlmZmVyZW5jZXMtaW4tYS1zb3J0ZWQtYXJyYXkv&#34;&gt;https://leetcode.cn/problems/sum-of-absolute-differences-in-a-sorted-array/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;[前缀异或和]{.rainbow}&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;构建回文串检测：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jYW4tbWFrZS1wYWxpbmRyb21lLWZyb20tc3Vic3RyaW5nLw==&#34;&gt;https://leetcode.cn/problems/can-make-palindrome-from-substring/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;h1 id=&#34;网格图-blue&#34;&gt;&lt;a href=&#34;#网格图-blue&#34; class=&#34;headerlink&#34; title=&#34;[网格图]{.blue}&#34;&gt;&lt;/a&gt;[网格图]{.blue}&lt;/h1&gt;&lt;p&gt;[深度优先搜索DFS]{.rainbow}：&lt;br&gt;&lt;code&gt;LeetCode——&lt;/code&gt;岛屿数量（入门题，水平垂直方向）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtaXNsYW5kcy9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/number-of-islands/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;岛屿的最大面积：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXgtYXJlYS1vZi1pc2xhbmQvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/max-area-of-island/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;水域大小（加入对角线方向）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wb25kLXNpemVzLWxjY2kvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/pond-sizes-lcci/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;主题空间（边界不合法情况）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ZZXNkUHcvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/YesdPw/description/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;岛屿的周长：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pc2xhbmQtcGVyaW1ldGVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/island-perimeter/description/&lt;/span&gt; &lt;/p&gt;
&lt;h1 id=&#34;二叉树-blue&#34;&gt;&lt;a href=&#34;#二叉树-blue&#34; class=&#34;headerlink&#34; title=&#34;[二叉树]{.blue}&#34;&gt;&lt;/a&gt;[二叉树]{.blue}&lt;/h1&gt;&lt;p&gt;[遍历二叉树]{.rainbow}：&lt;br&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的前序遍历：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wcmVvcmRlci10cmF2ZXJzYWwv&#34;&gt;https://leetcode.cn/problems/binary-tree-preorder-traversal/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;二叉树遍历的递归方式：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;# 假设二叉树类定义如：
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

# 前序遍历
def preorderTraversal(self, root: Optional[TreeNode]) -&amp;gt; List[int]:
    ans = []
    def dfs(root):
        nonlocal ans
        if not root:
            return
        ans.append(root.val)
        dfs(root.left)
        dfs(root.right)
    dfs(root)
    return ans

# 中序遍历
def preorderTraversal(self, root: Optional[TreeNode]) -&amp;gt; List[int]:
    ans = []
    def dfs(root):
        nonlocal ans
        if not root:
            return
        dfs(root.left)
        ans.append(root.val)    # 只变化了这行代码的位置
        dfs(root.right)
    dfs(root)
    return ans

# 后序遍历
def preorderTraversal(self, root: Optional[TreeNode]) -&amp;gt; List[int]:
    ans = []
    def dfs(root):
        nonlocal ans
        if not root:
            return
        dfs(root.left)
        dfs(root.right)
        ans.append(root.val)    # 只变化了这行代码的位置
    dfs(root)
    return ans
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面看借用栈实现迭代方式的二叉树前序遍历，学习自腐烂的橘子：&lt;br&gt;&lt;img data-src=&#34;../../assets/bindtree1.gif&#34; alt=&#34;image&#34;&gt;&lt;br&gt;整体思路是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始化栈，将根节点入栈&lt;/li&gt;
&lt;li&gt;当栈不为空时，弹出栈顶元素&lt;/li&gt;
&lt;li&gt;如果栈顶元素右子树不为空，那么将右子树压入栈中&lt;/li&gt;
&lt;li&gt;如果栈顶元素左子树不为空，那么将左子树压入栈中&lt;br&gt;前序遍历的迭代方式代码为：&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;def preorderTraversal(self, root: Optional[TreeNode]) -&amp;gt; List[int]:
  if not root:
      return []
  stack, ans = [root], []
  while stack:
      node = stack.pop()
      if node:
          ans.append(node.val)
          if node.right:
              stack.append(node.right)
          if node.left:
              stack.append(node.left)
  return ans
&lt;/code&gt;&lt;/pre&gt;
为什么弹出栈顶节点后，先将右子树压入栈中？因为这是前序遍历，而且栈是先入后出，如果我们想要做到遍历“根-&amp;gt;左子树-&amp;gt;右子树”，那么就要先把右子树压入栈中，再压入左子树。这样后入的左子树就能先被弹出遍历。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一种方便理解的思路，当然还有一种模板式的迭代前序遍历思路，也学习自腐烂的橘子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先将根节点cur和所有的左子树压入栈并加入结果中，直至cur为空。&lt;/li&gt;
&lt;li&gt;然后每弹出一个栈顶元素tmp，就到达它的右子树，再将这个节点当作cur，继续按照前面的步骤再来一遍，直至栈为空。&lt;/li&gt;
&lt;li&gt;代码如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;../../assets/bindtree2.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;def preorderTraversal(self, root: Optional[TreeNode]) -&amp;gt; List[int]:
    if not root:
        return []
    cur, stack, ans = root, [], []
    while cur or stack:
        while cur:
            ans.append(cur.val)
            stack.append(cur)
            cur = cur.left
        tmp = stack.pop()
        cur = tmp.right
    return ans
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样，首先确保根节点和左子树首先进入栈中，此时遍历到树底部，然后再一一从栈中取出节点，并到达右子树继续遍历。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的中序遍历：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1pbm9yZGVyLXRyYXZlcnNhbC9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/binary-tree-inorder-traversal/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;二叉树的迭代版本中序遍历：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;def inorderTraversal(self, root: Optional[TreeNode]) -&amp;gt; List[int]:
    if not root:
        return []
    cur, stack, ans = root, [], []
    while cur or stack:
        while cur:
            stack.append(cur)
            cur = cur.left
        tmp = stack.pop()
        ans.append(tmp.val)    # 同样只移动了这行代码
        cur = tmp.right
    return ans
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当内层while循环结束时，说明遍历到了二叉树最底层。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的后序遍历：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wb3N0b3JkZXItdHJhdmVyc2FsL2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/binary-tree-postorder-traversal/description/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;二叉树的“后序遍历”，本质上是二叉树“从右侧开始的前序遍历”。&lt;br&gt;你可以尝试对一个二叉树进行前序遍历，然后反向所得到的列表结果，就是二叉树的后序遍历。按照这个思路，则有该代码：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;def postorderTraversal(self, root: Optional[TreeNode]) -&amp;gt; List[int]:
    if not root:
        return []
    cur, stack, ans = root, [], []
    while cur or stack:
        while cur:
            ans.append(cur.val)
            stack.append(cur)
            cur = cur.right
        tmp = stack.pop()
        cur = tmp.left
    return ans[::-1]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;叶子相似的树：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sZWFmLXNpbWlsYXItdHJlZXMvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/leaf-similar-trees/description/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;[自顶向下DFS]{.rainbow}：&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;自顶向下DFS通常是在[递]的过程中维护一个值。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的最大深度（入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/maximum-depth-of-binary-tree/description/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的最小深度（入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/minimum-depth-of-binary-tree/description/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;路径总和：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXRoLXN1bS9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/path-sum/description/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;求根节点到叶节点数字之和（向下传递累积值）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdW0tcm9vdC10by1sZWFmLW51bWJlcnMvZGVzY3JpcHRpb24v&#34;&gt;https://leetcode.cn/problems/sum-root-to-leaf-numbers/description/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的右视图（灵活运用DFS）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1yaWdodC1zaWRlLXZpZXcv&#34;&gt;https://leetcode.cn/problems/binary-tree-right-side-view/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;统计二叉树中好节点的数目（向下传递最大值）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudC1nb29kLW5vZGVzLWluLWJpbmFyeS10cmVlLw==&#34;&gt;https://leetcode.cn/problems/count-good-nodes-in-binary-tree/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树中的伪回文路径：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wc2V1ZG8tcGFsaW5kcm9taWMtcGF0aHMtaW4tYS1iaW5hcnktdHJlZS8=&#34;&gt;https://leetcode.cn/problems/pseudo-palindromic-paths-in-a-binary-tree/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;[自底向上DFS]{.rainbow}：&lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;在[归]的过程中进行计算。&lt;br&gt;入门自底向上DFS很容易，但是掌握好还是稍有难度的。&lt;br&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的最大深度：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlLw==&#34;&gt;https://leetcode.cn/problems/maximum-depth-of-binary-tree/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的最小深度：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlLw==&#34;&gt;https://leetcode.cn/problems/minimum-depth-of-binary-tree/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;单值二叉树（掌握自底向上DFS的条件判断）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bml2YWx1ZWQtYmluYXJ5LXRyZWUv&#34;&gt;https://leetcode.cn/problems/univalued-binary-tree/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;相同的树（先讨论根节点再讨论左右子树）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zYW1lLXRyZWUv&#34;&gt;https://leetcode.cn/problems/same-tree/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;对称二叉树：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS8=&#34;&gt;https://leetcode.cn/problems/symmetric-tree/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;翻转等价二叉树：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9mbGlwLWVxdWl2YWxlbnQtYmluYXJ5LXRyZWVzLw==&#34;&gt;https://leetcode.cn/problems/flip-equivalent-binary-trees/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;找出克隆二叉树中的相同节点（在二叉树中递归寻找目标值）： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWEtY29ycmVzcG9uZGluZy1ub2RlLW9mLWEtYmluYXJ5LXRyZWUtaW4tYS1jbG9uZS1vZi10aGF0LXRyZWUv&#34;&gt;https://leetcode.cn/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;平衡二叉树（利用非法值快速回到递归入口）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iYWxhbmNlZC1iaW5hcnktdHJlZS8=&#34;&gt;https://leetcode.cn/problems/balanced-binary-tree/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;翻转二叉树：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnZlcnQtYmluYXJ5LXRyZWUv&#34;&gt;https://leetcode.cn/problems/invert-binary-tree/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;合并二叉树：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzLw==&#34;&gt;https://leetcode.cn/problems/merge-two-binary-trees/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自底向上 DFS：删点&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树剪枝：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wcnVuaW5nLw==&#34;&gt;https://leetcode.cn/problems/binary-tree-pruning/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;删除给定值的叶子节点：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWxldGUtbGVhdmVzLXdpdGgtYS1naXZlbi12YWx1ZS8=&#34;&gt;https://leetcode.cn/problems/delete-leaves-with-a-given-value/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;删点成林：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWxldGUtbm9kZXMtYW5kLXJldHVybi1mb3Jlc3Qv&#34;&gt;https://leetcode.cn/problems/delete-nodes-and-return-forest/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二叉搜索树&lt;/strong&gt;：&lt;br&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉搜索树中的搜索：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW4tYS1iaW5hcnktc2VhcmNoLXRyZWUv&#34;&gt;https://leetcode.cn/problems/search-in-a-binary-search-tree/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;回溯&lt;/strong&gt;：&lt;br&gt;&lt;code&gt;LeetCode——&lt;/code&gt;二叉树的所有路径：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wYXRocy9kZXNjcmlwdGlvbi8=&#34;&gt;https://leetcode.cn/problems/binary-tree-paths/description/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;h1 id=&#34;贪心-blue&#34;&gt;&lt;a href=&#34;#贪心-blue&#34; class=&#34;headerlink&#34; title=&#34;[贪心]{.blue}&#34;&gt;&lt;/a&gt;[贪心]{.blue}&lt;/h1&gt;&lt;p&gt;[从最大/最小开始贪心]{.rainbow}：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;重新分装苹果（排序+贪心，无脑题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hcHBsZS1yZWRpc3RyaWJ1dGlvbi1pbnRvLWJveGVzL2Rlc2NyaXB0aW9uLw==&#34;&gt;https://leetcode.cn/problems/apple-redistribution-into-boxes/description/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;装满石头的背包的最大数量（排序贪心，同无脑题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWJhZ3Mtd2l0aC1mdWxsLWNhcGFjaXR5LW9mLXJvY2tzLw==&#34;&gt;https://leetcode.cn/problems/maximum-bags-with-full-capacity-of-rocks/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;雪糕的最大数量（继续感受无脑贪心）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWljZS1jcmVhbS1iYXJzLw==&#34;&gt;https://leetcode.cn/problems/maximum-ice-cream-bars/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;K次取反后最大化的数组和（检验排序贪心的真正入门题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWl6ZS1zdW0tb2YtYXJyYXktYWZ0ZXItay1uZWdhdGlvbnMv&#34;&gt;https://leetcode.cn/problems/maximize-sum-of-array-after-k-negations/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;不同整数的最少数目（哈希+排序贪心）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sZWFzdC1udW1iZXItb2YtdW5pcXVlLWludGVnZXJzLWFmdGVyLWstcmVtb3ZhbHMv&#34;&gt;https://leetcode.cn/problems/least-number-of-unique-integers-after-k-removals/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;+++info Summary&lt;br&gt;小技巧——用collections.Counter统计一个序列或可迭代对象每个迭代对象的次数，基本用法：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-python&#34;&gt;from collections import Counter

# 使用字符串初始化Counter
counter = Counter(&amp;quot;mississippi&amp;quot;)
print(counter) # 输出: Counter(&amp;#123;&amp;#39;i&amp;#39;: 4, &amp;#39;s&amp;#39;: 4, &amp;#39;p&amp;#39;: 2, &amp;#39;m&amp;#39;: 1&amp;#125;)

# 使用列表初始化Counter
counter = Counter(list(&amp;quot;mississippi&amp;quot;))
print(counter) # 输出: Counter(&amp;#123;&amp;#39;i&amp;#39;: 4, &amp;#39;s&amp;#39;: 4, &amp;#39;p&amp;#39;: 2, &amp;#39;m&amp;#39;: 1&amp;#125;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;非递增顺序的最小子序列（依然是排序贪心）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXN1YnNlcXVlbmNlLWluLW5vbi1pbmNyZWFzaW5nLW9yZGVyLw==&#34;&gt;https://leetcode.cn/problems/minimum-subsequence-in-non-increasing-order/&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;将数组分成最小总代价的子数组I（纯排序题）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kaXZpZGUtYW4tYXJyYXktaW50by1zdWJhcnJheXMtd2l0aC1taW5pbXVtLWNvc3QtaS8=&#34;&gt;https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-i/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;数组大小减半：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZWR1Y2UtYXJyYXktc2l6ZS10by10aGUtaGFsZi8=&#34;&gt;https://leetcode.cn/problems/reduce-array-size-to-the-half/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;卡车上的最大单元数：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXVuaXRzLW9uLWEtdHJ1Y2sv&#34;&gt;https://leetcode.cn/problems/maximum-units-on-a-truck/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;幸福值最大化的选择方案：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWl6ZS1oYXBwaW5lc3Mtb2Ytc2VsZWN0ZWQtY2hpbGRyZW4v&#34;&gt;https://leetcode.cn/problems/maximize-happiness-of-selected-children/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;[单序列配对]{.rainbow}&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;打折购买糖果的最小开销：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLWNvc3Qtb2YtYnV5aW5nLWNhbmRpZXMtd2l0aC1kaXNjb3VudC8=&#34;&gt;https://leetcode.cn/problems/minimum-cost-of-buying-candies-with-discount/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;数组拆分：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hcnJheS1wYXJ0aXRpb24v&#34;&gt;https://leetcode.cn/problems/array-partition/&lt;/span&gt; :fire:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LeetCode——&lt;/code&gt;数组中最大数对和的最小值：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbWl6ZS1tYXhpbXVtLXBhaXItc3VtLWluLWFycmF5Lw==&#34;&gt;https://leetcode.cn/problems/minimize-maximum-pair-sum-in-array/&lt;/span&gt; :fire:&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yunhdan.github.io/cs/Javascript%E7%9F%A5%E8%AF%86%E6%A0%91/</guid>
            <title>Javascript知识树</title>
            <link>https://yunhdan.github.io/cs/Javascript%E7%9F%A5%E8%AF%86%E6%A0%91/</link>
            <category term="计算机" scheme="https://yunhdan.github.io/categories/cs/" />
            <pubDate>Fri, 14 Feb 2025 11:39:52 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;基础&#34;&gt;&lt;a href=&#34;#基础&#34; class=&#34;headerlink&#34; title=&#34;基础&#34;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;h4 id=&#34;作用域：菜鸟教程&#34;&gt;&lt;a href=&#34;#作用域：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;作用域：菜鸟教程&#34;&gt;&lt;/a&gt;作用域：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy1zY29wZS5odG1s&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;局部作用域&lt;/strong&gt;、&lt;strong&gt;全局变量&lt;/strong&gt;、&lt;strong&gt;变量生命周期&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要特别关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果变量在函数内部没有声明（没有使用&lt;code&gt;var&lt;/code&gt;关键字），则该变量为全局变量。&lt;/li&gt;
&lt;li&gt;所有全局变量属于&lt;code&gt;Window&lt;/code&gt;对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;函数：菜鸟教程&#34;&gt;&lt;a href=&#34;#函数：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;函数：菜鸟教程&#34;&gt;&lt;/a&gt;函数：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy1mdW5jdGlvbnMuaHRtbA==&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;函数的语法&lt;/strong&gt;、&lt;strong&gt;参数传递&lt;/strong&gt;、&lt;strong&gt;返回值&lt;/strong&gt;、&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要特别关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;return&lt;/code&gt;可接返回值，返回值可有可无。&lt;/li&gt;
&lt;li&gt;在函数内部声明的变量（使用&lt;code&gt;var&lt;/code&gt;）是局部变量。函数运行完毕，局部变量就会被删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;数据类型：菜鸟教程&#34;&gt;&lt;a href=&#34;#数据类型：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;数据类型：菜鸟教程&#34;&gt;&lt;/a&gt;数据类型：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy1kYXRhdHlwZXMuaHRtbA==&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;数据类型的分类&lt;/strong&gt;、&lt;strong&gt;动态类型的概念&lt;/strong&gt;、&lt;strong&gt;字符串类型&lt;/strong&gt;、&lt;strong&gt;数字类型&lt;/strong&gt;、&lt;strong&gt;布尔类型&lt;/strong&gt;、&lt;strong&gt;数组类型&lt;/strong&gt;、&lt;strong&gt;对象类型&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;undefined&lt;/code&gt;与&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;new&lt;/code&gt;关键字声明变量类型&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要特别关注：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以用&lt;code&gt;typeof&lt;/code&gt;查看变量的数据类型。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Symbol&lt;/code&gt;数据类型表示独一无二的值。&lt;/li&gt;
&lt;li&gt;对象的声明可以跨越多行，空格和折行无关紧要。&lt;/li&gt;
&lt;li&gt;对象的属性有两种寻址方式（获取方式）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;变量：菜鸟教程&#34;&gt;&lt;a href=&#34;#变量：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;变量：菜鸟教程&#34;&gt;&lt;/a&gt;变量：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy12YXJpYWJsZXMuaHRtbA==&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;声明变量&lt;/strong&gt;、&lt;strong&gt;一条语句声明多个变量&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;let&lt;/code&gt;与c&lt;code&gt;onst&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要特别注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Javascript&lt;/code&gt;的语句和变量都对大小写敏感。&lt;/li&gt;
&lt;li&gt;变量尽量以字母开头。&lt;/li&gt;
&lt;li&gt;如果重新声明&lt;code&gt;Javascript&lt;/code&gt;变量，该变量的值不会丢失。&lt;/li&gt;
&lt;li&gt;声明变量时未指定值，则默认为&lt;code&gt;undefined&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;注释：菜鸟教程&#34;&gt;&lt;a href=&#34;#注释：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;注释：菜鸟教程&#34;&gt;&lt;/a&gt;注释：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy1jb21tZW50cy5odG1s&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;单行注释方法&lt;/strong&gt;、&lt;strong&gt;多行注释方法&lt;/strong&gt;、&lt;strong&gt;行末注释方法&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;语句：菜鸟教程&#34;&gt;&lt;a href=&#34;#语句：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;语句：菜鸟教程&#34;&gt;&lt;/a&gt;语句：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy1zdGF0ZW1lbnRzLmh0bWw=&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;分号作用&lt;/strong&gt;、&lt;strong&gt;关键字表&lt;/strong&gt;、&lt;strong&gt;对代码行进行拆行&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要特别注意的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用分号来结束语句是可有可无的。&lt;/li&gt;
&lt;li&gt;空格用于增加可读性，&lt;code&gt;Javascript&lt;/code&gt;会自动省略多余空格。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;输出：菜鸟教程&#34;&gt;&lt;a href=&#34;#输出：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;输出：菜鸟教程&#34;&gt;&lt;/a&gt;输出：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy1vdXRwdXQuaHRtbA==&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;&lt;code&gt;window.alert()&lt;/code&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;getElementById()&lt;/code&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;用法：菜鸟教程&#34;&gt;&lt;a href=&#34;#用法：菜鸟教程&#34; class=&#34;headerlink&#34; title=&#34;用法：菜鸟教程&#34;&gt;&lt;/a&gt;用法：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9qcy9qcy1ob3d0by5odG1s&#34;&gt;菜鸟教程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;涵盖知识：&lt;strong&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签&lt;/strong&gt;、&lt;strong&gt;&lt;code&gt;Javascript&lt;/code&gt;的三种插入方式&lt;/strong&gt;。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
